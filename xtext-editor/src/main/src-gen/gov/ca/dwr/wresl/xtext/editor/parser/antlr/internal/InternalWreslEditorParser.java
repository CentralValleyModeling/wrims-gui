package gov.ca.dwr.wresl.xtext.editor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import gov.ca.dwr.wresl.xtext.editor.services.WreslEditorGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalWreslEditorParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Daysintimestep", "Daysinmonth", "Timeseries", "Condition", "Constrain", "Objective", "Unbounded", "Wateryear", "External", "Sequence", "Timestep", "Declare", "Cfs_taf", "Convert", "Include", "Initial_1", "Integer", "Penalty", "Prevapr", "Prevaug", "Prevdec", "Prevfeb", "Prevjan", "Prevjul", "Prevjun", "Prevmar", "Prevmay", "Prevnov", "Prevoct", "Prevsep", "Taf_cfs", "Af_cfs", "Cfs_af", "Daysin", "Define", "Select", "Alias", "Const_1", "Given", "Group", "Local", "Lower", "Model", "Month", "Units", "Upper", "Value", "Where", "Dll", "DAY", "MON", "Case", "Dvar_1", "From", "Goal", "Kind", "Svar_1", "Apr", "Aug", "Day", "Dec", "Feb", "Jan", "Jul", "Jun", "Lhs", "Mar", "May", "Nov", "Oct", "Rhs", "Sep", "Std", "Sum", "Use", "M", "SolidusEqualsSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "GreaterThanSignEqualsSign", "I_1", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "I", "LeftCurlyBracket", "RightCurlyBracket", "RULE_IF", "RULE_ELSEIF", "RULE_ELSE", "RULE_RANGE", "RULE_MIN", "RULE_MAX", "RULE_MOD", "RULE_INTFUNC", "RULE_ABS", "RULE_ROUND", "RULE_POW", "RULE_LOG", "RULE_SIN", "RULE_COS", "RULE_TAN", "RULE_COT", "RULE_ASIN", "RULE_ACOS", "RULE_ATAN", "RULE_ACOT", "RULE_INT", "RULE_FLOAT", "RULE_AND", "RULE_OR", "RULE_NOT", "RULE_ALWAYS", "RULE_ORDER", "RULE_STRING", "RULE_SL_COMMENT", "RULE_ID", "RULE_ML_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Oct=73;
    public static final int Apr=61;
    public static final int Std=76;
    public static final int Wateryear=11;
    public static final int LessThanSign=93;
    public static final int Prevjul=27;
    public static final int Prevfeb=25;
    public static final int Prevjun=28;
    public static final int Month=47;
    public static final int Goal=58;
    public static final int Define=38;
    public static final int LeftParenthesis=85;
    public static final int Constrain=8;
    public static final int RULE_ASIN=117;
    public static final int RULE_OR=124;
    public static final int GreaterThanSign=95;
    public static final int RULE_ATAN=119;
    public static final int RULE_MOD=107;
    public static final int RULE_ID=130;
    public static final int Local=44;
    public static final int Sum=77;
    public static final int Timestep=14;
    public static final int GreaterThanSignEqualsSign=83;
    public static final int EqualsSignEqualsSign=82;
    public static final int PlusSign=88;
    public static final int RULE_INT=121;
    public static final int RULE_ML_COMMENT=131;
    public static final int LeftSquareBracket=96;
    public static final int Where=51;
    public static final int Mar=70;
    public static final int Sep=75;
    public static final int Group=43;
    public static final int May=71;
    public static final int Daysin=37;
    public static final int Timeseries=6;
    public static final int Given=42;
    public static final int I=98;
    public static final int Initial_1=19;
    public static final int M=79;
    public static final int Daysinmonth=5;
    public static final int RULE_POW=111;
    public static final int Case=55;
    public static final int Comma=89;
    public static final int HyphenMinus=90;
    public static final int Cfs_af=36;
    public static final int RULE_MIN=105;
    public static final int Lhs=69;
    public static final int RULE_IF=101;
    public static final int RULE_LOG=112;
    public static final int LessThanSignEqualsSign=81;
    public static final int Solidus=91;
    public static final int RightCurlyBracket=100;
    public static final int Upper=49;
    public static final int Jul=67;
    public static final int Feb=65;
    public static final int Jun=68;
    public static final int Convert=17;
    public static final int Use=78;
    public static final int Prevmar=29;
    public static final int Prevsep=33;
    public static final int Declare=15;
    public static final int Unbounded=10;
    public static final int Taf_cfs=34;
    public static final int Prevmay=30;
    public static final int Select=39;
    public static final int Model=46;
    public static final int RULE_FLOAT=122;
    public static final int DAY=53;
    public static final int Day=63;
    public static final int RULE_ROUND=110;
    public static final int Lower=45;
    public static final int RULE_TAN=115;
    public static final int SolidusEqualsSign=80;
    public static final int Include=18;
    public static final int Prevdec=24;
    public static final int RULE_ELSEIF=102;
    public static final int Aug=62;
    public static final int Kind=59;
    public static final int RightSquareBracket=97;
    public static final int RULE_COS=114;
    public static final int RULE_COT=116;
    public static final int Prevjan=26;
    public static final int RightParenthesis=86;
    public static final int Sequence=13;
    public static final int Prevoct=32;
    public static final int Units=48;
    public static final int Objective=9;
    public static final int Prevapr=22;
    public static final int Nov=72;
    public static final int RULE_ABS=109;
    public static final int External=12;
    public static final int Value=50;
    public static final int I_1=84;
    public static final int RULE_MAX=106;
    public static final int RULE_ELSE=103;
    public static final int Prevaug=23;
    public static final int Af_cfs=35;
    public static final int Dll=52;
    public static final int RULE_ACOS=118;
    public static final int RULE_ACOT=120;
    public static final int RULE_STRING=128;
    public static final int RULE_NOT=125;
    public static final int RULE_SIN=113;
    public static final int RULE_AND=123;
    public static final int RULE_SL_COMMENT=129;
    public static final int EqualsSign=94;
    public static final int Const_1=41;
    public static final int Colon=92;
    public static final int Rhs=74;
    public static final int EOF=-1;
    public static final int Asterisk=87;
    public static final int Condition=7;
    public static final int Prevnov=31;
    public static final int Dvar_1=56;
    public static final int Dec=64;
    public static final int RULE_WS=132;
    public static final int Svar_1=60;
    public static final int LeftCurlyBracket=99;
    public static final int RULE_ORDER=127;
    public static final int RULE_ALWAYS=126;
    public static final int From=57;
    public static final int RULE_ANY_OTHER=133;
    public static final int MON=54;
    public static final int Penalty=21;
    public static final int Daysintimestep=4;
    public static final int Integer=20;
    public static final int Alias=40;
    public static final int Jan=66;
    public static final int RULE_INTFUNC=108;
    public static final int Cfs_taf=16;
    public static final int RULE_RANGE=104;

    // delegates
    // delegators


        public InternalWreslEditorParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalWreslEditorParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalWreslEditorParser.tokenNames; }
    public String getGrammarFileName() { return "InternalWreslEditorParser.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     

    	private WreslEditorGrammarAccess grammarAccess;
    	 	
    	public InternalWreslEditorParser(TokenStream input, WreslEditorGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "WreslEvaluator";	
    	} 
    	   	   	
    	@Override
    	protected WreslEditorGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}



    // $ANTLR start "entryRuleWreslEvaluator"
    // InternalWreslEditorParser.g:67:1: entryRuleWreslEvaluator returns [EObject current=null] : iv_ruleWreslEvaluator= ruleWreslEvaluator EOF ;
    public final EObject entryRuleWreslEvaluator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWreslEvaluator = null;


        try {
            // InternalWreslEditorParser.g:68:2: (iv_ruleWreslEvaluator= ruleWreslEvaluator EOF )
            // InternalWreslEditorParser.g:69:2: iv_ruleWreslEvaluator= ruleWreslEvaluator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWreslEvaluatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWreslEvaluator=ruleWreslEvaluator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWreslEvaluator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWreslEvaluator"


    // $ANTLR start "ruleWreslEvaluator"
    // InternalWreslEditorParser.g:76:1: ruleWreslEvaluator returns [EObject current=null] : ( ( ( (lv_pattern_0_0= rulePattern ) ) | ( (lv_ifincitem_1_0= ruleIfIncItems ) ) )+ | ( ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+ ) | this_Declaration_5= ruleDeclaration ) ;
    public final EObject ruleWreslEvaluator() throws RecognitionException {
        EObject current = null;

        EObject lv_pattern_0_0 = null;

        EObject lv_ifincitem_1_0 = null;

        EObject lv_initial_2_0 = null;

        EObject lv_sequence_3_0 = null;

        EObject lv_model_4_1 = null;

        EObject lv_model_4_2 = null;

        EObject this_Declaration_5 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:79:28: ( ( ( ( (lv_pattern_0_0= rulePattern ) ) | ( (lv_ifincitem_1_0= ruleIfIncItems ) ) )+ | ( ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+ ) | this_Declaration_5= ruleDeclaration ) )
            // InternalWreslEditorParser.g:80:1: ( ( ( (lv_pattern_0_0= rulePattern ) ) | ( (lv_ifincitem_1_0= ruleIfIncItems ) ) )+ | ( ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+ ) | this_Declaration_5= ruleDeclaration )
            {
            // InternalWreslEditorParser.g:80:1: ( ( ( (lv_pattern_0_0= rulePattern ) ) | ( (lv_ifincitem_1_0= ruleIfIncItems ) ) )+ | ( ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+ ) | this_Declaration_5= ruleDeclaration )
            int alt6=3;
            switch ( input.LA(1) ) {
            case Objective:
            case Include:
            case Define:
            case Const_1:
            case Dvar_1:
            case Goal:
            case Svar_1:
            case RULE_IF:
                {
                alt6=1;
                }
                break;
            case Condition:
            case Sequence:
            case Timestep:
            case Initial_1:
            case RightCurlyBracket:
            case RULE_ORDER:
                {
                alt6=2;
                }
                break;
            case Declare:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalWreslEditorParser.g:80:2: ( ( (lv_pattern_0_0= rulePattern ) ) | ( (lv_ifincitem_1_0= ruleIfIncItems ) ) )+
                    {
                    // InternalWreslEditorParser.g:80:2: ( ( (lv_pattern_0_0= rulePattern ) ) | ( (lv_ifincitem_1_0= ruleIfIncItems ) ) )+
                    int cnt1=0;
                    loop1:
                    do {
                        int alt1=3;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==Objective||LA1_0==Include||LA1_0==Define||LA1_0==Const_1||LA1_0==Dvar_1||LA1_0==Goal||LA1_0==Svar_1) ) {
                            alt1=1;
                        }
                        else if ( (LA1_0==RULE_IF) ) {
                            alt1=2;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalWreslEditorParser.g:80:3: ( (lv_pattern_0_0= rulePattern ) )
                    	    {
                    	    // InternalWreslEditorParser.g:80:3: ( (lv_pattern_0_0= rulePattern ) )
                    	    // InternalWreslEditorParser.g:81:1: (lv_pattern_0_0= rulePattern )
                    	    {
                    	    // InternalWreslEditorParser.g:81:1: (lv_pattern_0_0= rulePattern )
                    	    // InternalWreslEditorParser.g:82:3: lv_pattern_0_0= rulePattern
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getPatternPatternParserRuleCall_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_pattern_0_0=rulePattern();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"pattern",
                    	              		lv_pattern_0_0, 
                    	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalWreslEditorParser.g:99:6: ( (lv_ifincitem_1_0= ruleIfIncItems ) )
                    	    {
                    	    // InternalWreslEditorParser.g:99:6: ( (lv_ifincitem_1_0= ruleIfIncItems ) )
                    	    // InternalWreslEditorParser.g:100:1: (lv_ifincitem_1_0= ruleIfIncItems )
                    	    {
                    	    // InternalWreslEditorParser.g:100:1: (lv_ifincitem_1_0= ruleIfIncItems )
                    	    // InternalWreslEditorParser.g:101:3: lv_ifincitem_1_0= ruleIfIncItems
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getIfincitemIfIncItemsParserRuleCall_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_ifincitem_1_0=ruleIfIncItems();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ifincitem",
                    	              		lv_ifincitem_1_0, 
                    	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.IfIncItems");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt1 >= 1 ) break loop1;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(1, input);
                                throw eee;
                        }
                        cnt1++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:118:6: ( ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+ )
                    {
                    // InternalWreslEditorParser.g:118:6: ( ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+ )
                    // InternalWreslEditorParser.g:118:7: ( (lv_initial_2_0= ruleInitial ) )? ( (lv_sequence_3_0= ruleSequence ) )+ ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+
                    {
                    // InternalWreslEditorParser.g:118:7: ( (lv_initial_2_0= ruleInitial ) )?
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( (LA2_0==Initial_1) ) {
                        alt2=1;
                    }
                    switch (alt2) {
                        case 1 :
                            // InternalWreslEditorParser.g:119:1: (lv_initial_2_0= ruleInitial )
                            {
                            // InternalWreslEditorParser.g:119:1: (lv_initial_2_0= ruleInitial )
                            // InternalWreslEditorParser.g:120:3: lv_initial_2_0= ruleInitial
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getInitialInitialParserRuleCall_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_4);
                            lv_initial_2_0=ruleInitial();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initial",
                                      		lv_initial_2_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Initial");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:136:3: ( (lv_sequence_3_0= ruleSequence ) )+
                    int cnt3=0;
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==Condition||(LA3_0>=Sequence && LA3_0<=Timestep)||LA3_0==RightCurlyBracket||LA3_0==RULE_ORDER) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalWreslEditorParser.g:137:1: (lv_sequence_3_0= ruleSequence )
                    	    {
                    	    // InternalWreslEditorParser.g:137:1: (lv_sequence_3_0= ruleSequence )
                    	    // InternalWreslEditorParser.g:138:3: lv_sequence_3_0= ruleSequence
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getSequenceSequenceParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_sequence_3_0=ruleSequence();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"sequence",
                    	              		lv_sequence_3_0, 
                    	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Sequence");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt3 >= 1 ) break loop3;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(3, input);
                                throw eee;
                        }
                        cnt3++;
                    } while (true);

                    // InternalWreslEditorParser.g:154:3: ( ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) ) )+
                    int cnt5=0;
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==Group||LA5_0==Model) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalWreslEditorParser.g:155:1: ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) )
                    	    {
                    	    // InternalWreslEditorParser.g:155:1: ( (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup ) )
                    	    // InternalWreslEditorParser.g:156:1: (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup )
                    	    {
                    	    // InternalWreslEditorParser.g:156:1: (lv_model_4_1= ruleModel | lv_model_4_2= ruleGroup )
                    	    int alt4=2;
                    	    int LA4_0 = input.LA(1);

                    	    if ( (LA4_0==Model) ) {
                    	        alt4=1;
                    	    }
                    	    else if ( (LA4_0==Group) ) {
                    	        alt4=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 4, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt4) {
                    	        case 1 :
                    	            // InternalWreslEditorParser.g:157:3: lv_model_4_1= ruleModel
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getModelModelParserRuleCall_1_2_0_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_6);
                    	            lv_model_4_1=ruleModel();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"model",
                    	                      		lv_model_4_1, 
                    	                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Model");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalWreslEditorParser.g:172:8: lv_model_4_2= ruleGroup
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getModelGroupParserRuleCall_1_2_0_1()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_6);
                    	            lv_model_4_2=ruleGroup();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"model",
                    	                      		lv_model_4_2, 
                    	                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Group");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt5 >= 1 ) break loop5;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(5, input);
                                throw eee;
                        }
                        cnt5++;
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:192:2: this_Declaration_5= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Declaration_5=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Declaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWreslEvaluator"


    // $ANTLR start "entryRulePattern"
    // InternalWreslEditorParser.g:211:1: entryRulePattern returns [EObject current=null] : iv_rulePattern= rulePattern EOF ;
    public final EObject entryRulePattern() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePattern = null;


        try {
            // InternalWreslEditorParser.g:212:2: (iv_rulePattern= rulePattern EOF )
            // InternalWreslEditorParser.g:213:2: iv_rulePattern= rulePattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePattern=rulePattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePattern"


    // $ANTLR start "rulePattern"
    // InternalWreslEditorParser.g:220:1: rulePattern returns [EObject current=null] : (this_Variable_0= ruleVariable | this_IncludeFile_1= ruleIncludeFile | ruleIncludeModel | ruleIncludeGroup | this_Goal_4= ruleGoal | this_Objective_5= ruleObjective ) ;
    public final EObject rulePattern() throws RecognitionException {
        EObject current = null;

        EObject this_Variable_0 = null;

        EObject this_IncludeFile_1 = null;

        EObject this_Goal_4 = null;

        EObject this_Objective_5 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:223:28: ( (this_Variable_0= ruleVariable | this_IncludeFile_1= ruleIncludeFile | ruleIncludeModel | ruleIncludeGroup | this_Goal_4= ruleGoal | this_Objective_5= ruleObjective ) )
            // InternalWreslEditorParser.g:224:1: (this_Variable_0= ruleVariable | this_IncludeFile_1= ruleIncludeFile | ruleIncludeModel | ruleIncludeGroup | this_Goal_4= ruleGoal | this_Objective_5= ruleObjective )
            {
            // InternalWreslEditorParser.g:224:1: (this_Variable_0= ruleVariable | this_IncludeFile_1= ruleIncludeFile | ruleIncludeModel | ruleIncludeGroup | this_Goal_4= ruleGoal | this_Objective_5= ruleObjective )
            int alt7=6;
            switch ( input.LA(1) ) {
            case Define:
            case Const_1:
            case Dvar_1:
            case Svar_1:
                {
                alt7=1;
                }
                break;
            case Include:
                {
                switch ( input.LA(2) ) {
                case Group:
                    {
                    alt7=4;
                    }
                    break;
                case LeftSquareBracket:
                case RULE_STRING:
                    {
                    alt7=2;
                    }
                    break;
                case Model:
                    {
                    alt7=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }

                }
                break;
            case Goal:
                {
                alt7=5;
                }
                break;
            case Objective:
                {
                alt7=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalWreslEditorParser.g:225:2: this_Variable_0= ruleVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getVariableParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Variable_0=ruleVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Variable_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:238:2: this_IncludeFile_1= ruleIncludeFile
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getIncludeFileParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IncludeFile_1=ruleIncludeFile();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IncludeFile_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:251:2: ruleIncludeModel
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getIncludeModelParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleIncludeModel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:263:2: ruleIncludeGroup
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getIncludeGroupParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleIncludeGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:275:2: this_Goal_4= ruleGoal
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getGoalParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Goal_4=ruleGoal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Goal_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:288:2: this_Objective_5= ruleObjective
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getObjectiveParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Objective_5=ruleObjective();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Objective_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePattern"


    // $ANTLR start "entryRuleDeclaration"
    // InternalWreslEditorParser.g:307:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalWreslEditorParser.g:308:2: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalWreslEditorParser.g:309:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalWreslEditorParser.g:316:1: ruleDeclaration returns [EObject current=null] : (otherlv_0= Declare otherlv_1= LeftCurlyBracket ( (lv_name_2_0= RULE_ID ) ) otherlv_3= RightCurlyBracket ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:319:28: ( (otherlv_0= Declare otherlv_1= LeftCurlyBracket ( (lv_name_2_0= RULE_ID ) ) otherlv_3= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:320:1: (otherlv_0= Declare otherlv_1= LeftCurlyBracket ( (lv_name_2_0= RULE_ID ) ) otherlv_3= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:320:1: (otherlv_0= Declare otherlv_1= LeftCurlyBracket ( (lv_name_2_0= RULE_ID ) ) otherlv_3= RightCurlyBracket )
            // InternalWreslEditorParser.g:321:2: otherlv_0= Declare otherlv_1= LeftCurlyBracket ( (lv_name_2_0= RULE_ID ) ) otherlv_3= RightCurlyBracket
            {
            otherlv_0=(Token)match(input,Declare,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDeclarationAccess().getDeclareKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDeclarationAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:330:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalWreslEditorParser.g:331:1: (lv_name_2_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:331:1: (lv_name_2_0= RULE_ID )
            // InternalWreslEditorParser.g:332:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDeclarationRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDeclarationAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleVariable"
    // InternalWreslEditorParser.g:361:1: entryRuleVariable returns [EObject current=null] : iv_ruleVariable= ruleVariable EOF ;
    public final EObject entryRuleVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariable = null;


        try {
            // InternalWreslEditorParser.g:362:2: (iv_ruleVariable= ruleVariable EOF )
            // InternalWreslEditorParser.g:363:2: iv_ruleVariable= ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariable=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalWreslEditorParser.g:370:1: ruleVariable returns [EObject current=null] : (this_StateVariable_0= ruleStateVariable | this_DecisionVariable_1= ruleDecisionVariable | this_ExternalDef_2= ruleExternalDef ) ;
    public final EObject ruleVariable() throws RecognitionException {
        EObject current = null;

        EObject this_StateVariable_0 = null;

        EObject this_DecisionVariable_1 = null;

        EObject this_ExternalDef_2 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:373:28: ( (this_StateVariable_0= ruleStateVariable | this_DecisionVariable_1= ruleDecisionVariable | this_ExternalDef_2= ruleExternalDef ) )
            // InternalWreslEditorParser.g:374:1: (this_StateVariable_0= ruleStateVariable | this_DecisionVariable_1= ruleDecisionVariable | this_ExternalDef_2= ruleExternalDef )
            {
            // InternalWreslEditorParser.g:374:1: (this_StateVariable_0= ruleStateVariable | this_DecisionVariable_1= ruleDecisionVariable | this_ExternalDef_2= ruleExternalDef )
            int alt8=3;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalWreslEditorParser.g:375:2: this_StateVariable_0= ruleStateVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableAccess().getStateVariableParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StateVariable_0=ruleStateVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StateVariable_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:388:2: this_DecisionVariable_1= ruleDecisionVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableAccess().getDecisionVariableParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DecisionVariable_1=ruleDecisionVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DecisionVariable_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:401:2: this_ExternalDef_2= ruleExternalDef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableAccess().getExternalDefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExternalDef_2=ruleExternalDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExternalDef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleStateVariable"
    // InternalWreslEditorParser.g:420:1: entryRuleStateVariable returns [EObject current=null] : iv_ruleStateVariable= ruleStateVariable EOF ;
    public final EObject entryRuleStateVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStateVariable = null;


        try {
            // InternalWreslEditorParser.g:421:2: (iv_ruleStateVariable= ruleStateVariable EOF )
            // InternalWreslEditorParser.g:422:2: iv_ruleStateVariable= ruleStateVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStateVariable=ruleStateVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStateVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStateVariable"


    // $ANTLR start "ruleStateVariable"
    // InternalWreslEditorParser.g:429:1: ruleStateVariable returns [EObject current=null] : (this_SvarDef_0= ruleSvarDef | this_ConstDef_1= ruleConstDef ) ;
    public final EObject ruleStateVariable() throws RecognitionException {
        EObject current = null;

        EObject this_SvarDef_0 = null;

        EObject this_ConstDef_1 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:432:28: ( (this_SvarDef_0= ruleSvarDef | this_ConstDef_1= ruleConstDef ) )
            // InternalWreslEditorParser.g:433:1: (this_SvarDef_0= ruleSvarDef | this_ConstDef_1= ruleConstDef )
            {
            // InternalWreslEditorParser.g:433:1: (this_SvarDef_0= ruleSvarDef | this_ConstDef_1= ruleConstDef )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==Define||LA9_0==Svar_1) ) {
                alt9=1;
            }
            else if ( (LA9_0==Const_1) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalWreslEditorParser.g:434:2: this_SvarDef_0= ruleSvarDef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStateVariableAccess().getSvarDefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SvarDef_0=ruleSvarDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SvarDef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:447:2: this_ConstDef_1= ruleConstDef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStateVariableAccess().getConstDefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstDef_1=ruleConstDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConstDef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateVariable"


    // $ANTLR start "entryRuleDecisionVariable"
    // InternalWreslEditorParser.g:466:1: entryRuleDecisionVariable returns [EObject current=null] : iv_ruleDecisionVariable= ruleDecisionVariable EOF ;
    public final EObject entryRuleDecisionVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecisionVariable = null;


        try {
            // InternalWreslEditorParser.g:467:2: (iv_ruleDecisionVariable= ruleDecisionVariable EOF )
            // InternalWreslEditorParser.g:468:2: iv_ruleDecisionVariable= ruleDecisionVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecisionVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecisionVariable=ruleDecisionVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecisionVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecisionVariable"


    // $ANTLR start "ruleDecisionVariable"
    // InternalWreslEditorParser.g:475:1: ruleDecisionVariable returns [EObject current=null] : (this_DvarDef_0= ruleDvarDef | this_Alias_1= ruleAlias ) ;
    public final EObject ruleDecisionVariable() throws RecognitionException {
        EObject current = null;

        EObject this_DvarDef_0 = null;

        EObject this_Alias_1 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:478:28: ( (this_DvarDef_0= ruleDvarDef | this_Alias_1= ruleAlias ) )
            // InternalWreslEditorParser.g:479:1: (this_DvarDef_0= ruleDvarDef | this_Alias_1= ruleAlias )
            {
            // InternalWreslEditorParser.g:479:1: (this_DvarDef_0= ruleDvarDef | this_Alias_1= ruleAlias )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalWreslEditorParser.g:480:2: this_DvarDef_0= ruleDvarDef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDecisionVariableAccess().getDvarDefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DvarDef_0=ruleDvarDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DvarDef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:493:2: this_Alias_1= ruleAlias
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDecisionVariableAccess().getAliasParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Alias_1=ruleAlias();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Alias_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecisionVariable"


    // $ANTLR start "entryRuleIfIncItems"
    // InternalWreslEditorParser.g:512:1: entryRuleIfIncItems returns [EObject current=null] : iv_ruleIfIncItems= ruleIfIncItems EOF ;
    public final EObject entryRuleIfIncItems() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfIncItems = null;


        try {
            // InternalWreslEditorParser.g:513:2: (iv_ruleIfIncItems= ruleIfIncItems EOF )
            // InternalWreslEditorParser.g:514:2: iv_ruleIfIncItems= ruleIfIncItems EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfIncItemsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfIncItems=ruleIfIncItems();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfIncItems; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfIncItems"


    // $ANTLR start "ruleIfIncItems"
    // InternalWreslEditorParser.g:521:1: ruleIfIncItems returns [EObject current=null] : (this_IfTerm_0= ruleIfTerm ( (lv_elseifterm_1_0= ruleElseIfTerm ) )? ( (lv_elseterm_2_0= ruleElseTerm ) )? ) ;
    public final EObject ruleIfIncItems() throws RecognitionException {
        EObject current = null;

        EObject this_IfTerm_0 = null;

        EObject lv_elseifterm_1_0 = null;

        EObject lv_elseterm_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:524:28: ( (this_IfTerm_0= ruleIfTerm ( (lv_elseifterm_1_0= ruleElseIfTerm ) )? ( (lv_elseterm_2_0= ruleElseTerm ) )? ) )
            // InternalWreslEditorParser.g:525:1: (this_IfTerm_0= ruleIfTerm ( (lv_elseifterm_1_0= ruleElseIfTerm ) )? ( (lv_elseterm_2_0= ruleElseTerm ) )? )
            {
            // InternalWreslEditorParser.g:525:1: (this_IfTerm_0= ruleIfTerm ( (lv_elseifterm_1_0= ruleElseIfTerm ) )? ( (lv_elseterm_2_0= ruleElseTerm ) )? )
            // InternalWreslEditorParser.g:526:2: this_IfTerm_0= ruleIfTerm ( (lv_elseifterm_1_0= ruleElseIfTerm ) )? ( (lv_elseterm_2_0= ruleElseTerm ) )?
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getIfIncItemsAccess().getIfTermParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_10);
            this_IfTerm_0=ruleIfTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_IfTerm_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalWreslEditorParser.g:537:1: ( (lv_elseifterm_1_0= ruleElseIfTerm ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ELSEIF) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalWreslEditorParser.g:538:1: (lv_elseifterm_1_0= ruleElseIfTerm )
                    {
                    // InternalWreslEditorParser.g:538:1: (lv_elseifterm_1_0= ruleElseIfTerm )
                    // InternalWreslEditorParser.g:539:3: lv_elseifterm_1_0= ruleElseIfTerm
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfIncItemsAccess().getElseiftermElseIfTermParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_11);
                    lv_elseifterm_1_0=ruleElseIfTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfIncItemsRule());
                      	        }
                             		set(
                             			current, 
                             			"elseifterm",
                              		lv_elseifterm_1_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ElseIfTerm");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalWreslEditorParser.g:555:3: ( (lv_elseterm_2_0= ruleElseTerm ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_ELSE) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalWreslEditorParser.g:556:1: (lv_elseterm_2_0= ruleElseTerm )
                    {
                    // InternalWreslEditorParser.g:556:1: (lv_elseterm_2_0= ruleElseTerm )
                    // InternalWreslEditorParser.g:557:3: lv_elseterm_2_0= ruleElseTerm
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfIncItemsAccess().getElsetermElseTermParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseterm_2_0=ruleElseTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfIncItemsRule());
                      	        }
                             		set(
                             			current, 
                             			"elseterm",
                              		lv_elseterm_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ElseTerm");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfIncItems"


    // $ANTLR start "entryRuleIfTerm"
    // InternalWreslEditorParser.g:581:1: entryRuleIfTerm returns [EObject current=null] : iv_ruleIfTerm= ruleIfTerm EOF ;
    public final EObject entryRuleIfTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfTerm = null;


        try {
            // InternalWreslEditorParser.g:582:2: (iv_ruleIfTerm= ruleIfTerm EOF )
            // InternalWreslEditorParser.g:583:2: iv_ruleIfTerm= ruleIfTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfTerm=ruleIfTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfTerm"


    // $ANTLR start "ruleIfTerm"
    // InternalWreslEditorParser.g:590:1: ruleIfTerm returns [EObject current=null] : (this_If_0= RULE_IF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket ) ;
    public final EObject ruleIfTerm() throws RecognitionException {
        EObject current = null;

        Token this_If_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_logical_1_0 = null;

        EObject lv_pattern_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:593:28: ( (this_If_0= RULE_IF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:594:1: (this_If_0= RULE_IF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:594:1: (this_If_0= RULE_IF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket )
            // InternalWreslEditorParser.g:594:2: this_If_0= RULE_IF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket
            {
            this_If_0=(Token)match(input,RULE_IF,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_If_0, grammarAccess.getIfTermAccess().getIfTerminalRuleCall_0()); 
                  
            }
            // InternalWreslEditorParser.g:598:1: ( (lv_logical_1_0= ruleLogicalExpression ) )
            // InternalWreslEditorParser.g:599:1: (lv_logical_1_0= ruleLogicalExpression )
            {
            // InternalWreslEditorParser.g:599:1: (lv_logical_1_0= ruleLogicalExpression )
            // InternalWreslEditorParser.g:600:3: lv_logical_1_0= ruleLogicalExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfTermAccess().getLogicalLogicalExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_7);
            lv_logical_1_0=ruleLogicalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfTermRule());
              	        }
                     		set(
                     			current, 
                     			"logical",
                      		lv_logical_1_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LogicalExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIfTermAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalWreslEditorParser.g:621:1: ( (lv_pattern_3_0= rulePattern ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==Objective||LA13_0==Include||LA13_0==Define||LA13_0==Const_1||LA13_0==Dvar_1||LA13_0==Goal||LA13_0==Svar_1) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalWreslEditorParser.g:622:1: (lv_pattern_3_0= rulePattern )
            	    {
            	    // InternalWreslEditorParser.g:622:1: (lv_pattern_3_0= rulePattern )
            	    // InternalWreslEditorParser.g:623:3: lv_pattern_3_0= rulePattern
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIfTermAccess().getPatternPatternParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_pattern_3_0=rulePattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfTermRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pattern",
            	              		lv_pattern_3_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);

            otherlv_4=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getIfTermAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfTerm"


    // $ANTLR start "entryRuleElseIfTerm"
    // InternalWreslEditorParser.g:652:1: entryRuleElseIfTerm returns [EObject current=null] : iv_ruleElseIfTerm= ruleElseIfTerm EOF ;
    public final EObject entryRuleElseIfTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIfTerm = null;


        try {
            // InternalWreslEditorParser.g:653:2: (iv_ruleElseIfTerm= ruleElseIfTerm EOF )
            // InternalWreslEditorParser.g:654:2: iv_ruleElseIfTerm= ruleElseIfTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElseIfTerm=ruleElseIfTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIfTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIfTerm"


    // $ANTLR start "ruleElseIfTerm"
    // InternalWreslEditorParser.g:661:1: ruleElseIfTerm returns [EObject current=null] : (this_ElseIf_0= RULE_ELSEIF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket )+ ;
    public final EObject ruleElseIfTerm() throws RecognitionException {
        EObject current = null;

        Token this_ElseIf_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_logical_1_0 = null;

        EObject lv_pattern_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:664:28: ( (this_ElseIf_0= RULE_ELSEIF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket )+ )
            // InternalWreslEditorParser.g:665:1: (this_ElseIf_0= RULE_ELSEIF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket )+
            {
            // InternalWreslEditorParser.g:665:1: (this_ElseIf_0= RULE_ELSEIF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket )+
            int cnt15=0;
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==RULE_ELSEIF) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalWreslEditorParser.g:665:2: this_ElseIf_0= RULE_ELSEIF ( (lv_logical_1_0= ruleLogicalExpression ) ) otherlv_2= LeftCurlyBracket ( (lv_pattern_3_0= rulePattern ) )+ otherlv_4= RightCurlyBracket
            	    {
            	    this_ElseIf_0=(Token)match(input,RULE_ELSEIF,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ElseIf_0, grammarAccess.getElseIfTermAccess().getElseIfTerminalRuleCall_0()); 
            	          
            	    }
            	    // InternalWreslEditorParser.g:669:1: ( (lv_logical_1_0= ruleLogicalExpression ) )
            	    // InternalWreslEditorParser.g:670:1: (lv_logical_1_0= ruleLogicalExpression )
            	    {
            	    // InternalWreslEditorParser.g:670:1: (lv_logical_1_0= ruleLogicalExpression )
            	    // InternalWreslEditorParser.g:671:3: lv_logical_1_0= ruleLogicalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getElseIfTermAccess().getLogicalLogicalExpressionParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_logical_1_0=ruleLogicalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getElseIfTermRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"logical",
            	              		lv_logical_1_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LogicalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_13); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getElseIfTermAccess().getLeftCurlyBracketKeyword_2());
            	          
            	    }
            	    // InternalWreslEditorParser.g:692:1: ( (lv_pattern_3_0= rulePattern ) )+
            	    int cnt14=0;
            	    loop14:
            	    do {
            	        int alt14=2;
            	        int LA14_0 = input.LA(1);

            	        if ( (LA14_0==Objective||LA14_0==Include||LA14_0==Define||LA14_0==Const_1||LA14_0==Dvar_1||LA14_0==Goal||LA14_0==Svar_1) ) {
            	            alt14=1;
            	        }


            	        switch (alt14) {
            	    	case 1 :
            	    	    // InternalWreslEditorParser.g:693:1: (lv_pattern_3_0= rulePattern )
            	    	    {
            	    	    // InternalWreslEditorParser.g:693:1: (lv_pattern_3_0= rulePattern )
            	    	    // InternalWreslEditorParser.g:694:3: lv_pattern_3_0= rulePattern
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getElseIfTermAccess().getPatternPatternParserRuleCall_3_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_14);
            	    	    lv_pattern_3_0=rulePattern();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getElseIfTermRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"pattern",
            	    	              		lv_pattern_3_0, 
            	    	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt14 >= 1 ) break loop14;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(14, input);
            	                throw eee;
            	        }
            	        cnt14++;
            	    } while (true);

            	    otherlv_4=(Token)match(input,RightCurlyBracket,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getElseIfTermAccess().getRightCurlyBracketKeyword_4());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt15 >= 1 ) break loop15;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(15, input);
                        throw eee;
                }
                cnt15++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIfTerm"


    // $ANTLR start "entryRuleElseTerm"
    // InternalWreslEditorParser.g:723:1: entryRuleElseTerm returns [EObject current=null] : iv_ruleElseTerm= ruleElseTerm EOF ;
    public final EObject entryRuleElseTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseTerm = null;


        try {
            // InternalWreslEditorParser.g:724:2: (iv_ruleElseTerm= ruleElseTerm EOF )
            // InternalWreslEditorParser.g:725:2: iv_ruleElseTerm= ruleElseTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElseTerm=ruleElseTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseTerm"


    // $ANTLR start "ruleElseTerm"
    // InternalWreslEditorParser.g:732:1: ruleElseTerm returns [EObject current=null] : (this_Else_0= RULE_ELSE otherlv_1= LeftCurlyBracket ( (lv_pattern_2_0= rulePattern ) )+ otherlv_3= RightCurlyBracket ) ;
    public final EObject ruleElseTerm() throws RecognitionException {
        EObject current = null;

        Token this_Else_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_pattern_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:735:28: ( (this_Else_0= RULE_ELSE otherlv_1= LeftCurlyBracket ( (lv_pattern_2_0= rulePattern ) )+ otherlv_3= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:736:1: (this_Else_0= RULE_ELSE otherlv_1= LeftCurlyBracket ( (lv_pattern_2_0= rulePattern ) )+ otherlv_3= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:736:1: (this_Else_0= RULE_ELSE otherlv_1= LeftCurlyBracket ( (lv_pattern_2_0= rulePattern ) )+ otherlv_3= RightCurlyBracket )
            // InternalWreslEditorParser.g:736:2: this_Else_0= RULE_ELSE otherlv_1= LeftCurlyBracket ( (lv_pattern_2_0= rulePattern ) )+ otherlv_3= RightCurlyBracket
            {
            this_Else_0=(Token)match(input,RULE_ELSE,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_Else_0, grammarAccess.getElseTermAccess().getElseTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getElseTermAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:745:1: ( (lv_pattern_2_0= rulePattern ) )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==Objective||LA16_0==Include||LA16_0==Define||LA16_0==Const_1||LA16_0==Dvar_1||LA16_0==Goal||LA16_0==Svar_1) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalWreslEditorParser.g:746:1: (lv_pattern_2_0= rulePattern )
            	    {
            	    // InternalWreslEditorParser.g:746:1: (lv_pattern_2_0= rulePattern )
            	    // InternalWreslEditorParser.g:747:3: lv_pattern_2_0= rulePattern
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getElseTermAccess().getPatternPatternParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_pattern_2_0=rulePattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getElseTermRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pattern",
            	              		lv_pattern_2_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getElseTermAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseTerm"


    // $ANTLR start "entryRuleTimeArraySize"
    // InternalWreslEditorParser.g:776:1: entryRuleTimeArraySize returns [EObject current=null] : iv_ruleTimeArraySize= ruleTimeArraySize EOF ;
    public final EObject entryRuleTimeArraySize() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTimeArraySize = null;


        try {
            // InternalWreslEditorParser.g:777:2: (iv_ruleTimeArraySize= ruleTimeArraySize EOF )
            // InternalWreslEditorParser.g:778:2: iv_ruleTimeArraySize= ruleTimeArraySize EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeArraySizeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTimeArraySize=ruleTimeArraySize();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeArraySize; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeArraySize"


    // $ANTLR start "ruleTimeArraySize"
    // InternalWreslEditorParser.g:785:1: ruleTimeArraySize returns [EObject current=null] : (otherlv_0= LeftParenthesis ( (otherlv_1= RULE_ID ) ) otherlv_2= RightParenthesis ) ;
    public final EObject ruleTimeArraySize() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:788:28: ( (otherlv_0= LeftParenthesis ( (otherlv_1= RULE_ID ) ) otherlv_2= RightParenthesis ) )
            // InternalWreslEditorParser.g:789:1: (otherlv_0= LeftParenthesis ( (otherlv_1= RULE_ID ) ) otherlv_2= RightParenthesis )
            {
            // InternalWreslEditorParser.g:789:1: (otherlv_0= LeftParenthesis ( (otherlv_1= RULE_ID ) ) otherlv_2= RightParenthesis )
            // InternalWreslEditorParser.g:790:2: otherlv_0= LeftParenthesis ( (otherlv_1= RULE_ID ) ) otherlv_2= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTimeArraySizeAccess().getLeftParenthesisKeyword_0());
                  
            }
            // InternalWreslEditorParser.g:794:1: ( (otherlv_1= RULE_ID ) )
            // InternalWreslEditorParser.g:795:1: (otherlv_1= RULE_ID )
            {
            // InternalWreslEditorParser.g:795:1: (otherlv_1= RULE_ID )
            // InternalWreslEditorParser.g:796:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTimeArraySizeRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getTimeArraySizeAccess().getNameDeclarationCrossReference_1_0()); 
              	
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTimeArraySizeAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeArraySize"


    // $ANTLR start "entryRuleObjective"
    // InternalWreslEditorParser.g:823:1: entryRuleObjective returns [EObject current=null] : iv_ruleObjective= ruleObjective EOF ;
    public final EObject entryRuleObjective() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjective = null;


        try {
            // InternalWreslEditorParser.g:824:2: (iv_ruleObjective= ruleObjective EOF )
            // InternalWreslEditorParser.g:825:2: iv_ruleObjective= ruleObjective EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectiveRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjective=ruleObjective();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjective; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObjective"


    // $ANTLR start "ruleObjective"
    // InternalWreslEditorParser.g:832:1: ruleObjective returns [EObject current=null] : ( (otherlv_0= Objective | otherlv_1= Objective ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= EqualsSign )? otherlv_7= LeftCurlyBracket ( (lv_weights_8_0= ruleWeightItem ) )+ otherlv_9= RightCurlyBracket ) ;
    public final EObject ruleObjective() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_local_3_1=null;
        Token lv_local_3_2=null;
        Token otherlv_4=null;
        Token lv_name_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_weights_8_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:835:28: ( ( (otherlv_0= Objective | otherlv_1= Objective ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= EqualsSign )? otherlv_7= LeftCurlyBracket ( (lv_weights_8_0= ruleWeightItem ) )+ otherlv_9= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:836:1: ( (otherlv_0= Objective | otherlv_1= Objective ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= EqualsSign )? otherlv_7= LeftCurlyBracket ( (lv_weights_8_0= ruleWeightItem ) )+ otherlv_9= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:836:1: ( (otherlv_0= Objective | otherlv_1= Objective ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= EqualsSign )? otherlv_7= LeftCurlyBracket ( (lv_weights_8_0= ruleWeightItem ) )+ otherlv_9= RightCurlyBracket )
            // InternalWreslEditorParser.g:836:2: (otherlv_0= Objective | otherlv_1= Objective ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_name_5_0= RULE_ID ) ) (otherlv_6= EqualsSign )? otherlv_7= LeftCurlyBracket ( (lv_weights_8_0= ruleWeightItem ) )+ otherlv_9= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:836:2: (otherlv_0= Objective | otherlv_1= Objective )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==Objective) ) {
                int LA17_1 = input.LA(2);

                if ( (synpred24_InternalWreslEditorParser()) ) {
                    alt17=1;
                }
                else if ( (true) ) {
                    alt17=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalWreslEditorParser.g:837:2: otherlv_0= Objective
                    {
                    otherlv_0=(Token)match(input,Objective,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getObjectiveAccess().getObjectiveKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:843:2: otherlv_1= Objective
                    {
                    otherlv_1=(Token)match(input,Objective,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getObjectiveAccess().getOBJECTIVEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:847:2: (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==LeftSquareBracket) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalWreslEditorParser.g:848:2: otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket
                    {
                    otherlv_2=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getObjectiveAccess().getLeftSquareBracketKeyword_1_0());
                          
                    }
                    // InternalWreslEditorParser.g:852:1: ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) )
                    // InternalWreslEditorParser.g:853:1: ( (lv_local_3_1= Local | lv_local_3_2= Local ) )
                    {
                    // InternalWreslEditorParser.g:853:1: ( (lv_local_3_1= Local | lv_local_3_2= Local ) )
                    // InternalWreslEditorParser.g:854:1: (lv_local_3_1= Local | lv_local_3_2= Local )
                    {
                    // InternalWreslEditorParser.g:854:1: (lv_local_3_1= Local | lv_local_3_2= Local )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==Local) ) {
                        int LA18_1 = input.LA(2);

                        if ( (synpred25_InternalWreslEditorParser()) ) {
                            alt18=1;
                        }
                        else if ( (true) ) {
                            alt18=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 18, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalWreslEditorParser.g:855:3: lv_local_3_1= Local
                            {
                            lv_local_3_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_1, grammarAccess.getObjectiveAccess().getLocalLocalKeyword_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getObjectiveRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:868:8: lv_local_3_2= Local
                            {
                            lv_local_3_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_2, grammarAccess.getObjectiveAccess().getLocalLOCALKeyword_1_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getObjectiveRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getObjectiveAccess().getRightSquareBracketKeyword_1_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:889:3: ( (lv_name_5_0= RULE_ID ) )
            // InternalWreslEditorParser.g:890:1: (lv_name_5_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:890:1: (lv_name_5_0= RULE_ID )
            // InternalWreslEditorParser.g:891:3: lv_name_5_0= RULE_ID
            {
            lv_name_5_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_5_0, grammarAccess.getObjectiveAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getObjectiveRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_5_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:907:2: (otherlv_6= EqualsSign )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==EqualsSign) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalWreslEditorParser.g:908:2: otherlv_6= EqualsSign
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getObjectiveAccess().getEqualsSignKeyword_3());
                          
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getObjectiveAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalWreslEditorParser.g:917:1: ( (lv_weights_8_0= ruleWeightItem ) )+
            int cnt21=0;
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==LeftSquareBracket) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalWreslEditorParser.g:918:1: (lv_weights_8_0= ruleWeightItem )
            	    {
            	    // InternalWreslEditorParser.g:918:1: (lv_weights_8_0= ruleWeightItem )
            	    // InternalWreslEditorParser.g:919:3: lv_weights_8_0= ruleWeightItem
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getObjectiveAccess().getWeightsWeightItemParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_weights_8_0=ruleWeightItem();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getObjectiveRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"weights",
            	              		lv_weights_8_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.WeightItem");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt21 >= 1 ) break loop21;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(21, input);
                        throw eee;
                }
                cnt21++;
            } while (true);

            otherlv_9=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getObjectiveAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObjective"


    // $ANTLR start "entryRuleWeightItem"
    // InternalWreslEditorParser.g:948:1: entryRuleWeightItem returns [EObject current=null] : iv_ruleWeightItem= ruleWeightItem EOF ;
    public final EObject entryRuleWeightItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWeightItem = null;


        try {
            // InternalWreslEditorParser.g:949:2: (iv_ruleWeightItem= ruleWeightItem EOF )
            // InternalWreslEditorParser.g:950:2: iv_ruleWeightItem= ruleWeightItem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWeightItemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWeightItem=ruleWeightItem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWeightItem; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWeightItem"


    // $ANTLR start "ruleWeightItem"
    // InternalWreslEditorParser.g:957:1: ruleWeightItem returns [EObject current=null] : (otherlv_0= LeftSquareBracket ( (otherlv_1= RULE_ID ) ) ( (lv_ta_2_0= ruleTimeArraySize ) )? otherlv_3= Comma ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= RightSquareBracket (otherlv_6= Comma )? ) ;
    public final EObject ruleWeightItem() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_ta_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:960:28: ( (otherlv_0= LeftSquareBracket ( (otherlv_1= RULE_ID ) ) ( (lv_ta_2_0= ruleTimeArraySize ) )? otherlv_3= Comma ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= RightSquareBracket (otherlv_6= Comma )? ) )
            // InternalWreslEditorParser.g:961:1: (otherlv_0= LeftSquareBracket ( (otherlv_1= RULE_ID ) ) ( (lv_ta_2_0= ruleTimeArraySize ) )? otherlv_3= Comma ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= RightSquareBracket (otherlv_6= Comma )? )
            {
            // InternalWreslEditorParser.g:961:1: (otherlv_0= LeftSquareBracket ( (otherlv_1= RULE_ID ) ) ( (lv_ta_2_0= ruleTimeArraySize ) )? otherlv_3= Comma ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= RightSquareBracket (otherlv_6= Comma )? )
            // InternalWreslEditorParser.g:962:2: otherlv_0= LeftSquareBracket ( (otherlv_1= RULE_ID ) ) ( (lv_ta_2_0= ruleTimeArraySize ) )? otherlv_3= Comma ( (lv_expression_4_0= ruleExpression ) ) otherlv_5= RightSquareBracket (otherlv_6= Comma )?
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWeightItemAccess().getLeftSquareBracketKeyword_0());
                  
            }
            // InternalWreslEditorParser.g:966:1: ( (otherlv_1= RULE_ID ) )
            // InternalWreslEditorParser.g:967:1: (otherlv_1= RULE_ID )
            {
            // InternalWreslEditorParser.g:967:1: (otherlv_1= RULE_ID )
            // InternalWreslEditorParser.g:968:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getWeightItemRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getWeightItemAccess().getRefDeclarationCrossReference_1_0()); 
              	
            }

            }


            }

            // InternalWreslEditorParser.g:982:2: ( (lv_ta_2_0= ruleTimeArraySize ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==LeftParenthesis) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalWreslEditorParser.g:983:1: (lv_ta_2_0= ruleTimeArraySize )
                    {
                    // InternalWreslEditorParser.g:983:1: (lv_ta_2_0= ruleTimeArraySize )
                    // InternalWreslEditorParser.g:984:3: lv_ta_2_0= ruleTimeArraySize
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWeightItemAccess().getTaTimeArraySizeParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_24);
                    lv_ta_2_0=ruleTimeArraySize();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWeightItemRule());
                      	        }
                             		set(
                             			current, 
                             			"ta",
                              		lv_ta_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWeightItemAccess().getCommaKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:1005:1: ( (lv_expression_4_0= ruleExpression ) )
            // InternalWreslEditorParser.g:1006:1: (lv_expression_4_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:1006:1: (lv_expression_4_0= ruleExpression )
            // InternalWreslEditorParser.g:1007:3: lv_expression_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWeightItemAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_19);
            lv_expression_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWeightItemRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getWeightItemAccess().getRightSquareBracketKeyword_5());
                  
            }
            // InternalWreslEditorParser.g:1028:1: (otherlv_6= Comma )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==Comma) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalWreslEditorParser.g:1029:2: otherlv_6= Comma
                    {
                    otherlv_6=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getWeightItemAccess().getCommaKeyword_6());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWeightItem"


    // $ANTLR start "entryRuleExternalDef"
    // InternalWreslEditorParser.g:1041:1: entryRuleExternalDef returns [EObject current=null] : iv_ruleExternalDef= ruleExternalDef EOF ;
    public final EObject entryRuleExternalDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalDef = null;


        try {
            // InternalWreslEditorParser.g:1042:2: (iv_ruleExternalDef= ruleExternalDef EOF )
            // InternalWreslEditorParser.g:1043:2: iv_ruleExternalDef= ruleExternalDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternalDef=ruleExternalDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalDef"


    // $ANTLR start "ruleExternalDef"
    // InternalWreslEditorParser.g:1050:1: ruleExternalDef returns [EObject current=null] : ( (otherlv_0= Define | otherlv_1= Define ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (otherlv_5= RULE_ID ) ) otherlv_6= LeftCurlyBracket ( (lv_definition_7_0= ruleExternal ) ) otherlv_8= RightCurlyBracket ) ;
    public final EObject ruleExternalDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_local_3_1=null;
        Token lv_local_3_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_definition_7_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:1053:28: ( ( (otherlv_0= Define | otherlv_1= Define ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (otherlv_5= RULE_ID ) ) otherlv_6= LeftCurlyBracket ( (lv_definition_7_0= ruleExternal ) ) otherlv_8= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:1054:1: ( (otherlv_0= Define | otherlv_1= Define ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (otherlv_5= RULE_ID ) ) otherlv_6= LeftCurlyBracket ( (lv_definition_7_0= ruleExternal ) ) otherlv_8= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:1054:1: ( (otherlv_0= Define | otherlv_1= Define ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (otherlv_5= RULE_ID ) ) otherlv_6= LeftCurlyBracket ( (lv_definition_7_0= ruleExternal ) ) otherlv_8= RightCurlyBracket )
            // InternalWreslEditorParser.g:1054:2: (otherlv_0= Define | otherlv_1= Define ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (otherlv_5= RULE_ID ) ) otherlv_6= LeftCurlyBracket ( (lv_definition_7_0= ruleExternal ) ) otherlv_8= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:1054:2: (otherlv_0= Define | otherlv_1= Define )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==Define) ) {
                int LA24_1 = input.LA(2);

                if ( (synpred31_InternalWreslEditorParser()) ) {
                    alt24=1;
                }
                else if ( (true) ) {
                    alt24=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalWreslEditorParser.g:1055:2: otherlv_0= Define
                    {
                    otherlv_0=(Token)match(input,Define,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getExternalDefAccess().getDefineKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:1061:2: otherlv_1= Define
                    {
                    otherlv_1=(Token)match(input,Define,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExternalDefAccess().getDEFINEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1065:2: (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==LeftSquareBracket) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalWreslEditorParser.g:1066:2: otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket
                    {
                    otherlv_2=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExternalDefAccess().getLeftSquareBracketKeyword_1_0());
                          
                    }
                    // InternalWreslEditorParser.g:1070:1: ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) )
                    // InternalWreslEditorParser.g:1071:1: ( (lv_local_3_1= Local | lv_local_3_2= Local ) )
                    {
                    // InternalWreslEditorParser.g:1071:1: ( (lv_local_3_1= Local | lv_local_3_2= Local ) )
                    // InternalWreslEditorParser.g:1072:1: (lv_local_3_1= Local | lv_local_3_2= Local )
                    {
                    // InternalWreslEditorParser.g:1072:1: (lv_local_3_1= Local | lv_local_3_2= Local )
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==Local) ) {
                        int LA25_1 = input.LA(2);

                        if ( (synpred32_InternalWreslEditorParser()) ) {
                            alt25=1;
                        }
                        else if ( (true) ) {
                            alt25=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalWreslEditorParser.g:1073:3: lv_local_3_1= Local
                            {
                            lv_local_3_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_1, grammarAccess.getExternalDefAccess().getLocalLocalKeyword_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getExternalDefRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1086:8: lv_local_3_2= Local
                            {
                            lv_local_3_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_2, grammarAccess.getExternalDefAccess().getLocalLOCALKeyword_1_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getExternalDefRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getExternalDefAccess().getRightSquareBracketKeyword_1_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1107:3: ( (otherlv_5= RULE_ID ) )
            // InternalWreslEditorParser.g:1108:1: (otherlv_5= RULE_ID )
            {
            // InternalWreslEditorParser.g:1108:1: (otherlv_5= RULE_ID )
            // InternalWreslEditorParser.g:1109:3: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExternalDefRule());
              	        }
                      
            }
            otherlv_5=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_5, grammarAccess.getExternalDefAccess().getRefDeclarationCrossReference_2_0()); 
              	
            }

            }


            }

            otherlv_6=(Token)match(input,LeftCurlyBracket,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getExternalDefAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:1128:1: ( (lv_definition_7_0= ruleExternal ) )
            // InternalWreslEditorParser.g:1129:1: (lv_definition_7_0= ruleExternal )
            {
            // InternalWreslEditorParser.g:1129:1: (lv_definition_7_0= ruleExternal )
            // InternalWreslEditorParser.g:1130:3: lv_definition_7_0= ruleExternal
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExternalDefAccess().getDefinitionExternalParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_9);
            lv_definition_7_0=ruleExternal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExternalDefRule());
              	        }
                     		set(
                     			current, 
                     			"definition",
                      		lv_definition_7_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.External");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getExternalDefAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalDef"


    // $ANTLR start "entryRuleSvarDef"
    // InternalWreslEditorParser.g:1159:1: entryRuleSvarDef returns [EObject current=null] : iv_ruleSvarDef= ruleSvarDef EOF ;
    public final EObject entryRuleSvarDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSvarDef = null;


        try {
            // InternalWreslEditorParser.g:1160:2: (iv_ruleSvarDef= ruleSvarDef EOF )
            // InternalWreslEditorParser.g:1161:2: iv_ruleSvarDef= ruleSvarDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSvarDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSvarDef=ruleSvarDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSvarDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSvarDef"


    // $ANTLR start "ruleSvarDef"
    // InternalWreslEditorParser.g:1168:1: ruleSvarDef returns [EObject current=null] : ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket ) ) ;
    public final EObject ruleSvarDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_local_4_1=null;
        Token lv_local_4_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_local_15_1=null;
        Token lv_local_15_2=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_ta_2_0 = null;

        EObject lv_definition_8_0 = null;

        EObject lv_ta_13_0 = null;

        EObject lv_definition_19_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:1171:28: ( ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket ) ) )
            // InternalWreslEditorParser.g:1172:1: ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket ) )
            {
            // InternalWreslEditorParser.g:1172:1: ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==Define) ) {
                alt35=1;
            }
            else if ( (LA35_0==Svar_1) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalWreslEditorParser.g:1172:2: ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket )
                    {
                    // InternalWreslEditorParser.g:1172:2: ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket )
                    // InternalWreslEditorParser.g:1172:3: (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleSVar ) ) otherlv_9= RightCurlyBracket
                    {
                    // InternalWreslEditorParser.g:1172:3: (otherlv_0= Define | otherlv_1= Define )
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==Define) ) {
                        int LA27_1 = input.LA(2);

                        if ( (synpred34_InternalWreslEditorParser()) ) {
                            alt27=1;
                        }
                        else if ( (true) ) {
                            alt27=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 27, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 27, 0, input);

                        throw nvae;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalWreslEditorParser.g:1173:2: otherlv_0= Define
                            {
                            otherlv_0=(Token)match(input,Define,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_0, grammarAccess.getSvarDefAccess().getDefineKeyword_0_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1179:2: otherlv_1= Define
                            {
                            otherlv_1=(Token)match(input,Define,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getSvarDefAccess().getDEFINEKeyword_0_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1183:2: ( (lv_ta_2_0= ruleTimeArraySize ) )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==LeftParenthesis) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalWreslEditorParser.g:1184:1: (lv_ta_2_0= ruleTimeArraySize )
                            {
                            // InternalWreslEditorParser.g:1184:1: (lv_ta_2_0= ruleTimeArraySize )
                            // InternalWreslEditorParser.g:1185:3: lv_ta_2_0= ruleTimeArraySize
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSvarDefAccess().getTaTimeArraySizeParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_17);
                            lv_ta_2_0=ruleTimeArraySize();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"ta",
                                      		lv_ta_2_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1201:3: (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==LeftSquareBracket) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalWreslEditorParser.g:1202:2: otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket
                            {
                            otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getSvarDefAccess().getLeftSquareBracketKeyword_0_2_0());
                                  
                            }
                            // InternalWreslEditorParser.g:1206:1: ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) )
                            // InternalWreslEditorParser.g:1207:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                            {
                            // InternalWreslEditorParser.g:1207:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                            // InternalWreslEditorParser.g:1208:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                            {
                            // InternalWreslEditorParser.g:1208:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                            int alt29=2;
                            int LA29_0 = input.LA(1);

                            if ( (LA29_0==Local) ) {
                                int LA29_1 = input.LA(2);

                                if ( (synpred36_InternalWreslEditorParser()) ) {
                                    alt29=1;
                                }
                                else if ( (true) ) {
                                    alt29=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 29, 1, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 29, 0, input);

                                throw nvae;
                            }
                            switch (alt29) {
                                case 1 :
                                    // InternalWreslEditorParser.g:1209:3: lv_local_4_1= Local
                                    {
                                    lv_local_4_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_4_1, grammarAccess.getSvarDefAccess().getLocalLocalKeyword_0_2_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getSvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalWreslEditorParser.g:1222:8: lv_local_4_2= Local
                                    {
                                    lv_local_4_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_4_2, grammarAccess.getSvarDefAccess().getLocalLOCALKeyword_0_2_1_0_1());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getSvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getSvarDefAccess().getRightSquareBracketKeyword_0_2_2());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1243:3: ( (otherlv_6= RULE_ID ) )
                    // InternalWreslEditorParser.g:1244:1: (otherlv_6= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:1244:1: (otherlv_6= RULE_ID )
                    // InternalWreslEditorParser.g:1245:3: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getSvarDefRule());
                      	        }
                              
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_6, grammarAccess.getSvarDefAccess().getRefDeclarationCrossReference_0_3_0()); 
                      	
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,LeftCurlyBracket,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getSvarDefAccess().getLeftCurlyBracketKeyword_0_4());
                          
                    }
                    // InternalWreslEditorParser.g:1264:1: ( (lv_definition_8_0= ruleSVar ) )
                    // InternalWreslEditorParser.g:1265:1: (lv_definition_8_0= ruleSVar )
                    {
                    // InternalWreslEditorParser.g:1265:1: (lv_definition_8_0= ruleSVar )
                    // InternalWreslEditorParser.g:1266:3: lv_definition_8_0= ruleSVar
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSvarDefAccess().getDefinitionSVarParserRuleCall_0_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_definition_8_0=ruleSVar();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSvarDefRule());
                      	        }
                             		set(
                             			current, 
                             			"definition",
                              		lv_definition_8_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SVar");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getSvarDefAccess().getRightCurlyBracketKeyword_0_6());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:1288:6: ( (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket )
                    {
                    // InternalWreslEditorParser.g:1288:6: ( (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket )
                    // InternalWreslEditorParser.g:1288:7: (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( (lv_definition_19_0= ruleSVar ) ) otherlv_20= RightCurlyBracket
                    {
                    // InternalWreslEditorParser.g:1288:7: (otherlv_10= Svar_1 | otherlv_11= Svar_1 | otherlv_12= Svar_1 )
                    int alt31=3;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==Svar_1) ) {
                        int LA31_1 = input.LA(2);

                        if ( (synpred39_InternalWreslEditorParser()) ) {
                            alt31=1;
                        }
                        else if ( (synpred40_InternalWreslEditorParser()) ) {
                            alt31=2;
                        }
                        else if ( (true) ) {
                            alt31=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 31, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalWreslEditorParser.g:1289:2: otherlv_10= Svar_1
                            {
                            otherlv_10=(Token)match(input,Svar_1,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getSvarDefAccess().getSvarKeyword_1_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1295:2: otherlv_11= Svar_1
                            {
                            otherlv_11=(Token)match(input,Svar_1,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getSvarDefAccess().getSVARKeyword_1_0_1());
                                  
                            }

                            }
                            break;
                        case 3 :
                            // InternalWreslEditorParser.g:1301:2: otherlv_12= Svar_1
                            {
                            otherlv_12=(Token)match(input,Svar_1,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getSvarDefAccess().getSvarKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1305:2: ( (lv_ta_13_0= ruleTimeArraySize ) )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==LeftParenthesis) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalWreslEditorParser.g:1306:1: (lv_ta_13_0= ruleTimeArraySize )
                            {
                            // InternalWreslEditorParser.g:1306:1: (lv_ta_13_0= ruleTimeArraySize )
                            // InternalWreslEditorParser.g:1307:3: lv_ta_13_0= ruleTimeArraySize
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSvarDefAccess().getTaTimeArraySizeParserRuleCall_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_17);
                            lv_ta_13_0=ruleTimeArraySize();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"ta",
                                      		lv_ta_13_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1323:3: (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==LeftSquareBracket) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalWreslEditorParser.g:1324:2: otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket
                            {
                            otherlv_14=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getSvarDefAccess().getLeftSquareBracketKeyword_1_2_0());
                                  
                            }
                            // InternalWreslEditorParser.g:1328:1: ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) )
                            // InternalWreslEditorParser.g:1329:1: ( (lv_local_15_1= Local | lv_local_15_2= Local ) )
                            {
                            // InternalWreslEditorParser.g:1329:1: ( (lv_local_15_1= Local | lv_local_15_2= Local ) )
                            // InternalWreslEditorParser.g:1330:1: (lv_local_15_1= Local | lv_local_15_2= Local )
                            {
                            // InternalWreslEditorParser.g:1330:1: (lv_local_15_1= Local | lv_local_15_2= Local )
                            int alt33=2;
                            int LA33_0 = input.LA(1);

                            if ( (LA33_0==Local) ) {
                                int LA33_1 = input.LA(2);

                                if ( (synpred42_InternalWreslEditorParser()) ) {
                                    alt33=1;
                                }
                                else if ( (true) ) {
                                    alt33=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 33, 1, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 33, 0, input);

                                throw nvae;
                            }
                            switch (alt33) {
                                case 1 :
                                    // InternalWreslEditorParser.g:1331:3: lv_local_15_1= Local
                                    {
                                    lv_local_15_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_15_1, grammarAccess.getSvarDefAccess().getLocalLocalKeyword_1_2_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getSvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalWreslEditorParser.g:1344:8: lv_local_15_2= Local
                                    {
                                    lv_local_15_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_15_2, grammarAccess.getSvarDefAccess().getLocalLOCALKeyword_1_2_1_0_1());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getSvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_16=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_16, grammarAccess.getSvarDefAccess().getRightSquareBracketKeyword_1_2_2());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1365:3: ( (otherlv_17= RULE_ID ) )
                    // InternalWreslEditorParser.g:1366:1: (otherlv_17= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:1366:1: (otherlv_17= RULE_ID )
                    // InternalWreslEditorParser.g:1367:3: otherlv_17= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getSvarDefRule());
                      	        }
                              
                    }
                    otherlv_17=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_17, grammarAccess.getSvarDefAccess().getRefDeclarationCrossReference_1_3_0()); 
                      	
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getSvarDefAccess().getLeftCurlyBracketKeyword_1_4());
                          
                    }
                    // InternalWreslEditorParser.g:1386:1: ( (lv_definition_19_0= ruleSVar ) )
                    // InternalWreslEditorParser.g:1387:1: (lv_definition_19_0= ruleSVar )
                    {
                    // InternalWreslEditorParser.g:1387:1: (lv_definition_19_0= ruleSVar )
                    // InternalWreslEditorParser.g:1388:3: lv_definition_19_0= ruleSVar
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSvarDefAccess().getDefinitionSVarParserRuleCall_1_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_definition_19_0=ruleSVar();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSvarDefRule());
                      	        }
                             		set(
                             			current, 
                             			"definition",
                              		lv_definition_19_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SVar");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getSvarDefAccess().getRightCurlyBracketKeyword_1_6());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSvarDef"


    // $ANTLR start "entryRuleDvarDef"
    // InternalWreslEditorParser.g:1417:1: entryRuleDvarDef returns [EObject current=null] : iv_ruleDvarDef= ruleDvarDef EOF ;
    public final EObject entryRuleDvarDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDvarDef = null;


        try {
            // InternalWreslEditorParser.g:1418:2: (iv_ruleDvarDef= ruleDvarDef EOF )
            // InternalWreslEditorParser.g:1419:2: iv_ruleDvarDef= ruleDvarDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDvarDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDvarDef=ruleDvarDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDvarDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDvarDef"


    // $ANTLR start "ruleDvarDef"
    // InternalWreslEditorParser.g:1426:1: ruleDvarDef returns [EObject current=null] : ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket ) ) ;
    public final EObject ruleDvarDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_local_4_1=null;
        Token lv_local_4_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_local_15_1=null;
        Token lv_local_15_2=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_ta_2_0 = null;

        EObject lv_definition_8_1 = null;

        EObject lv_definition_8_2 = null;

        EObject lv_ta_13_0 = null;

        EObject lv_definition_19_1 = null;

        EObject lv_definition_19_2 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:1429:28: ( ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket ) ) )
            // InternalWreslEditorParser.g:1430:1: ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket ) )
            {
            // InternalWreslEditorParser.g:1430:1: ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket ) | ( (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==Define) ) {
                alt46=1;
            }
            else if ( (LA46_0==Dvar_1) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalWreslEditorParser.g:1430:2: ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket )
                    {
                    // InternalWreslEditorParser.g:1430:2: ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket )
                    // InternalWreslEditorParser.g:1430:3: (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) ) otherlv_9= RightCurlyBracket
                    {
                    // InternalWreslEditorParser.g:1430:3: (otherlv_0= Define | otherlv_1= Define )
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==Define) ) {
                        int LA36_1 = input.LA(2);

                        if ( (synpred44_InternalWreslEditorParser()) ) {
                            alt36=1;
                        }
                        else if ( (true) ) {
                            alt36=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 36, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalWreslEditorParser.g:1431:2: otherlv_0= Define
                            {
                            otherlv_0=(Token)match(input,Define,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_0, grammarAccess.getDvarDefAccess().getDefineKeyword_0_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1437:2: otherlv_1= Define
                            {
                            otherlv_1=(Token)match(input,Define,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getDvarDefAccess().getDEFINEKeyword_0_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1441:2: ( (lv_ta_2_0= ruleTimeArraySize ) )?
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==LeftParenthesis) ) {
                        alt37=1;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalWreslEditorParser.g:1442:1: (lv_ta_2_0= ruleTimeArraySize )
                            {
                            // InternalWreslEditorParser.g:1442:1: (lv_ta_2_0= ruleTimeArraySize )
                            // InternalWreslEditorParser.g:1443:3: lv_ta_2_0= ruleTimeArraySize
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDvarDefAccess().getTaTimeArraySizeParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_17);
                            lv_ta_2_0=ruleTimeArraySize();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"ta",
                                      		lv_ta_2_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1459:3: (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )?
                    int alt39=2;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==LeftSquareBracket) ) {
                        alt39=1;
                    }
                    switch (alt39) {
                        case 1 :
                            // InternalWreslEditorParser.g:1460:2: otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket
                            {
                            otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getDvarDefAccess().getLeftSquareBracketKeyword_0_2_0());
                                  
                            }
                            // InternalWreslEditorParser.g:1464:1: ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) )
                            // InternalWreslEditorParser.g:1465:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                            {
                            // InternalWreslEditorParser.g:1465:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                            // InternalWreslEditorParser.g:1466:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                            {
                            // InternalWreslEditorParser.g:1466:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                            int alt38=2;
                            int LA38_0 = input.LA(1);

                            if ( (LA38_0==Local) ) {
                                int LA38_1 = input.LA(2);

                                if ( (synpred46_InternalWreslEditorParser()) ) {
                                    alt38=1;
                                }
                                else if ( (true) ) {
                                    alt38=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 38, 1, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 38, 0, input);

                                throw nvae;
                            }
                            switch (alt38) {
                                case 1 :
                                    // InternalWreslEditorParser.g:1467:3: lv_local_4_1= Local
                                    {
                                    lv_local_4_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_4_1, grammarAccess.getDvarDefAccess().getLocalLocalKeyword_0_2_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getDvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalWreslEditorParser.g:1480:8: lv_local_4_2= Local
                                    {
                                    lv_local_4_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_4_2, grammarAccess.getDvarDefAccess().getLocalLOCALKeyword_0_2_1_0_1());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getDvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getDvarDefAccess().getRightSquareBracketKeyword_0_2_2());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1501:3: ( (otherlv_6= RULE_ID ) )
                    // InternalWreslEditorParser.g:1502:1: (otherlv_6= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:1502:1: (otherlv_6= RULE_ID )
                    // InternalWreslEditorParser.g:1503:3: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getDvarDefRule());
                      	        }
                              
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_6, grammarAccess.getDvarDefAccess().getRefDeclarationCrossReference_0_3_0()); 
                      	
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,LeftCurlyBracket,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDvarDefAccess().getLeftCurlyBracketKeyword_0_4());
                          
                    }
                    // InternalWreslEditorParser.g:1522:1: ( ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) ) )
                    // InternalWreslEditorParser.g:1523:1: ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) )
                    {
                    // InternalWreslEditorParser.g:1523:1: ( (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger ) )
                    // InternalWreslEditorParser.g:1524:1: (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger )
                    {
                    // InternalWreslEditorParser.g:1524:1: (lv_definition_8_1= ruleDVar | lv_definition_8_2= ruleDVarInteger )
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==Lower||LA40_0==Upper||LA40_0==Std) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==Integer) ) {
                        alt40=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 0, input);

                        throw nvae;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalWreslEditorParser.g:1525:3: lv_definition_8_1= ruleDVar
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDvarDefAccess().getDefinitionDVarParserRuleCall_0_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_9);
                            lv_definition_8_1=ruleDVar();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"definition",
                                      		lv_definition_8_1, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.DVar");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1540:8: lv_definition_8_2= ruleDVarInteger
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDvarDefAccess().getDefinitionDVarIntegerParserRuleCall_0_5_0_1()); 
                              	    
                            }
                            pushFollow(FOLLOW_9);
                            lv_definition_8_2=ruleDVarInteger();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"definition",
                                      		lv_definition_8_2, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.DVarInteger");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_9=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getDvarDefAccess().getRightCurlyBracketKeyword_0_6());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:1564:6: ( (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket )
                    {
                    // InternalWreslEditorParser.g:1564:6: ( (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket )
                    // InternalWreslEditorParser.g:1564:7: (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 ) ( (lv_ta_13_0= ruleTimeArraySize ) )? (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )? ( (otherlv_17= RULE_ID ) ) otherlv_18= LeftCurlyBracket ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) ) otherlv_20= RightCurlyBracket
                    {
                    // InternalWreslEditorParser.g:1564:7: (otherlv_10= Dvar_1 | otherlv_11= Dvar_1 | otherlv_12= Dvar_1 )
                    int alt41=3;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==Dvar_1) ) {
                        int LA41_1 = input.LA(2);

                        if ( (synpred50_InternalWreslEditorParser()) ) {
                            alt41=1;
                        }
                        else if ( (synpred51_InternalWreslEditorParser()) ) {
                            alt41=2;
                        }
                        else if ( (true) ) {
                            alt41=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 41, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 41, 0, input);

                        throw nvae;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalWreslEditorParser.g:1565:2: otherlv_10= Dvar_1
                            {
                            otherlv_10=(Token)match(input,Dvar_1,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getDvarDefAccess().getDvarKeyword_1_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1571:2: otherlv_11= Dvar_1
                            {
                            otherlv_11=(Token)match(input,Dvar_1,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getDvarDefAccess().getDVARKeyword_1_0_1());
                                  
                            }

                            }
                            break;
                        case 3 :
                            // InternalWreslEditorParser.g:1577:2: otherlv_12= Dvar_1
                            {
                            otherlv_12=(Token)match(input,Dvar_1,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getDvarDefAccess().getDvarKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1581:2: ( (lv_ta_13_0= ruleTimeArraySize ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==LeftParenthesis) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalWreslEditorParser.g:1582:1: (lv_ta_13_0= ruleTimeArraySize )
                            {
                            // InternalWreslEditorParser.g:1582:1: (lv_ta_13_0= ruleTimeArraySize )
                            // InternalWreslEditorParser.g:1583:3: lv_ta_13_0= ruleTimeArraySize
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDvarDefAccess().getTaTimeArraySizeParserRuleCall_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_17);
                            lv_ta_13_0=ruleTimeArraySize();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"ta",
                                      		lv_ta_13_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1599:3: (otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==LeftSquareBracket) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalWreslEditorParser.g:1600:2: otherlv_14= LeftSquareBracket ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) ) otherlv_16= RightSquareBracket
                            {
                            otherlv_14=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getDvarDefAccess().getLeftSquareBracketKeyword_1_2_0());
                                  
                            }
                            // InternalWreslEditorParser.g:1604:1: ( ( (lv_local_15_1= Local | lv_local_15_2= Local ) ) )
                            // InternalWreslEditorParser.g:1605:1: ( (lv_local_15_1= Local | lv_local_15_2= Local ) )
                            {
                            // InternalWreslEditorParser.g:1605:1: ( (lv_local_15_1= Local | lv_local_15_2= Local ) )
                            // InternalWreslEditorParser.g:1606:1: (lv_local_15_1= Local | lv_local_15_2= Local )
                            {
                            // InternalWreslEditorParser.g:1606:1: (lv_local_15_1= Local | lv_local_15_2= Local )
                            int alt43=2;
                            int LA43_0 = input.LA(1);

                            if ( (LA43_0==Local) ) {
                                int LA43_1 = input.LA(2);

                                if ( (synpred53_InternalWreslEditorParser()) ) {
                                    alt43=1;
                                }
                                else if ( (true) ) {
                                    alt43=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 43, 1, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 43, 0, input);

                                throw nvae;
                            }
                            switch (alt43) {
                                case 1 :
                                    // InternalWreslEditorParser.g:1607:3: lv_local_15_1= Local
                                    {
                                    lv_local_15_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_15_1, grammarAccess.getDvarDefAccess().getLocalLocalKeyword_1_2_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getDvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalWreslEditorParser.g:1620:8: lv_local_15_2= Local
                                    {
                                    lv_local_15_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_local_15_2, grammarAccess.getDvarDefAccess().getLocalLOCALKeyword_1_2_1_0_1());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getDvarDefRule());
                                      	        }
                                             		setWithLastConsumed(current, "local", true, null);
                                      	    
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_16=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_16, grammarAccess.getDvarDefAccess().getRightSquareBracketKeyword_1_2_2());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1641:3: ( (otherlv_17= RULE_ID ) )
                    // InternalWreslEditorParser.g:1642:1: (otherlv_17= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:1642:1: (otherlv_17= RULE_ID )
                    // InternalWreslEditorParser.g:1643:3: otherlv_17= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getDvarDefRule());
                      	        }
                              
                    }
                    otherlv_17=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_17, grammarAccess.getDvarDefAccess().getRefDeclarationCrossReference_1_3_0()); 
                      	
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,LeftCurlyBracket,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getDvarDefAccess().getLeftCurlyBracketKeyword_1_4());
                          
                    }
                    // InternalWreslEditorParser.g:1662:1: ( ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) ) )
                    // InternalWreslEditorParser.g:1663:1: ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) )
                    {
                    // InternalWreslEditorParser.g:1663:1: ( (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger ) )
                    // InternalWreslEditorParser.g:1664:1: (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger )
                    {
                    // InternalWreslEditorParser.g:1664:1: (lv_definition_19_1= ruleDVar | lv_definition_19_2= ruleDVarInteger )
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==Lower||LA45_0==Upper||LA45_0==Std) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==Integer) ) {
                        alt45=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalWreslEditorParser.g:1665:3: lv_definition_19_1= ruleDVar
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDvarDefAccess().getDefinitionDVarParserRuleCall_1_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_9);
                            lv_definition_19_1=ruleDVar();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"definition",
                                      		lv_definition_19_1, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.DVar");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1680:8: lv_definition_19_2= ruleDVarInteger
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDvarDefAccess().getDefinitionDVarIntegerParserRuleCall_1_5_0_1()); 
                              	    
                            }
                            pushFollow(FOLLOW_9);
                            lv_definition_19_2=ruleDVarInteger();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getDvarDefRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"definition",
                                      		lv_definition_19_2, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.DVarInteger");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_20=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getDvarDefAccess().getRightCurlyBracketKeyword_1_6());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDvarDef"


    // $ANTLR start "entryRuleConstDef"
    // InternalWreslEditorParser.g:1711:1: entryRuleConstDef returns [EObject current=null] : iv_ruleConstDef= ruleConstDef EOF ;
    public final EObject entryRuleConstDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstDef = null;


        try {
            // InternalWreslEditorParser.g:1712:2: (iv_ruleConstDef= ruleConstDef EOF )
            // InternalWreslEditorParser.g:1713:2: iv_ruleConstDef= ruleConstDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDef=ruleConstDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDef"


    // $ANTLR start "ruleConstDef"
    // InternalWreslEditorParser.g:1720:1: ruleConstDef returns [EObject current=null] : ( (otherlv_0= Const_1 | otherlv_1= Const_1 | otherlv_2= Const_1 ) (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleNumber ) ) otherlv_9= RightCurlyBracket ) ;
    public final EObject ruleConstDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_local_4_1=null;
        Token lv_local_4_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_definition_8_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:1723:28: ( ( (otherlv_0= Const_1 | otherlv_1= Const_1 | otherlv_2= Const_1 ) (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleNumber ) ) otherlv_9= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:1724:1: ( (otherlv_0= Const_1 | otherlv_1= Const_1 | otherlv_2= Const_1 ) (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleNumber ) ) otherlv_9= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:1724:1: ( (otherlv_0= Const_1 | otherlv_1= Const_1 | otherlv_2= Const_1 ) (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleNumber ) ) otherlv_9= RightCurlyBracket )
            // InternalWreslEditorParser.g:1724:2: (otherlv_0= Const_1 | otherlv_1= Const_1 | otherlv_2= Const_1 ) (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( (lv_definition_8_0= ruleNumber ) ) otherlv_9= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:1724:2: (otherlv_0= Const_1 | otherlv_1= Const_1 | otherlv_2= Const_1 )
            int alt47=3;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==Const_1) ) {
                int LA47_1 = input.LA(2);

                if ( (synpred56_InternalWreslEditorParser()) ) {
                    alt47=1;
                }
                else if ( (synpred57_InternalWreslEditorParser()) ) {
                    alt47=2;
                }
                else if ( (true) ) {
                    alt47=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalWreslEditorParser.g:1725:2: otherlv_0= Const_1
                    {
                    otherlv_0=(Token)match(input,Const_1,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getConstDefAccess().getConstKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:1731:2: otherlv_1= Const_1
                    {
                    otherlv_1=(Token)match(input,Const_1,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getConstDefAccess().getCONSTKeyword_0_1());
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:1737:2: otherlv_2= Const_1
                    {
                    otherlv_2=(Token)match(input,Const_1,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConstDefAccess().getConstKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1741:2: (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==LeftSquareBracket) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalWreslEditorParser.g:1742:2: otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getConstDefAccess().getLeftSquareBracketKeyword_1_0());
                          
                    }
                    // InternalWreslEditorParser.g:1746:1: ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) )
                    // InternalWreslEditorParser.g:1747:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                    {
                    // InternalWreslEditorParser.g:1747:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                    // InternalWreslEditorParser.g:1748:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                    {
                    // InternalWreslEditorParser.g:1748:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==Local) ) {
                        int LA48_1 = input.LA(2);

                        if ( (synpred58_InternalWreslEditorParser()) ) {
                            alt48=1;
                        }
                        else if ( (true) ) {
                            alt48=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 48, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 0, input);

                        throw nvae;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalWreslEditorParser.g:1749:3: lv_local_4_1= Local
                            {
                            lv_local_4_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_4_1, grammarAccess.getConstDefAccess().getLocalLocalKeyword_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getConstDefRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1762:8: lv_local_4_2= Local
                            {
                            lv_local_4_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_4_2, grammarAccess.getConstDefAccess().getLocalLOCALKeyword_1_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getConstDefRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getConstDefAccess().getRightSquareBracketKeyword_1_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1783:3: ( (otherlv_6= RULE_ID ) )
            // InternalWreslEditorParser.g:1784:1: (otherlv_6= RULE_ID )
            {
            // InternalWreslEditorParser.g:1784:1: (otherlv_6= RULE_ID )
            // InternalWreslEditorParser.g:1785:3: otherlv_6= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getConstDefRule());
              	        }
                      
            }
            otherlv_6=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_6, grammarAccess.getConstDefAccess().getRefDeclarationCrossReference_2_0()); 
              	
            }

            }


            }

            otherlv_7=(Token)match(input,LeftCurlyBracket,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getConstDefAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:1804:1: ( (lv_definition_8_0= ruleNumber ) )
            // InternalWreslEditorParser.g:1805:1: (lv_definition_8_0= ruleNumber )
            {
            // InternalWreslEditorParser.g:1805:1: (lv_definition_8_0= ruleNumber )
            // InternalWreslEditorParser.g:1806:3: lv_definition_8_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstDefAccess().getDefinitionNumberParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_9);
            lv_definition_8_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstDefRule());
              	        }
                     		set(
                     			current, 
                     			"definition",
                      		lv_definition_8_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_9=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getConstDefAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstDef"


    // $ANTLR start "entryRuleAlias"
    // InternalWreslEditorParser.g:1835:1: entryRuleAlias returns [EObject current=null] : iv_ruleAlias= ruleAlias EOF ;
    public final EObject entryRuleAlias() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlias = null;


        try {
            // InternalWreslEditorParser.g:1836:2: (iv_ruleAlias= ruleAlias EOF )
            // InternalWreslEditorParser.g:1837:2: iv_ruleAlias= ruleAlias EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAlias=ruleAlias();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAlias; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAlias"


    // $ANTLR start "ruleAlias"
    // InternalWreslEditorParser.g:1844:1: ruleAlias returns [EObject current=null] : ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket (otherlv_8= Alias | otherlv_9= Alias ) ( (lv_expression_10_0= ruleExpression ) ) ( (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) ) )? ( (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) ) )? otherlv_17= RightCurlyBracket ) ;
    public final EObject ruleAlias() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_local_4_1=null;
        Token lv_local_4_2=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_kind_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_units_16_0=null;
        Token otherlv_17=null;
        EObject lv_ta_2_0 = null;

        EObject lv_expression_10_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:1847:28: ( ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket (otherlv_8= Alias | otherlv_9= Alias ) ( (lv_expression_10_0= ruleExpression ) ) ( (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) ) )? ( (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) ) )? otherlv_17= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:1848:1: ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket (otherlv_8= Alias | otherlv_9= Alias ) ( (lv_expression_10_0= ruleExpression ) ) ( (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) ) )? ( (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) ) )? otherlv_17= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:1848:1: ( (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket (otherlv_8= Alias | otherlv_9= Alias ) ( (lv_expression_10_0= ruleExpression ) ) ( (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) ) )? ( (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) ) )? otherlv_17= RightCurlyBracket )
            // InternalWreslEditorParser.g:1848:2: (otherlv_0= Define | otherlv_1= Define ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (otherlv_6= RULE_ID ) ) otherlv_7= LeftCurlyBracket (otherlv_8= Alias | otherlv_9= Alias ) ( (lv_expression_10_0= ruleExpression ) ) ( (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) ) )? ( (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) ) )? otherlv_17= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:1848:2: (otherlv_0= Define | otherlv_1= Define )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==Define) ) {
                int LA50_1 = input.LA(2);

                if ( (synpred60_InternalWreslEditorParser()) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalWreslEditorParser.g:1849:2: otherlv_0= Define
                    {
                    otherlv_0=(Token)match(input,Define,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getAliasAccess().getDefineKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:1855:2: otherlv_1= Define
                    {
                    otherlv_1=(Token)match(input,Define,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getAliasAccess().getDEFINEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1859:2: ( (lv_ta_2_0= ruleTimeArraySize ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==LeftParenthesis) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalWreslEditorParser.g:1860:1: (lv_ta_2_0= ruleTimeArraySize )
                    {
                    // InternalWreslEditorParser.g:1860:1: (lv_ta_2_0= ruleTimeArraySize )
                    // InternalWreslEditorParser.g:1861:3: lv_ta_2_0= ruleTimeArraySize
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAliasAccess().getTaTimeArraySizeParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_ta_2_0=ruleTimeArraySize();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAliasRule());
                      	        }
                             		set(
                             			current, 
                             			"ta",
                              		lv_ta_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalWreslEditorParser.g:1877:3: (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==LeftSquareBracket) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalWreslEditorParser.g:1878:2: otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAliasAccess().getLeftSquareBracketKeyword_2_0());
                          
                    }
                    // InternalWreslEditorParser.g:1882:1: ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) )
                    // InternalWreslEditorParser.g:1883:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                    {
                    // InternalWreslEditorParser.g:1883:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                    // InternalWreslEditorParser.g:1884:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                    {
                    // InternalWreslEditorParser.g:1884:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==Local) ) {
                        int LA52_1 = input.LA(2);

                        if ( (synpred62_InternalWreslEditorParser()) ) {
                            alt52=1;
                        }
                        else if ( (true) ) {
                            alt52=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 52, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 52, 0, input);

                        throw nvae;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalWreslEditorParser.g:1885:3: lv_local_4_1= Local
                            {
                            lv_local_4_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_4_1, grammarAccess.getAliasAccess().getLocalLocalKeyword_2_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAliasRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1898:8: lv_local_4_2= Local
                            {
                            lv_local_4_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_4_2, grammarAccess.getAliasAccess().getLocalLOCALKeyword_2_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAliasRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAliasAccess().getRightSquareBracketKeyword_2_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1919:3: ( (otherlv_6= RULE_ID ) )
            // InternalWreslEditorParser.g:1920:1: (otherlv_6= RULE_ID )
            {
            // InternalWreslEditorParser.g:1920:1: (otherlv_6= RULE_ID )
            // InternalWreslEditorParser.g:1921:3: otherlv_6= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAliasRule());
              	        }
                      
            }
            otherlv_6=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_6, grammarAccess.getAliasAccess().getRefDeclarationCrossReference_3_0()); 
              	
            }

            }


            }

            otherlv_7=(Token)match(input,LeftCurlyBracket,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getAliasAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalWreslEditorParser.g:1940:1: (otherlv_8= Alias | otherlv_9= Alias )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==Alias) ) {
                int LA54_1 = input.LA(2);

                if ( (synpred64_InternalWreslEditorParser()) ) {
                    alt54=1;
                }
                else if ( (true) ) {
                    alt54=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalWreslEditorParser.g:1941:2: otherlv_8= Alias
                    {
                    otherlv_8=(Token)match(input,Alias,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAliasAccess().getAliasKeyword_5_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:1947:2: otherlv_9= Alias
                    {
                    otherlv_9=(Token)match(input,Alias,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getAliasAccess().getALIASKeyword_5_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:1951:2: ( (lv_expression_10_0= ruleExpression ) )
            // InternalWreslEditorParser.g:1952:1: (lv_expression_10_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:1952:1: (lv_expression_10_0= ruleExpression )
            // InternalWreslEditorParser.g:1953:3: lv_expression_10_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAliasAccess().getExpressionExpressionParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FOLLOW_33);
            lv_expression_10_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAliasRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_10_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:1969:2: ( (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Kind) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalWreslEditorParser.g:1969:3: (otherlv_11= Kind | otherlv_12= Kind ) ( (lv_kind_13_0= RULE_STRING ) )
                    {
                    // InternalWreslEditorParser.g:1969:3: (otherlv_11= Kind | otherlv_12= Kind )
                    int alt55=2;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==Kind) ) {
                        int LA55_1 = input.LA(2);

                        if ( (synpred65_InternalWreslEditorParser()) ) {
                            alt55=1;
                        }
                        else if ( (true) ) {
                            alt55=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 55, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 0, input);

                        throw nvae;
                    }
                    switch (alt55) {
                        case 1 :
                            // InternalWreslEditorParser.g:1970:2: otherlv_11= Kind
                            {
                            otherlv_11=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getAliasAccess().getKindKeyword_7_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:1976:2: otherlv_12= Kind
                            {
                            otherlv_12=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getAliasAccess().getKINDKeyword_7_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:1980:2: ( (lv_kind_13_0= RULE_STRING ) )
                    // InternalWreslEditorParser.g:1981:1: (lv_kind_13_0= RULE_STRING )
                    {
                    // InternalWreslEditorParser.g:1981:1: (lv_kind_13_0= RULE_STRING )
                    // InternalWreslEditorParser.g:1982:3: lv_kind_13_0= RULE_STRING
                    {
                    lv_kind_13_0=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_kind_13_0, grammarAccess.getAliasAccess().getKindSTRINGTerminalRuleCall_7_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAliasRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"kind",
                              		lv_kind_13_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalWreslEditorParser.g:1998:4: ( (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Units) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalWreslEditorParser.g:1998:5: (otherlv_14= Units | otherlv_15= Units ) ( (lv_units_16_0= RULE_STRING ) )
                    {
                    // InternalWreslEditorParser.g:1998:5: (otherlv_14= Units | otherlv_15= Units )
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==Units) ) {
                        int LA57_1 = input.LA(2);

                        if ( (synpred67_InternalWreslEditorParser()) ) {
                            alt57=1;
                        }
                        else if ( (true) ) {
                            alt57=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 57, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 0, input);

                        throw nvae;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalWreslEditorParser.g:1999:2: otherlv_14= Units
                            {
                            otherlv_14=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAliasAccess().getUnitsKeyword_8_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:2005:2: otherlv_15= Units
                            {
                            otherlv_15=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getAliasAccess().getUNITSKeyword_8_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:2009:2: ( (lv_units_16_0= RULE_STRING ) )
                    // InternalWreslEditorParser.g:2010:1: (lv_units_16_0= RULE_STRING )
                    {
                    // InternalWreslEditorParser.g:2010:1: (lv_units_16_0= RULE_STRING )
                    // InternalWreslEditorParser.g:2011:3: lv_units_16_0= RULE_STRING
                    {
                    lv_units_16_0=(Token)match(input,RULE_STRING,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_units_16_0, grammarAccess.getAliasAccess().getUnitsSTRINGTerminalRuleCall_8_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAliasRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"units",
                              		lv_units_16_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_17, grammarAccess.getAliasAccess().getRightCurlyBracketKeyword_9());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAlias"


    // $ANTLR start "entryRuleExternal"
    // InternalWreslEditorParser.g:2040:1: entryRuleExternal returns [EObject current=null] : iv_ruleExternal= ruleExternal EOF ;
    public final EObject entryRuleExternal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternal = null;


        try {
            // InternalWreslEditorParser.g:2041:2: (iv_ruleExternal= ruleExternal EOF )
            // InternalWreslEditorParser.g:2042:2: iv_ruleExternal= ruleExternal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternal=ruleExternal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternal"


    // $ANTLR start "ruleExternal"
    // InternalWreslEditorParser.g:2049:1: ruleExternal returns [EObject current=null] : ( (otherlv_0= External | otherlv_1= External ) ( ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) ) | ( () ( (lv_name_6_0= RULE_ID ) ) ) ) ) ;
    public final EObject ruleExternal() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_name_6_0=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2052:28: ( ( (otherlv_0= External | otherlv_1= External ) ( ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) ) | ( () ( (lv_name_6_0= RULE_ID ) ) ) ) ) )
            // InternalWreslEditorParser.g:2053:1: ( (otherlv_0= External | otherlv_1= External ) ( ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) ) | ( () ( (lv_name_6_0= RULE_ID ) ) ) ) )
            {
            // InternalWreslEditorParser.g:2053:1: ( (otherlv_0= External | otherlv_1= External ) ( ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) ) | ( () ( (lv_name_6_0= RULE_ID ) ) ) ) )
            // InternalWreslEditorParser.g:2053:2: (otherlv_0= External | otherlv_1= External ) ( ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) ) | ( () ( (lv_name_6_0= RULE_ID ) ) ) )
            {
            // InternalWreslEditorParser.g:2053:2: (otherlv_0= External | otherlv_1= External )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==External) ) {
                int LA59_1 = input.LA(2);

                if ( (synpred69_InternalWreslEditorParser()) ) {
                    alt59=1;
                }
                else if ( (true) ) {
                    alt59=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalWreslEditorParser.g:2054:2: otherlv_0= External
                    {
                    otherlv_0=(Token)match(input,External,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getExternalAccess().getExternalKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2060:2: otherlv_1= External
                    {
                    otherlv_1=(Token)match(input,External,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExternalAccess().getEXTERNALKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2064:2: ( ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) ) | ( () ( (lv_name_6_0= RULE_ID ) ) ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_ID) ) {
                int LA61_1 = input.LA(2);

                if ( (LA61_1==Dll) ) {
                    alt61=1;
                }
                else if ( (LA61_1==EOF||LA61_1==RightCurlyBracket) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalWreslEditorParser.g:2064:3: ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) )
                    {
                    // InternalWreslEditorParser.g:2064:3: ( ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll ) )
                    // InternalWreslEditorParser.g:2064:4: ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Dll | otherlv_4= Dll )
                    {
                    // InternalWreslEditorParser.g:2064:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:2065:1: (lv_name_2_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:2065:1: (lv_name_2_0= RULE_ID )
                    // InternalWreslEditorParser.g:2066:3: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_0, grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_0_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExternalRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }


                    }

                    // InternalWreslEditorParser.g:2082:2: (otherlv_3= Dll | otherlv_4= Dll )
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==Dll) ) {
                        int LA60_1 = input.LA(2);

                        if ( (synpred70_InternalWreslEditorParser()) ) {
                            alt60=1;
                        }
                        else if ( (true) ) {
                            alt60=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 60, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 0, input);

                        throw nvae;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalWreslEditorParser.g:2083:2: otherlv_3= Dll
                            {
                            otherlv_3=(Token)match(input,Dll,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getExternalAccess().getDllKeyword_1_0_1_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:2089:2: otherlv_4= Dll
                            {
                            otherlv_4=(Token)match(input,Dll,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getExternalAccess().getDLLKeyword_1_0_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2094:6: ( () ( (lv_name_6_0= RULE_ID ) ) )
                    {
                    // InternalWreslEditorParser.g:2094:6: ( () ( (lv_name_6_0= RULE_ID ) ) )
                    // InternalWreslEditorParser.g:2094:7: () ( (lv_name_6_0= RULE_ID ) )
                    {
                    // InternalWreslEditorParser.g:2094:7: ()
                    // InternalWreslEditorParser.g:2095:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getExternalAccess().getExternalAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalWreslEditorParser.g:2103:2: ( (lv_name_6_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:2104:1: (lv_name_6_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:2104:1: (lv_name_6_0= RULE_ID )
                    // InternalWreslEditorParser.g:2105:3: lv_name_6_0= RULE_ID
                    {
                    lv_name_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_6_0, grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExternalRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_6_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternal"


    // $ANTLR start "entryRuleDVar"
    // InternalWreslEditorParser.g:2129:1: entryRuleDVar returns [EObject current=null] : iv_ruleDVar= ruleDVar EOF ;
    public final EObject entryRuleDVar() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDVar = null;


        try {
            // InternalWreslEditorParser.g:2130:2: (iv_ruleDVar= ruleDVar EOF )
            // InternalWreslEditorParser.g:2131:2: iv_ruleDVar= ruleDVar EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDVarRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDVar=ruleDVar();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDVar; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDVar"


    // $ANTLR start "ruleDVar"
    // InternalWreslEditorParser.g:2138:1: ruleDVar returns [EObject current=null] : (this_DVarStd_0= ruleDVarStd | this_DVarNonStd_1= ruleDVarNonStd ) ;
    public final EObject ruleDVar() throws RecognitionException {
        EObject current = null;

        EObject this_DVarStd_0 = null;

        EObject this_DVarNonStd_1 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2141:28: ( (this_DVarStd_0= ruleDVarStd | this_DVarNonStd_1= ruleDVarNonStd ) )
            // InternalWreslEditorParser.g:2142:1: (this_DVarStd_0= ruleDVarStd | this_DVarNonStd_1= ruleDVarNonStd )
            {
            // InternalWreslEditorParser.g:2142:1: (this_DVarStd_0= ruleDVarStd | this_DVarNonStd_1= ruleDVarNonStd )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==Std) ) {
                alt62=1;
            }
            else if ( (LA62_0==Lower||LA62_0==Upper) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalWreslEditorParser.g:2143:2: this_DVarStd_0= ruleDVarStd
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDVarAccess().getDVarStdParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DVarStd_0=ruleDVarStd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DVarStd_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2156:2: this_DVarNonStd_1= ruleDVarNonStd
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDVarAccess().getDVarNonStdParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DVarNonStd_1=ruleDVarNonStd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DVarNonStd_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDVar"


    // $ANTLR start "entryRuleDVarNonStd"
    // InternalWreslEditorParser.g:2175:1: entryRuleDVarNonStd returns [EObject current=null] : iv_ruleDVarNonStd= ruleDVarNonStd EOF ;
    public final EObject entryRuleDVarNonStd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDVarNonStd = null;


        try {
            // InternalWreslEditorParser.g:2176:2: (iv_ruleDVarNonStd= ruleDVarNonStd EOF )
            // InternalWreslEditorParser.g:2177:2: iv_ruleDVarNonStd= ruleDVarNonStd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDVarNonStdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDVarNonStd=ruleDVarNonStd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDVarNonStd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDVarNonStd"


    // $ANTLR start "ruleDVarNonStd"
    // InternalWreslEditorParser.g:2184:1: ruleDVarNonStd returns [EObject current=null] : ( ( (lv_lowerUpper_0_0= ruleLowerAndOrUpper ) ) (otherlv_1= Kind | otherlv_2= Kind ) ( (lv_kind_3_0= RULE_STRING ) ) (otherlv_4= Units | otherlv_5= Units ) ( (lv_units_6_0= RULE_STRING ) ) ) ;
    public final EObject ruleDVarNonStd() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_kind_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_units_6_0=null;
        EObject lv_lowerUpper_0_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2187:28: ( ( ( (lv_lowerUpper_0_0= ruleLowerAndOrUpper ) ) (otherlv_1= Kind | otherlv_2= Kind ) ( (lv_kind_3_0= RULE_STRING ) ) (otherlv_4= Units | otherlv_5= Units ) ( (lv_units_6_0= RULE_STRING ) ) ) )
            // InternalWreslEditorParser.g:2188:1: ( ( (lv_lowerUpper_0_0= ruleLowerAndOrUpper ) ) (otherlv_1= Kind | otherlv_2= Kind ) ( (lv_kind_3_0= RULE_STRING ) ) (otherlv_4= Units | otherlv_5= Units ) ( (lv_units_6_0= RULE_STRING ) ) )
            {
            // InternalWreslEditorParser.g:2188:1: ( ( (lv_lowerUpper_0_0= ruleLowerAndOrUpper ) ) (otherlv_1= Kind | otherlv_2= Kind ) ( (lv_kind_3_0= RULE_STRING ) ) (otherlv_4= Units | otherlv_5= Units ) ( (lv_units_6_0= RULE_STRING ) ) )
            // InternalWreslEditorParser.g:2188:2: ( (lv_lowerUpper_0_0= ruleLowerAndOrUpper ) ) (otherlv_1= Kind | otherlv_2= Kind ) ( (lv_kind_3_0= RULE_STRING ) ) (otherlv_4= Units | otherlv_5= Units ) ( (lv_units_6_0= RULE_STRING ) )
            {
            // InternalWreslEditorParser.g:2188:2: ( (lv_lowerUpper_0_0= ruleLowerAndOrUpper ) )
            // InternalWreslEditorParser.g:2189:1: (lv_lowerUpper_0_0= ruleLowerAndOrUpper )
            {
            // InternalWreslEditorParser.g:2189:1: (lv_lowerUpper_0_0= ruleLowerAndOrUpper )
            // InternalWreslEditorParser.g:2190:3: lv_lowerUpper_0_0= ruleLowerAndOrUpper
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDVarNonStdAccess().getLowerUpperLowerAndOrUpperParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_37);
            lv_lowerUpper_0_0=ruleLowerAndOrUpper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDVarNonStdRule());
              	        }
                     		set(
                     			current, 
                     			"lowerUpper",
                      		lv_lowerUpper_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LowerAndOrUpper");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2206:2: (otherlv_1= Kind | otherlv_2= Kind )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==Kind) ) {
                int LA63_1 = input.LA(2);

                if ( (synpred73_InternalWreslEditorParser()) ) {
                    alt63=1;
                }
                else if ( (true) ) {
                    alt63=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 63, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalWreslEditorParser.g:2207:2: otherlv_1= Kind
                    {
                    otherlv_1=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDVarNonStdAccess().getKindKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2213:2: otherlv_2= Kind
                    {
                    otherlv_2=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDVarNonStdAccess().getKINDKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2217:2: ( (lv_kind_3_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2218:1: (lv_kind_3_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2218:1: (lv_kind_3_0= RULE_STRING )
            // InternalWreslEditorParser.g:2219:3: lv_kind_3_0= RULE_STRING
            {
            lv_kind_3_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_kind_3_0, grammarAccess.getDVarNonStdAccess().getKindSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarNonStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"kind",
                      		lv_kind_3_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2235:2: (otherlv_4= Units | otherlv_5= Units )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==Units) ) {
                int LA64_1 = input.LA(2);

                if ( (synpred74_InternalWreslEditorParser()) ) {
                    alt64=1;
                }
                else if ( (true) ) {
                    alt64=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalWreslEditorParser.g:2236:2: otherlv_4= Units
                    {
                    otherlv_4=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDVarNonStdAccess().getUnitsKeyword_3_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2242:2: otherlv_5= Units
                    {
                    otherlv_5=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDVarNonStdAccess().getUNITSKeyword_3_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2246:2: ( (lv_units_6_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2247:1: (lv_units_6_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2247:1: (lv_units_6_0= RULE_STRING )
            // InternalWreslEditorParser.g:2248:3: lv_units_6_0= RULE_STRING
            {
            lv_units_6_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_units_6_0, grammarAccess.getDVarNonStdAccess().getUnitsSTRINGTerminalRuleCall_4_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarNonStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"units",
                      		lv_units_6_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDVarNonStd"


    // $ANTLR start "entryRuleDVarStd"
    // InternalWreslEditorParser.g:2272:1: entryRuleDVarStd returns [EObject current=null] : iv_ruleDVarStd= ruleDVarStd EOF ;
    public final EObject entryRuleDVarStd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDVarStd = null;


        try {
            // InternalWreslEditorParser.g:2273:2: (iv_ruleDVarStd= ruleDVarStd EOF )
            // InternalWreslEditorParser.g:2274:2: iv_ruleDVarStd= ruleDVarStd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDVarStdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDVarStd=ruleDVarStd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDVarStd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDVarStd"


    // $ANTLR start "ruleDVarStd"
    // InternalWreslEditorParser.g:2281:1: ruleDVarStd returns [EObject current=null] : ( (otherlv_0= Std | otherlv_1= Std ) (otherlv_2= Kind | otherlv_3= Kind ) ( (lv_kind_4_0= RULE_STRING ) ) (otherlv_5= Units | otherlv_6= Units ) ( (lv_units_7_0= RULE_STRING ) ) ) ;
    public final EObject ruleDVarStd() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_kind_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_units_7_0=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2284:28: ( ( (otherlv_0= Std | otherlv_1= Std ) (otherlv_2= Kind | otherlv_3= Kind ) ( (lv_kind_4_0= RULE_STRING ) ) (otherlv_5= Units | otherlv_6= Units ) ( (lv_units_7_0= RULE_STRING ) ) ) )
            // InternalWreslEditorParser.g:2285:1: ( (otherlv_0= Std | otherlv_1= Std ) (otherlv_2= Kind | otherlv_3= Kind ) ( (lv_kind_4_0= RULE_STRING ) ) (otherlv_5= Units | otherlv_6= Units ) ( (lv_units_7_0= RULE_STRING ) ) )
            {
            // InternalWreslEditorParser.g:2285:1: ( (otherlv_0= Std | otherlv_1= Std ) (otherlv_2= Kind | otherlv_3= Kind ) ( (lv_kind_4_0= RULE_STRING ) ) (otherlv_5= Units | otherlv_6= Units ) ( (lv_units_7_0= RULE_STRING ) ) )
            // InternalWreslEditorParser.g:2285:2: (otherlv_0= Std | otherlv_1= Std ) (otherlv_2= Kind | otherlv_3= Kind ) ( (lv_kind_4_0= RULE_STRING ) ) (otherlv_5= Units | otherlv_6= Units ) ( (lv_units_7_0= RULE_STRING ) )
            {
            // InternalWreslEditorParser.g:2285:2: (otherlv_0= Std | otherlv_1= Std )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Std) ) {
                int LA65_1 = input.LA(2);

                if ( (synpred75_InternalWreslEditorParser()) ) {
                    alt65=1;
                }
                else if ( (true) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalWreslEditorParser.g:2286:2: otherlv_0= Std
                    {
                    otherlv_0=(Token)match(input,Std,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDVarStdAccess().getStdKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2292:2: otherlv_1= Std
                    {
                    otherlv_1=(Token)match(input,Std,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDVarStdAccess().getSTDKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2296:2: (otherlv_2= Kind | otherlv_3= Kind )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Kind) ) {
                int LA66_1 = input.LA(2);

                if ( (synpred76_InternalWreslEditorParser()) ) {
                    alt66=1;
                }
                else if ( (true) ) {
                    alt66=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalWreslEditorParser.g:2297:2: otherlv_2= Kind
                    {
                    otherlv_2=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDVarStdAccess().getKindKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2303:2: otherlv_3= Kind
                    {
                    otherlv_3=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDVarStdAccess().getKINDKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2307:2: ( (lv_kind_4_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2308:1: (lv_kind_4_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2308:1: (lv_kind_4_0= RULE_STRING )
            // InternalWreslEditorParser.g:2309:3: lv_kind_4_0= RULE_STRING
            {
            lv_kind_4_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_kind_4_0, grammarAccess.getDVarStdAccess().getKindSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"kind",
                      		lv_kind_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2325:2: (otherlv_5= Units | otherlv_6= Units )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Units) ) {
                int LA67_1 = input.LA(2);

                if ( (synpred77_InternalWreslEditorParser()) ) {
                    alt67=1;
                }
                else if ( (true) ) {
                    alt67=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalWreslEditorParser.g:2326:2: otherlv_5= Units
                    {
                    otherlv_5=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDVarStdAccess().getUnitsKeyword_3_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2332:2: otherlv_6= Units
                    {
                    otherlv_6=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getDVarStdAccess().getUNITSKeyword_3_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2336:2: ( (lv_units_7_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2337:1: (lv_units_7_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2337:1: (lv_units_7_0= RULE_STRING )
            // InternalWreslEditorParser.g:2338:3: lv_units_7_0= RULE_STRING
            {
            lv_units_7_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_units_7_0, grammarAccess.getDVarStdAccess().getUnitsSTRINGTerminalRuleCall_4_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"units",
                      		lv_units_7_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDVarStd"


    // $ANTLR start "entryRuleDVarInteger"
    // InternalWreslEditorParser.g:2362:1: entryRuleDVarInteger returns [EObject current=null] : iv_ruleDVarInteger= ruleDVarInteger EOF ;
    public final EObject entryRuleDVarInteger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDVarInteger = null;


        try {
            // InternalWreslEditorParser.g:2363:2: (iv_ruleDVarInteger= ruleDVarInteger EOF )
            // InternalWreslEditorParser.g:2364:2: iv_ruleDVarInteger= ruleDVarInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDVarIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDVarInteger=ruleDVarInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDVarInteger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDVarInteger"


    // $ANTLR start "ruleDVarInteger"
    // InternalWreslEditorParser.g:2371:1: ruleDVarInteger returns [EObject current=null] : (this_DVarIntegerStd_0= ruleDVarIntegerStd | this_DVarIntegerNonStd_1= ruleDVarIntegerNonStd ) ;
    public final EObject ruleDVarInteger() throws RecognitionException {
        EObject current = null;

        EObject this_DVarIntegerStd_0 = null;

        EObject this_DVarIntegerNonStd_1 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2374:28: ( (this_DVarIntegerStd_0= ruleDVarIntegerStd | this_DVarIntegerNonStd_1= ruleDVarIntegerNonStd ) )
            // InternalWreslEditorParser.g:2375:1: (this_DVarIntegerStd_0= ruleDVarIntegerStd | this_DVarIntegerNonStd_1= ruleDVarIntegerNonStd )
            {
            // InternalWreslEditorParser.g:2375:1: (this_DVarIntegerStd_0= ruleDVarIntegerStd | this_DVarIntegerNonStd_1= ruleDVarIntegerNonStd )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==Integer) ) {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==Std) ) {
                    alt68=1;
                }
                else if ( (LA68_1==Lower||LA68_1==Upper) ) {
                    alt68=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalWreslEditorParser.g:2376:2: this_DVarIntegerStd_0= ruleDVarIntegerStd
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDVarIntegerAccess().getDVarIntegerStdParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DVarIntegerStd_0=ruleDVarIntegerStd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DVarIntegerStd_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2389:2: this_DVarIntegerNonStd_1= ruleDVarIntegerNonStd
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDVarIntegerAccess().getDVarIntegerNonStdParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DVarIntegerNonStd_1=ruleDVarIntegerNonStd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DVarIntegerNonStd_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDVarInteger"


    // $ANTLR start "entryRuleDVarIntegerStd"
    // InternalWreslEditorParser.g:2408:1: entryRuleDVarIntegerStd returns [EObject current=null] : iv_ruleDVarIntegerStd= ruleDVarIntegerStd EOF ;
    public final EObject entryRuleDVarIntegerStd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDVarIntegerStd = null;


        try {
            // InternalWreslEditorParser.g:2409:2: (iv_ruleDVarIntegerStd= ruleDVarIntegerStd EOF )
            // InternalWreslEditorParser.g:2410:2: iv_ruleDVarIntegerStd= ruleDVarIntegerStd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDVarIntegerStdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDVarIntegerStd=ruleDVarIntegerStd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDVarIntegerStd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDVarIntegerStd"


    // $ANTLR start "ruleDVarIntegerStd"
    // InternalWreslEditorParser.g:2417:1: ruleDVarIntegerStd returns [EObject current=null] : ( (otherlv_0= Integer | otherlv_1= Integer ) (otherlv_2= Std | otherlv_3= Std ) (otherlv_4= Kind | otherlv_5= Kind ) ( (lv_kind_6_0= RULE_STRING ) ) (otherlv_7= Units | otherlv_8= Units ) ( (lv_units_9_0= RULE_STRING ) ) ) ;
    public final EObject ruleDVarIntegerStd() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_kind_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_units_9_0=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2420:28: ( ( (otherlv_0= Integer | otherlv_1= Integer ) (otherlv_2= Std | otherlv_3= Std ) (otherlv_4= Kind | otherlv_5= Kind ) ( (lv_kind_6_0= RULE_STRING ) ) (otherlv_7= Units | otherlv_8= Units ) ( (lv_units_9_0= RULE_STRING ) ) ) )
            // InternalWreslEditorParser.g:2421:1: ( (otherlv_0= Integer | otherlv_1= Integer ) (otherlv_2= Std | otherlv_3= Std ) (otherlv_4= Kind | otherlv_5= Kind ) ( (lv_kind_6_0= RULE_STRING ) ) (otherlv_7= Units | otherlv_8= Units ) ( (lv_units_9_0= RULE_STRING ) ) )
            {
            // InternalWreslEditorParser.g:2421:1: ( (otherlv_0= Integer | otherlv_1= Integer ) (otherlv_2= Std | otherlv_3= Std ) (otherlv_4= Kind | otherlv_5= Kind ) ( (lv_kind_6_0= RULE_STRING ) ) (otherlv_7= Units | otherlv_8= Units ) ( (lv_units_9_0= RULE_STRING ) ) )
            // InternalWreslEditorParser.g:2421:2: (otherlv_0= Integer | otherlv_1= Integer ) (otherlv_2= Std | otherlv_3= Std ) (otherlv_4= Kind | otherlv_5= Kind ) ( (lv_kind_6_0= RULE_STRING ) ) (otherlv_7= Units | otherlv_8= Units ) ( (lv_units_9_0= RULE_STRING ) )
            {
            // InternalWreslEditorParser.g:2421:2: (otherlv_0= Integer | otherlv_1= Integer )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==Integer) ) {
                int LA69_1 = input.LA(2);

                if ( (synpred79_InternalWreslEditorParser()) ) {
                    alt69=1;
                }
                else if ( (true) ) {
                    alt69=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalWreslEditorParser.g:2422:2: otherlv_0= Integer
                    {
                    otherlv_0=(Token)match(input,Integer,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDVarIntegerStdAccess().getIntegerKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2428:2: otherlv_1= Integer
                    {
                    otherlv_1=(Token)match(input,Integer,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDVarIntegerStdAccess().getINTEGERKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2432:2: (otherlv_2= Std | otherlv_3= Std )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==Std) ) {
                int LA70_1 = input.LA(2);

                if ( (synpred80_InternalWreslEditorParser()) ) {
                    alt70=1;
                }
                else if ( (true) ) {
                    alt70=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalWreslEditorParser.g:2433:2: otherlv_2= Std
                    {
                    otherlv_2=(Token)match(input,Std,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDVarIntegerStdAccess().getStdKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2439:2: otherlv_3= Std
                    {
                    otherlv_3=(Token)match(input,Std,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDVarIntegerStdAccess().getSTDKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2443:2: (otherlv_4= Kind | otherlv_5= Kind )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==Kind) ) {
                int LA71_1 = input.LA(2);

                if ( (synpred81_InternalWreslEditorParser()) ) {
                    alt71=1;
                }
                else if ( (true) ) {
                    alt71=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalWreslEditorParser.g:2444:2: otherlv_4= Kind
                    {
                    otherlv_4=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDVarIntegerStdAccess().getKindKeyword_2_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2450:2: otherlv_5= Kind
                    {
                    otherlv_5=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDVarIntegerStdAccess().getKINDKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2454:2: ( (lv_kind_6_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2455:1: (lv_kind_6_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2455:1: (lv_kind_6_0= RULE_STRING )
            // InternalWreslEditorParser.g:2456:3: lv_kind_6_0= RULE_STRING
            {
            lv_kind_6_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_kind_6_0, grammarAccess.getDVarIntegerStdAccess().getKindSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarIntegerStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"kind",
                      		lv_kind_6_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2472:2: (otherlv_7= Units | otherlv_8= Units )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==Units) ) {
                int LA72_1 = input.LA(2);

                if ( (synpred82_InternalWreslEditorParser()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalWreslEditorParser.g:2473:2: otherlv_7= Units
                    {
                    otherlv_7=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDVarIntegerStdAccess().getUnitsKeyword_4_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2479:2: otherlv_8= Units
                    {
                    otherlv_8=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getDVarIntegerStdAccess().getUNITSKeyword_4_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2483:2: ( (lv_units_9_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2484:1: (lv_units_9_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2484:1: (lv_units_9_0= RULE_STRING )
            // InternalWreslEditorParser.g:2485:3: lv_units_9_0= RULE_STRING
            {
            lv_units_9_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_units_9_0, grammarAccess.getDVarIntegerStdAccess().getUnitsSTRINGTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarIntegerStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"units",
                      		lv_units_9_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDVarIntegerStd"


    // $ANTLR start "entryRuleDVarIntegerNonStd"
    // InternalWreslEditorParser.g:2509:1: entryRuleDVarIntegerNonStd returns [EObject current=null] : iv_ruleDVarIntegerNonStd= ruleDVarIntegerNonStd EOF ;
    public final EObject entryRuleDVarIntegerNonStd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDVarIntegerNonStd = null;


        try {
            // InternalWreslEditorParser.g:2510:2: (iv_ruleDVarIntegerNonStd= ruleDVarIntegerNonStd EOF )
            // InternalWreslEditorParser.g:2511:2: iv_ruleDVarIntegerNonStd= ruleDVarIntegerNonStd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDVarIntegerNonStdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDVarIntegerNonStd=ruleDVarIntegerNonStd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDVarIntegerNonStd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDVarIntegerNonStd"


    // $ANTLR start "ruleDVarIntegerNonStd"
    // InternalWreslEditorParser.g:2518:1: ruleDVarIntegerNonStd returns [EObject current=null] : ( (otherlv_0= Integer | otherlv_1= Integer ) this_LowerAndOrUpper_2= ruleLowerAndOrUpper (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ) ;
    public final EObject ruleDVarIntegerNonStd() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_kind_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_units_8_0=null;
        EObject this_LowerAndOrUpper_2 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2521:28: ( ( (otherlv_0= Integer | otherlv_1= Integer ) this_LowerAndOrUpper_2= ruleLowerAndOrUpper (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ) )
            // InternalWreslEditorParser.g:2522:1: ( (otherlv_0= Integer | otherlv_1= Integer ) this_LowerAndOrUpper_2= ruleLowerAndOrUpper (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) )
            {
            // InternalWreslEditorParser.g:2522:1: ( (otherlv_0= Integer | otherlv_1= Integer ) this_LowerAndOrUpper_2= ruleLowerAndOrUpper (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) )
            // InternalWreslEditorParser.g:2522:2: (otherlv_0= Integer | otherlv_1= Integer ) this_LowerAndOrUpper_2= ruleLowerAndOrUpper (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) )
            {
            // InternalWreslEditorParser.g:2522:2: (otherlv_0= Integer | otherlv_1= Integer )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Integer) ) {
                int LA73_1 = input.LA(2);

                if ( (synpred83_InternalWreslEditorParser()) ) {
                    alt73=1;
                }
                else if ( (true) ) {
                    alt73=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 73, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalWreslEditorParser.g:2523:2: otherlv_0= Integer
                    {
                    otherlv_0=(Token)match(input,Integer,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDVarIntegerNonStdAccess().getIntegerKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2529:2: otherlv_1= Integer
                    {
                    otherlv_1=(Token)match(input,Integer,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDVarIntegerNonStdAccess().getINTEGERKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDVarIntegerNonStdAccess().getLowerAndOrUpperParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_37);
            this_LowerAndOrUpper_2=ruleLowerAndOrUpper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LowerAndOrUpper_2;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalWreslEditorParser.g:2545:1: (otherlv_3= Kind | otherlv_4= Kind )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==Kind) ) {
                int LA74_1 = input.LA(2);

                if ( (synpred84_InternalWreslEditorParser()) ) {
                    alt74=1;
                }
                else if ( (true) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalWreslEditorParser.g:2546:2: otherlv_3= Kind
                    {
                    otherlv_3=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDVarIntegerNonStdAccess().getKindKeyword_2_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2552:2: otherlv_4= Kind
                    {
                    otherlv_4=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDVarIntegerNonStdAccess().getKINDKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2556:2: ( (lv_kind_5_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2557:1: (lv_kind_5_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2557:1: (lv_kind_5_0= RULE_STRING )
            // InternalWreslEditorParser.g:2558:3: lv_kind_5_0= RULE_STRING
            {
            lv_kind_5_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_kind_5_0, grammarAccess.getDVarIntegerNonStdAccess().getKindSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarIntegerNonStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"kind",
                      		lv_kind_5_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2574:2: (otherlv_6= Units | otherlv_7= Units )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==Units) ) {
                int LA75_1 = input.LA(2);

                if ( (synpred85_InternalWreslEditorParser()) ) {
                    alt75=1;
                }
                else if ( (true) ) {
                    alt75=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 75, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalWreslEditorParser.g:2575:2: otherlv_6= Units
                    {
                    otherlv_6=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getDVarIntegerNonStdAccess().getUnitsKeyword_4_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2581:2: otherlv_7= Units
                    {
                    otherlv_7=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDVarIntegerNonStdAccess().getUNITSKeyword_4_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2585:2: ( (lv_units_8_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2586:1: (lv_units_8_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2586:1: (lv_units_8_0= RULE_STRING )
            // InternalWreslEditorParser.g:2587:3: lv_units_8_0= RULE_STRING
            {
            lv_units_8_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_units_8_0, grammarAccess.getDVarIntegerNonStdAccess().getUnitsSTRINGTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDVarIntegerNonStdRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"units",
                      		lv_units_8_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDVarIntegerNonStd"


    // $ANTLR start "entryRuleSVar"
    // InternalWreslEditorParser.g:2611:1: entryRuleSVar returns [EObject current=null] : iv_ruleSVar= ruleSVar EOF ;
    public final EObject entryRuleSVar() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSVar = null;


        try {
            // InternalWreslEditorParser.g:2612:2: (iv_ruleSVar= ruleSVar EOF )
            // InternalWreslEditorParser.g:2613:2: iv_ruleSVar= ruleSVar EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSVarRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSVar=ruleSVar();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSVar; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSVar"


    // $ANTLR start "ruleSVar"
    // InternalWreslEditorParser.g:2620:1: ruleSVar returns [EObject current=null] : (this_SVarDSS_0= ruleSVarDSS | this_SVarExpression_1= ruleSVarExpression | this_SVarSum_2= ruleSVarSum | this_SVarTable_3= ruleSVarTable | this_SVarCase_4= ruleSVarCase ) ;
    public final EObject ruleSVar() throws RecognitionException {
        EObject current = null;

        EObject this_SVarDSS_0 = null;

        EObject this_SVarExpression_1 = null;

        EObject this_SVarSum_2 = null;

        EObject this_SVarTable_3 = null;

        EObject this_SVarCase_4 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2623:28: ( (this_SVarDSS_0= ruleSVarDSS | this_SVarExpression_1= ruleSVarExpression | this_SVarSum_2= ruleSVarSum | this_SVarTable_3= ruleSVarTable | this_SVarCase_4= ruleSVarCase ) )
            // InternalWreslEditorParser.g:2624:1: (this_SVarDSS_0= ruleSVarDSS | this_SVarExpression_1= ruleSVarExpression | this_SVarSum_2= ruleSVarSum | this_SVarTable_3= ruleSVarTable | this_SVarCase_4= ruleSVarCase )
            {
            // InternalWreslEditorParser.g:2624:1: (this_SVarDSS_0= ruleSVarDSS | this_SVarExpression_1= ruleSVarExpression | this_SVarSum_2= ruleSVarSum | this_SVarTable_3= ruleSVarTable | this_SVarCase_4= ruleSVarCase )
            int alt76=5;
            switch ( input.LA(1) ) {
            case Timeseries:
                {
                alt76=1;
                }
                break;
            case Value:
                {
                alt76=2;
                }
                break;
            case Sum:
                {
                alt76=3;
                }
                break;
            case Select:
                {
                alt76=4;
                }
                break;
            case Case:
                {
                alt76=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalWreslEditorParser.g:2625:2: this_SVarDSS_0= ruleSVarDSS
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSVarAccess().getSVarDSSParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SVarDSS_0=ruleSVarDSS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SVarDSS_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2638:2: this_SVarExpression_1= ruleSVarExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSVarAccess().getSVarExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SVarExpression_1=ruleSVarExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SVarExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:2651:2: this_SVarSum_2= ruleSVarSum
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSVarAccess().getSVarSumParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SVarSum_2=ruleSVarSum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SVarSum_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:2664:2: this_SVarTable_3= ruleSVarTable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSVarAccess().getSVarTableParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SVarTable_3=ruleSVarTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SVarTable_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:2677:2: this_SVarCase_4= ruleSVarCase
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSVarAccess().getSVarCaseParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SVarCase_4=ruleSVarCase();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SVarCase_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSVar"


    // $ANTLR start "entryRuleSVarDSS"
    // InternalWreslEditorParser.g:2696:1: entryRuleSVarDSS returns [EObject current=null] : iv_ruleSVarDSS= ruleSVarDSS EOF ;
    public final EObject entryRuleSVarDSS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSVarDSS = null;


        try {
            // InternalWreslEditorParser.g:2697:2: (iv_ruleSVarDSS= ruleSVarDSS EOF )
            // InternalWreslEditorParser.g:2698:2: iv_ruleSVarDSS= ruleSVarDSS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSVarDSSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSVarDSS=ruleSVarDSS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSVarDSS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSVarDSS"


    // $ANTLR start "ruleSVarDSS"
    // InternalWreslEditorParser.g:2705:1: ruleSVarDSS returns [EObject current=null] : ( (otherlv_0= Timeseries | otherlv_1= Timeseries ) ( (lv_bPart_2_0= RULE_STRING ) )? (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ( (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleSVarDSS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_bPart_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_kind_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_units_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_convert_11_0=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2708:28: ( ( (otherlv_0= Timeseries | otherlv_1= Timeseries ) ( (lv_bPart_2_0= RULE_STRING ) )? (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ( (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) ) )? ) )
            // InternalWreslEditorParser.g:2709:1: ( (otherlv_0= Timeseries | otherlv_1= Timeseries ) ( (lv_bPart_2_0= RULE_STRING ) )? (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ( (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) ) )? )
            {
            // InternalWreslEditorParser.g:2709:1: ( (otherlv_0= Timeseries | otherlv_1= Timeseries ) ( (lv_bPart_2_0= RULE_STRING ) )? (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ( (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) ) )? )
            // InternalWreslEditorParser.g:2709:2: (otherlv_0= Timeseries | otherlv_1= Timeseries ) ( (lv_bPart_2_0= RULE_STRING ) )? (otherlv_3= Kind | otherlv_4= Kind ) ( (lv_kind_5_0= RULE_STRING ) ) (otherlv_6= Units | otherlv_7= Units ) ( (lv_units_8_0= RULE_STRING ) ) ( (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) ) )?
            {
            // InternalWreslEditorParser.g:2709:2: (otherlv_0= Timeseries | otherlv_1= Timeseries )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==Timeseries) ) {
                int LA77_1 = input.LA(2);

                if ( (synpred90_InternalWreslEditorParser()) ) {
                    alt77=1;
                }
                else if ( (true) ) {
                    alt77=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalWreslEditorParser.g:2710:2: otherlv_0= Timeseries
                    {
                    otherlv_0=(Token)match(input,Timeseries,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getSVarDSSAccess().getTimeseriesKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2716:2: otherlv_1= Timeseries
                    {
                    otherlv_1=(Token)match(input,Timeseries,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getSVarDSSAccess().getTIMESERIESKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2720:2: ( (lv_bPart_2_0= RULE_STRING ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_STRING) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalWreslEditorParser.g:2721:1: (lv_bPart_2_0= RULE_STRING )
                    {
                    // InternalWreslEditorParser.g:2721:1: (lv_bPart_2_0= RULE_STRING )
                    // InternalWreslEditorParser.g:2722:3: lv_bPart_2_0= RULE_STRING
                    {
                    lv_bPart_2_0=(Token)match(input,RULE_STRING,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_bPart_2_0, grammarAccess.getSVarDSSAccess().getBPartSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSVarDSSRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"bPart",
                              		lv_bPart_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalWreslEditorParser.g:2738:3: (otherlv_3= Kind | otherlv_4= Kind )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==Kind) ) {
                int LA79_1 = input.LA(2);

                if ( (synpred92_InternalWreslEditorParser()) ) {
                    alt79=1;
                }
                else if ( (true) ) {
                    alt79=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // InternalWreslEditorParser.g:2739:2: otherlv_3= Kind
                    {
                    otherlv_3=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getSVarDSSAccess().getKindKeyword_2_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2745:2: otherlv_4= Kind
                    {
                    otherlv_4=(Token)match(input,Kind,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSVarDSSAccess().getKINDKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2749:2: ( (lv_kind_5_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2750:1: (lv_kind_5_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2750:1: (lv_kind_5_0= RULE_STRING )
            // InternalWreslEditorParser.g:2751:3: lv_kind_5_0= RULE_STRING
            {
            lv_kind_5_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_kind_5_0, grammarAccess.getSVarDSSAccess().getKindSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSVarDSSRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"kind",
                      		lv_kind_5_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2767:2: (otherlv_6= Units | otherlv_7= Units )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Units) ) {
                int LA80_1 = input.LA(2);

                if ( (synpred93_InternalWreslEditorParser()) ) {
                    alt80=1;
                }
                else if ( (true) ) {
                    alt80=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalWreslEditorParser.g:2768:2: otherlv_6= Units
                    {
                    otherlv_6=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getSVarDSSAccess().getUnitsKeyword_4_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2774:2: otherlv_7= Units
                    {
                    otherlv_7=(Token)match(input,Units,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getSVarDSSAccess().getUNITSKeyword_4_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2778:2: ( (lv_units_8_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:2779:1: (lv_units_8_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:2779:1: (lv_units_8_0= RULE_STRING )
            // InternalWreslEditorParser.g:2780:3: lv_units_8_0= RULE_STRING
            {
            lv_units_8_0=(Token)match(input,RULE_STRING,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_units_8_0, grammarAccess.getSVarDSSAccess().getUnitsSTRINGTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSVarDSSRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"units",
                      		lv_units_8_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:2796:2: ( (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Convert) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalWreslEditorParser.g:2796:3: (otherlv_9= Convert | otherlv_10= Convert ) ( (lv_convert_11_0= RULE_STRING ) )
                    {
                    // InternalWreslEditorParser.g:2796:3: (otherlv_9= Convert | otherlv_10= Convert )
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==Convert) ) {
                        int LA81_1 = input.LA(2);

                        if ( (synpred94_InternalWreslEditorParser()) ) {
                            alt81=1;
                        }
                        else if ( (true) ) {
                            alt81=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 81, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 81, 0, input);

                        throw nvae;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalWreslEditorParser.g:2797:2: otherlv_9= Convert
                            {
                            otherlv_9=(Token)match(input,Convert,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getSVarDSSAccess().getConvertKeyword_6_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:2803:2: otherlv_10= Convert
                            {
                            otherlv_10=(Token)match(input,Convert,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getSVarDSSAccess().getCONVERTKeyword_6_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:2807:2: ( (lv_convert_11_0= RULE_STRING ) )
                    // InternalWreslEditorParser.g:2808:1: (lv_convert_11_0= RULE_STRING )
                    {
                    // InternalWreslEditorParser.g:2808:1: (lv_convert_11_0= RULE_STRING )
                    // InternalWreslEditorParser.g:2809:3: lv_convert_11_0= RULE_STRING
                    {
                    lv_convert_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_convert_11_0, grammarAccess.getSVarDSSAccess().getConvertSTRINGTerminalRuleCall_6_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSVarDSSRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"convert",
                              		lv_convert_11_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSVarDSS"


    // $ANTLR start "entryRuleSVarExpression"
    // InternalWreslEditorParser.g:2833:1: entryRuleSVarExpression returns [EObject current=null] : iv_ruleSVarExpression= ruleSVarExpression EOF ;
    public final EObject entryRuleSVarExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSVarExpression = null;


        try {
            // InternalWreslEditorParser.g:2834:2: (iv_ruleSVarExpression= ruleSVarExpression EOF )
            // InternalWreslEditorParser.g:2835:2: iv_ruleSVarExpression= ruleSVarExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSVarExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSVarExpression=ruleSVarExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSVarExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSVarExpression"


    // $ANTLR start "ruleSVarExpression"
    // InternalWreslEditorParser.g:2842:1: ruleSVarExpression returns [EObject current=null] : ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleSVarExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2845:28: ( ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:2846:1: ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:2846:1: ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalWreslEditorParser.g:2846:2: (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalWreslEditorParser.g:2846:2: (otherlv_0= Value | otherlv_1= Value )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==Value) ) {
                int LA83_1 = input.LA(2);

                if ( (synpred96_InternalWreslEditorParser()) ) {
                    alt83=1;
                }
                else if ( (true) ) {
                    alt83=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 83, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // InternalWreslEditorParser.g:2847:2: otherlv_0= Value
                    {
                    otherlv_0=(Token)match(input,Value,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getSVarExpressionAccess().getValueKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:2853:2: otherlv_1= Value
                    {
                    otherlv_1=(Token)match(input,Value,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getSVarExpressionAccess().getVALUEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:2857:2: ( (lv_expression_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:2858:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:2858:1: (lv_expression_2_0= ruleExpression )
            // InternalWreslEditorParser.g:2859:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSVarExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSVarExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSVarExpression"


    // $ANTLR start "entryRuleSVarSum"
    // InternalWreslEditorParser.g:2883:1: entryRuleSVarSum returns [EObject current=null] : iv_ruleSVarSum= ruleSVarSum EOF ;
    public final EObject entryRuleSVarSum() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSVarSum = null;


        try {
            // InternalWreslEditorParser.g:2884:2: (iv_ruleSVarSum= ruleSVarSum EOF )
            // InternalWreslEditorParser.g:2885:2: iv_ruleSVarSum= ruleSVarSum EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSVarSumRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSVarSum=ruleSVarSum();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSVarSum; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSVarSum"


    // $ANTLR start "ruleSVarSum"
    // InternalWreslEditorParser.g:2892:1: ruleSVarSum returns [EObject current=null] : ( (lv_sumContent_0_0= ruleSumContent ) ) ;
    public final EObject ruleSVarSum() throws RecognitionException {
        EObject current = null;

        EObject lv_sumContent_0_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2895:28: ( ( (lv_sumContent_0_0= ruleSumContent ) ) )
            // InternalWreslEditorParser.g:2896:1: ( (lv_sumContent_0_0= ruleSumContent ) )
            {
            // InternalWreslEditorParser.g:2896:1: ( (lv_sumContent_0_0= ruleSumContent ) )
            // InternalWreslEditorParser.g:2897:1: (lv_sumContent_0_0= ruleSumContent )
            {
            // InternalWreslEditorParser.g:2897:1: (lv_sumContent_0_0= ruleSumContent )
            // InternalWreslEditorParser.g:2898:3: lv_sumContent_0_0= ruleSumContent
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSVarSumAccess().getSumContentSumContentParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_sumContent_0_0=ruleSumContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSVarSumRule());
              	        }
                     		set(
                     			current, 
                     			"sumContent",
                      		lv_sumContent_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SumContent");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSVarSum"


    // $ANTLR start "entryRuleSVarTable"
    // InternalWreslEditorParser.g:2922:1: entryRuleSVarTable returns [EObject current=null] : iv_ruleSVarTable= ruleSVarTable EOF ;
    public final EObject entryRuleSVarTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSVarTable = null;


        try {
            // InternalWreslEditorParser.g:2923:2: (iv_ruleSVarTable= ruleSVarTable EOF )
            // InternalWreslEditorParser.g:2924:2: iv_ruleSVarTable= ruleSVarTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSVarTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSVarTable=ruleSVarTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSVarTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSVarTable"


    // $ANTLR start "ruleSVarTable"
    // InternalWreslEditorParser.g:2931:1: ruleSVarTable returns [EObject current=null] : ( (lv_tableContent_0_0= ruleTableContent ) ) ;
    public final EObject ruleSVarTable() throws RecognitionException {
        EObject current = null;

        EObject lv_tableContent_0_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2934:28: ( ( (lv_tableContent_0_0= ruleTableContent ) ) )
            // InternalWreslEditorParser.g:2935:1: ( (lv_tableContent_0_0= ruleTableContent ) )
            {
            // InternalWreslEditorParser.g:2935:1: ( (lv_tableContent_0_0= ruleTableContent ) )
            // InternalWreslEditorParser.g:2936:1: (lv_tableContent_0_0= ruleTableContent )
            {
            // InternalWreslEditorParser.g:2936:1: (lv_tableContent_0_0= ruleTableContent )
            // InternalWreslEditorParser.g:2937:3: lv_tableContent_0_0= ruleTableContent
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSVarTableAccess().getTableContentTableContentParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_tableContent_0_0=ruleTableContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSVarTableRule());
              	        }
                     		set(
                     			current, 
                     			"tableContent",
                      		lv_tableContent_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TableContent");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSVarTable"


    // $ANTLR start "entryRuleSVarCase"
    // InternalWreslEditorParser.g:2961:1: entryRuleSVarCase returns [EObject current=null] : iv_ruleSVarCase= ruleSVarCase EOF ;
    public final EObject entryRuleSVarCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSVarCase = null;


        try {
            // InternalWreslEditorParser.g:2962:2: (iv_ruleSVarCase= ruleSVarCase EOF )
            // InternalWreslEditorParser.g:2963:2: iv_ruleSVarCase= ruleSVarCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSVarCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSVarCase=ruleSVarCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSVarCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSVarCase"


    // $ANTLR start "ruleSVarCase"
    // InternalWreslEditorParser.g:2970:1: ruleSVarCase returns [EObject current=null] : ( (lv_caseContent_0_0= ruleCaseContent ) )+ ;
    public final EObject ruleSVarCase() throws RecognitionException {
        EObject current = null;

        EObject lv_caseContent_0_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:2973:28: ( ( (lv_caseContent_0_0= ruleCaseContent ) )+ )
            // InternalWreslEditorParser.g:2974:1: ( (lv_caseContent_0_0= ruleCaseContent ) )+
            {
            // InternalWreslEditorParser.g:2974:1: ( (lv_caseContent_0_0= ruleCaseContent ) )+
            int cnt84=0;
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==Case) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalWreslEditorParser.g:2975:1: (lv_caseContent_0_0= ruleCaseContent )
            	    {
            	    // InternalWreslEditorParser.g:2975:1: (lv_caseContent_0_0= ruleCaseContent )
            	    // InternalWreslEditorParser.g:2976:3: lv_caseContent_0_0= ruleCaseContent
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSVarCaseAccess().getCaseContentCaseContentParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_caseContent_0_0=ruleCaseContent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSVarCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"caseContent",
            	              		lv_caseContent_0_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.CaseContent");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt84 >= 1 ) break loop84;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(84, input);
                        throw eee;
                }
                cnt84++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSVarCase"


    // $ANTLR start "entryRuleCaseContent"
    // InternalWreslEditorParser.g:3000:1: entryRuleCaseContent returns [EObject current=null] : iv_ruleCaseContent= ruleCaseContent EOF ;
    public final EObject entryRuleCaseContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseContent = null;


        try {
            // InternalWreslEditorParser.g:3001:2: (iv_ruleCaseContent= ruleCaseContent EOF )
            // InternalWreslEditorParser.g:3002:2: iv_ruleCaseContent= ruleCaseContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseContent=ruleCaseContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseContent"


    // $ANTLR start "ruleCaseContent"
    // InternalWreslEditorParser.g:3009:1: ruleCaseContent returns [EObject current=null] : ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) ( ( (lv_content_5_0= ruleTableContent ) ) | ( (lv_content_6_0= ruleValueContent ) ) | ( (lv_content_7_0= ruleSumContent ) ) ) otherlv_8= RightCurlyBracket ) ;
    public final EObject ruleCaseContent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_caseName_2_1=null;
        Token otherlv_3=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_caseName_2_2 = null;

        EObject lv_condition_4_0 = null;

        EObject lv_content_5_0 = null;

        EObject lv_content_6_0 = null;

        EObject lv_content_7_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3012:28: ( ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) ( ( (lv_content_5_0= ruleTableContent ) ) | ( (lv_content_6_0= ruleValueContent ) ) | ( (lv_content_7_0= ruleSumContent ) ) ) otherlv_8= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:3013:1: ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) ( ( (lv_content_5_0= ruleTableContent ) ) | ( (lv_content_6_0= ruleValueContent ) ) | ( (lv_content_7_0= ruleSumContent ) ) ) otherlv_8= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:3013:1: ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) ( ( (lv_content_5_0= ruleTableContent ) ) | ( (lv_content_6_0= ruleValueContent ) ) | ( (lv_content_7_0= ruleSumContent ) ) ) otherlv_8= RightCurlyBracket )
            // InternalWreslEditorParser.g:3013:2: (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) ( ( (lv_content_5_0= ruleTableContent ) ) | ( (lv_content_6_0= ruleValueContent ) ) | ( (lv_content_7_0= ruleSumContent ) ) ) otherlv_8= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:3013:2: (otherlv_0= Case | otherlv_1= Case )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==Case) ) {
                int LA85_1 = input.LA(2);

                if ( (synpred98_InternalWreslEditorParser()) ) {
                    alt85=1;
                }
                else if ( (true) ) {
                    alt85=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 85, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalWreslEditorParser.g:3014:2: otherlv_0= Case
                    {
                    otherlv_0=(Token)match(input,Case,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getCaseContentAccess().getCaseKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3020:2: otherlv_1= Case
                    {
                    otherlv_1=(Token)match(input,Case,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCaseContentAccess().getCASEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:3024:2: ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) )
            // InternalWreslEditorParser.g:3025:1: ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) )
            {
            // InternalWreslEditorParser.g:3025:1: ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) )
            // InternalWreslEditorParser.g:3026:1: (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent )
            {
            // InternalWreslEditorParser.g:3026:1: (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_ID) ) {
                alt86=1;
            }
            else if ( ((LA86_0>=Daysintimestep && LA86_0<=Daysinmonth)||LA86_0==Wateryear||LA86_0==Cfs_taf||(LA86_0>=Prevapr && LA86_0<=Daysin)||LA86_0==Month||(LA86_0>=Apr && LA86_0<=Jun)||(LA86_0>=Mar && LA86_0<=Oct)||LA86_0==Sep||LA86_0==I) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalWreslEditorParser.g:3027:3: lv_caseName_2_1= RULE_ID
                    {
                    lv_caseName_2_1=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_caseName_2_1, grammarAccess.getCaseContentAccess().getCaseNameIDTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getCaseContentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"caseName",
                              		lv_caseName_2_1, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3042:8: lv_caseName_2_2= ruleSpecialIdent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseContentAccess().getCaseNameSpecialIdentParserRuleCall_1_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_7);
                    lv_caseName_2_2=ruleSpecialIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"caseName",
                              		lv_caseName_2_2, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SpecialIdent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getCaseContentAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalWreslEditorParser.g:3065:1: ( (lv_condition_4_0= ruleCondition ) )
            // InternalWreslEditorParser.g:3066:1: (lv_condition_4_0= ruleCondition )
            {
            // InternalWreslEditorParser.g:3066:1: (lv_condition_4_0= ruleCondition )
            // InternalWreslEditorParser.g:3067:3: lv_condition_4_0= ruleCondition
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseContentAccess().getConditionConditionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_46);
            lv_condition_4_0=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseContentRule());
              	        }
                     		set(
                     			current, 
                     			"condition",
                      		lv_condition_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Condition");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:3083:2: ( ( (lv_content_5_0= ruleTableContent ) ) | ( (lv_content_6_0= ruleValueContent ) ) | ( (lv_content_7_0= ruleSumContent ) ) )
            int alt87=3;
            switch ( input.LA(1) ) {
            case Select:
                {
                alt87=1;
                }
                break;
            case Value:
                {
                alt87=2;
                }
                break;
            case Sum:
                {
                alt87=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // InternalWreslEditorParser.g:3083:3: ( (lv_content_5_0= ruleTableContent ) )
                    {
                    // InternalWreslEditorParser.g:3083:3: ( (lv_content_5_0= ruleTableContent ) )
                    // InternalWreslEditorParser.g:3084:1: (lv_content_5_0= ruleTableContent )
                    {
                    // InternalWreslEditorParser.g:3084:1: (lv_content_5_0= ruleTableContent )
                    // InternalWreslEditorParser.g:3085:3: lv_content_5_0= ruleTableContent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseContentAccess().getContentTableContentParserRuleCall_4_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_content_5_0=ruleTableContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"content",
                              		lv_content_5_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TableContent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3102:6: ( (lv_content_6_0= ruleValueContent ) )
                    {
                    // InternalWreslEditorParser.g:3102:6: ( (lv_content_6_0= ruleValueContent ) )
                    // InternalWreslEditorParser.g:3103:1: (lv_content_6_0= ruleValueContent )
                    {
                    // InternalWreslEditorParser.g:3103:1: (lv_content_6_0= ruleValueContent )
                    // InternalWreslEditorParser.g:3104:3: lv_content_6_0= ruleValueContent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseContentAccess().getContentValueContentParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_content_6_0=ruleValueContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"content",
                              		lv_content_6_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ValueContent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:3121:6: ( (lv_content_7_0= ruleSumContent ) )
                    {
                    // InternalWreslEditorParser.g:3121:6: ( (lv_content_7_0= ruleSumContent ) )
                    // InternalWreslEditorParser.g:3122:1: (lv_content_7_0= ruleSumContent )
                    {
                    // InternalWreslEditorParser.g:3122:1: (lv_content_7_0= ruleSumContent )
                    // InternalWreslEditorParser.g:3123:3: lv_content_7_0= ruleSumContent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseContentAccess().getContentSumContentParserRuleCall_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_content_7_0=ruleSumContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"content",
                              		lv_content_7_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SumContent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getCaseContentAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseContent"


    // $ANTLR start "entryRuleSumContent"
    // InternalWreslEditorParser.g:3152:1: entryRuleSumContent returns [EObject current=null] : iv_ruleSumContent= ruleSumContent EOF ;
    public final EObject entryRuleSumContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumContent = null;


        try {
            // InternalWreslEditorParser.g:3153:2: (iv_ruleSumContent= ruleSumContent EOF )
            // InternalWreslEditorParser.g:3154:2: iv_ruleSumContent= ruleSumContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSumContent=ruleSumContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumContent"


    // $ANTLR start "ruleSumContent"
    // InternalWreslEditorParser.g:3161:1: ruleSumContent returns [EObject current=null] : ( (otherlv_0= Sum | otherlv_1= Sum ) ( (lv_header_2_0= ruleSumHeader ) ) ( (lv_expression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleSumContent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_header_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3164:28: ( ( (otherlv_0= Sum | otherlv_1= Sum ) ( (lv_header_2_0= ruleSumHeader ) ) ( (lv_expression_3_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:3165:1: ( (otherlv_0= Sum | otherlv_1= Sum ) ( (lv_header_2_0= ruleSumHeader ) ) ( (lv_expression_3_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:3165:1: ( (otherlv_0= Sum | otherlv_1= Sum ) ( (lv_header_2_0= ruleSumHeader ) ) ( (lv_expression_3_0= ruleExpression ) ) )
            // InternalWreslEditorParser.g:3165:2: (otherlv_0= Sum | otherlv_1= Sum ) ( (lv_header_2_0= ruleSumHeader ) ) ( (lv_expression_3_0= ruleExpression ) )
            {
            // InternalWreslEditorParser.g:3165:2: (otherlv_0= Sum | otherlv_1= Sum )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==Sum) ) {
                int LA88_1 = input.LA(2);

                if ( (synpred102_InternalWreslEditorParser()) ) {
                    alt88=1;
                }
                else if ( (true) ) {
                    alt88=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 88, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalWreslEditorParser.g:3166:2: otherlv_0= Sum
                    {
                    otherlv_0=(Token)match(input,Sum,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getSumContentAccess().getSumKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3172:2: otherlv_1= Sum
                    {
                    otherlv_1=(Token)match(input,Sum,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getSumContentAccess().getSUMKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:3176:2: ( (lv_header_2_0= ruleSumHeader ) )
            // InternalWreslEditorParser.g:3177:1: (lv_header_2_0= ruleSumHeader )
            {
            // InternalWreslEditorParser.g:3177:1: (lv_header_2_0= ruleSumHeader )
            // InternalWreslEditorParser.g:3178:3: lv_header_2_0= ruleSumHeader
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSumContentAccess().getHeaderSumHeaderParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_25);
            lv_header_2_0=ruleSumHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSumContentRule());
              	        }
                     		set(
                     			current, 
                     			"header",
                      		lv_header_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SumHeader");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:3194:2: ( (lv_expression_3_0= ruleExpression ) )
            // InternalWreslEditorParser.g:3195:1: (lv_expression_3_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:3195:1: (lv_expression_3_0= ruleExpression )
            // InternalWreslEditorParser.g:3196:3: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSumContentAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSumContentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumContent"


    // $ANTLR start "entryRuleSumHeader"
    // InternalWreslEditorParser.g:3220:1: entryRuleSumHeader returns [EObject current=null] : iv_ruleSumHeader= ruleSumHeader EOF ;
    public final EObject entryRuleSumHeader() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumHeader = null;


        try {
            // InternalWreslEditorParser.g:3221:2: (iv_ruleSumHeader= ruleSumHeader EOF )
            // InternalWreslEditorParser.g:3222:2: iv_ruleSumHeader= ruleSumHeader EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumHeaderRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSumHeader=ruleSumHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumHeader; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumHeader"


    // $ANTLR start "ruleSumHeader"
    // InternalWreslEditorParser.g:3229:1: ruleSumHeader returns [EObject current=null] : (otherlv_0= LeftParenthesis otherlv_1= I_1 ( (lv_expression1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_expression2_4_0= ruleExpression ) ) (otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT )? otherlv_8= RightParenthesis ) ;
    public final EObject ruleSumHeader() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token this_INT_7=null;
        Token otherlv_8=null;
        EObject lv_expression1_2_0 = null;

        EObject lv_expression2_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3232:28: ( (otherlv_0= LeftParenthesis otherlv_1= I_1 ( (lv_expression1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_expression2_4_0= ruleExpression ) ) (otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT )? otherlv_8= RightParenthesis ) )
            // InternalWreslEditorParser.g:3233:1: (otherlv_0= LeftParenthesis otherlv_1= I_1 ( (lv_expression1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_expression2_4_0= ruleExpression ) ) (otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT )? otherlv_8= RightParenthesis )
            {
            // InternalWreslEditorParser.g:3233:1: (otherlv_0= LeftParenthesis otherlv_1= I_1 ( (lv_expression1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_expression2_4_0= ruleExpression ) ) (otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT )? otherlv_8= RightParenthesis )
            // InternalWreslEditorParser.g:3234:2: otherlv_0= LeftParenthesis otherlv_1= I_1 ( (lv_expression1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_expression2_4_0= ruleExpression ) ) (otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT )? otherlv_8= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSumHeaderAccess().getLeftParenthesisKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,I_1,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSumHeaderAccess().getIKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:3243:1: ( (lv_expression1_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:3244:1: (lv_expression1_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:3244:1: (lv_expression1_2_0= ruleExpression )
            // InternalWreslEditorParser.g:3245:3: lv_expression1_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSumHeaderAccess().getExpression1ExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_24);
            lv_expression1_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSumHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"expression1",
                      		lv_expression1_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSumHeaderAccess().getCommaKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:3266:1: ( (lv_expression2_4_0= ruleExpression ) )
            // InternalWreslEditorParser.g:3267:1: (lv_expression2_4_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:3267:1: (lv_expression2_4_0= ruleExpression )
            // InternalWreslEditorParser.g:3268:3: lv_expression2_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSumHeaderAccess().getExpression2ExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_49);
            lv_expression2_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSumHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"expression2",
                      		lv_expression2_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:3284:2: (otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Comma) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalWreslEditorParser.g:3285:2: otherlv_5= Comma (otherlv_6= HyphenMinus )? this_INT_7= RULE_INT
                    {
                    otherlv_5=(Token)match(input,Comma,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getSumHeaderAccess().getCommaKeyword_5_0());
                          
                    }
                    // InternalWreslEditorParser.g:3289:1: (otherlv_6= HyphenMinus )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==HyphenMinus) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalWreslEditorParser.g:3290:2: otherlv_6= HyphenMinus
                            {
                            otherlv_6=(Token)match(input,HyphenMinus,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getSumHeaderAccess().getHyphenMinusKeyword_5_1());
                                  
                            }

                            }
                            break;

                    }

                    this_INT_7=(Token)match(input,RULE_INT,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_7, grammarAccess.getSumHeaderAccess().getINTTerminalRuleCall_5_2()); 
                          
                    }

                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSumHeaderAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumHeader"


    // $ANTLR start "entryRuleValueContent"
    // InternalWreslEditorParser.g:3311:1: entryRuleValueContent returns [EObject current=null] : iv_ruleValueContent= ruleValueContent EOF ;
    public final EObject entryRuleValueContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueContent = null;


        try {
            // InternalWreslEditorParser.g:3312:2: (iv_ruleValueContent= ruleValueContent EOF )
            // InternalWreslEditorParser.g:3313:2: iv_ruleValueContent= ruleValueContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueContent=ruleValueContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueContent"


    // $ANTLR start "ruleValueContent"
    // InternalWreslEditorParser.g:3320:1: ruleValueContent returns [EObject current=null] : ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleValueContent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3323:28: ( ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:3324:1: ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:3324:1: ( (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalWreslEditorParser.g:3324:2: (otherlv_0= Value | otherlv_1= Value ) ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalWreslEditorParser.g:3324:2: (otherlv_0= Value | otherlv_1= Value )
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==Value) ) {
                int LA91_1 = input.LA(2);

                if ( (synpred105_InternalWreslEditorParser()) ) {
                    alt91=1;
                }
                else if ( (true) ) {
                    alt91=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 91, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }
            switch (alt91) {
                case 1 :
                    // InternalWreslEditorParser.g:3325:2: otherlv_0= Value
                    {
                    otherlv_0=(Token)match(input,Value,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getValueContentAccess().getValueKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3331:2: otherlv_1= Value
                    {
                    otherlv_1=(Token)match(input,Value,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getValueContentAccess().getVALUEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:3335:2: ( (lv_expression_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:3336:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:3336:1: (lv_expression_2_0= ruleExpression )
            // InternalWreslEditorParser.g:3337:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValueContentAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getValueContentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueContent"


    // $ANTLR start "entryRuleTableContent"
    // InternalWreslEditorParser.g:3361:1: entryRuleTableContent returns [EObject current=null] : iv_ruleTableContent= ruleTableContent EOF ;
    public final EObject entryRuleTableContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableContent = null;


        try {
            // InternalWreslEditorParser.g:3362:2: (iv_ruleTableContent= ruleTableContent EOF )
            // InternalWreslEditorParser.g:3363:2: iv_ruleTableContent= ruleTableContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableContent=ruleTableContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableContent"


    // $ANTLR start "ruleTableContent"
    // InternalWreslEditorParser.g:3370:1: ruleTableContent returns [EObject current=null] : ( (otherlv_0= Select | otherlv_1= Select ) ( ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) ) ) (otherlv_3= From | otherlv_4= From ) ( ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) ) ) ( (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) ) )? ( (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) ) )? ) ;
    public final EObject ruleTableContent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_tableName_2_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_from_5_1=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_use_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_tableName_2_2 = null;

        AntlrDatatypeRuleToken lv_from_5_2 = null;

        EObject lv_given_8_0 = null;

        EObject lv_where_14_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3373:28: ( ( (otherlv_0= Select | otherlv_1= Select ) ( ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) ) ) (otherlv_3= From | otherlv_4= From ) ( ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) ) ) ( (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) ) )? ( (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) ) )? ) )
            // InternalWreslEditorParser.g:3374:1: ( (otherlv_0= Select | otherlv_1= Select ) ( ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) ) ) (otherlv_3= From | otherlv_4= From ) ( ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) ) ) ( (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) ) )? ( (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) ) )? )
            {
            // InternalWreslEditorParser.g:3374:1: ( (otherlv_0= Select | otherlv_1= Select ) ( ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) ) ) (otherlv_3= From | otherlv_4= From ) ( ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) ) ) ( (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) ) )? ( (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) ) )? )
            // InternalWreslEditorParser.g:3374:2: (otherlv_0= Select | otherlv_1= Select ) ( ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) ) ) (otherlv_3= From | otherlv_4= From ) ( ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) ) ) ( (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) ) )? ( (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) ) )?
            {
            // InternalWreslEditorParser.g:3374:2: (otherlv_0= Select | otherlv_1= Select )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==Select) ) {
                int LA92_1 = input.LA(2);

                if ( (synpred106_InternalWreslEditorParser()) ) {
                    alt92=1;
                }
                else if ( (true) ) {
                    alt92=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 92, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalWreslEditorParser.g:3375:2: otherlv_0= Select
                    {
                    otherlv_0=(Token)match(input,Select,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getTableContentAccess().getSelectKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3381:2: otherlv_1= Select
                    {
                    otherlv_1=(Token)match(input,Select,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTableContentAccess().getSELECTKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:3385:2: ( ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) ) )
            // InternalWreslEditorParser.g:3386:1: ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) )
            {
            // InternalWreslEditorParser.g:3386:1: ( (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent ) )
            // InternalWreslEditorParser.g:3387:1: (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent )
            {
            // InternalWreslEditorParser.g:3387:1: (lv_tableName_2_1= RULE_ID | lv_tableName_2_2= ruleSpecialIdent )
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==RULE_ID) ) {
                alt93=1;
            }
            else if ( ((LA93_0>=Daysintimestep && LA93_0<=Daysinmonth)||LA93_0==Wateryear||LA93_0==Cfs_taf||(LA93_0>=Prevapr && LA93_0<=Daysin)||LA93_0==Month||(LA93_0>=Apr && LA93_0<=Jun)||(LA93_0>=Mar && LA93_0<=Oct)||LA93_0==Sep||LA93_0==I) ) {
                alt93=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }
            switch (alt93) {
                case 1 :
                    // InternalWreslEditorParser.g:3388:3: lv_tableName_2_1= RULE_ID
                    {
                    lv_tableName_2_1=(Token)match(input,RULE_ID,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_tableName_2_1, grammarAccess.getTableContentAccess().getTableNameIDTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTableContentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"tableName",
                              		lv_tableName_2_1, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3403:8: lv_tableName_2_2= ruleSpecialIdent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTableContentAccess().getTableNameSpecialIdentParserRuleCall_1_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_tableName_2_2=ruleSpecialIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTableContentRule());
                      	        }
                             		set(
                             			current, 
                             			"tableName",
                              		lv_tableName_2_2, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SpecialIdent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalWreslEditorParser.g:3421:2: (otherlv_3= From | otherlv_4= From )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==From) ) {
                int LA94_1 = input.LA(2);

                if ( (synpred108_InternalWreslEditorParser()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalWreslEditorParser.g:3422:2: otherlv_3= From
                    {
                    otherlv_3=(Token)match(input,From,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTableContentAccess().getFromKeyword_2_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3428:2: otherlv_4= From
                    {
                    otherlv_4=(Token)match(input,From,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTableContentAccess().getFROMKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:3432:2: ( ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) ) )
            // InternalWreslEditorParser.g:3433:1: ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) )
            {
            // InternalWreslEditorParser.g:3433:1: ( (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent ) )
            // InternalWreslEditorParser.g:3434:1: (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent )
            {
            // InternalWreslEditorParser.g:3434:1: (lv_from_5_1= RULE_ID | lv_from_5_2= ruleSpecialIdent )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_ID) ) {
                alt95=1;
            }
            else if ( ((LA95_0>=Daysintimestep && LA95_0<=Daysinmonth)||LA95_0==Wateryear||LA95_0==Cfs_taf||(LA95_0>=Prevapr && LA95_0<=Daysin)||LA95_0==Month||(LA95_0>=Apr && LA95_0<=Jun)||(LA95_0>=Mar && LA95_0<=Oct)||LA95_0==Sep||LA95_0==I) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // InternalWreslEditorParser.g:3435:3: lv_from_5_1= RULE_ID
                    {
                    lv_from_5_1=(Token)match(input,RULE_ID,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_from_5_1, grammarAccess.getTableContentAccess().getFromIDTerminalRuleCall_3_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTableContentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"from",
                              		lv_from_5_1, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3450:8: lv_from_5_2= ruleSpecialIdent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTableContentAccess().getFromSpecialIdentParserRuleCall_3_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_from_5_2=ruleSpecialIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTableContentRule());
                      	        }
                             		set(
                             			current, 
                             			"from",
                              		lv_from_5_2, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SpecialIdent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalWreslEditorParser.g:3468:2: ( (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==Given) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalWreslEditorParser.g:3468:3: (otherlv_6= Given | otherlv_7= Given ) ( (lv_given_8_0= ruleAssignment ) ) (otherlv_9= Use | otherlv_10= Use ) ( (lv_use_11_0= RULE_ID ) )
                    {
                    // InternalWreslEditorParser.g:3468:3: (otherlv_6= Given | otherlv_7= Given )
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==Given) ) {
                        int LA96_1 = input.LA(2);

                        if ( (synpred110_InternalWreslEditorParser()) ) {
                            alt96=1;
                        }
                        else if ( (true) ) {
                            alt96=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 96, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 96, 0, input);

                        throw nvae;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalWreslEditorParser.g:3469:2: otherlv_6= Given
                            {
                            otherlv_6=(Token)match(input,Given,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getTableContentAccess().getGivenKeyword_4_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:3475:2: otherlv_7= Given
                            {
                            otherlv_7=(Token)match(input,Given,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getTableContentAccess().getGIVENKeyword_4_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:3479:2: ( (lv_given_8_0= ruleAssignment ) )
                    // InternalWreslEditorParser.g:3480:1: (lv_given_8_0= ruleAssignment )
                    {
                    // InternalWreslEditorParser.g:3480:1: (lv_given_8_0= ruleAssignment )
                    // InternalWreslEditorParser.g:3481:3: lv_given_8_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTableContentAccess().getGivenAssignmentParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_55);
                    lv_given_8_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTableContentRule());
                      	        }
                             		set(
                             			current, 
                             			"given",
                              		lv_given_8_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Assignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalWreslEditorParser.g:3497:2: (otherlv_9= Use | otherlv_10= Use )
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==Use) ) {
                        int LA97_1 = input.LA(2);

                        if ( (synpred111_InternalWreslEditorParser()) ) {
                            alt97=1;
                        }
                        else if ( (true) ) {
                            alt97=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 97, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalWreslEditorParser.g:3498:2: otherlv_9= Use
                            {
                            otherlv_9=(Token)match(input,Use,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getTableContentAccess().getUseKeyword_4_2_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:3504:2: otherlv_10= Use
                            {
                            otherlv_10=(Token)match(input,Use,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getTableContentAccess().getUSEKeyword_4_2_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:3508:2: ( (lv_use_11_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:3509:1: (lv_use_11_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:3509:1: (lv_use_11_0= RULE_ID )
                    // InternalWreslEditorParser.g:3510:3: lv_use_11_0= RULE_ID
                    {
                    lv_use_11_0=(Token)match(input,RULE_ID,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_use_11_0, grammarAccess.getTableContentAccess().getUseIDTerminalRuleCall_4_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTableContentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"use",
                              		lv_use_11_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalWreslEditorParser.g:3526:4: ( (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==Where) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalWreslEditorParser.g:3526:5: (otherlv_12= Where | otherlv_13= Where ) ( (lv_where_14_0= ruleWhereItems ) )
                    {
                    // InternalWreslEditorParser.g:3526:5: (otherlv_12= Where | otherlv_13= Where )
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==Where) ) {
                        int LA99_1 = input.LA(2);

                        if ( (synpred113_InternalWreslEditorParser()) ) {
                            alt99=1;
                        }
                        else if ( (true) ) {
                            alt99=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 99, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                        throw nvae;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalWreslEditorParser.g:3527:2: otherlv_12= Where
                            {
                            otherlv_12=(Token)match(input,Where,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getTableContentAccess().getWhereKeyword_5_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:3533:2: otherlv_13= Where
                            {
                            otherlv_13=(Token)match(input,Where,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_13, grammarAccess.getTableContentAccess().getWHEREKeyword_5_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:3537:2: ( (lv_where_14_0= ruleWhereItems ) )
                    // InternalWreslEditorParser.g:3538:1: (lv_where_14_0= ruleWhereItems )
                    {
                    // InternalWreslEditorParser.g:3538:1: (lv_where_14_0= ruleWhereItems )
                    // InternalWreslEditorParser.g:3539:3: lv_where_14_0= ruleWhereItems
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTableContentAccess().getWhereWhereItemsParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_14_0=ruleWhereItems();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTableContentRule());
                      	        }
                             		set(
                             			current, 
                             			"where",
                              		lv_where_14_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.WhereItems");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableContent"


    // $ANTLR start "entryRuleWhereItems"
    // InternalWreslEditorParser.g:3563:1: entryRuleWhereItems returns [EObject current=null] : iv_ruleWhereItems= ruleWhereItems EOF ;
    public final EObject entryRuleWhereItems() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhereItems = null;


        try {
            // InternalWreslEditorParser.g:3564:2: (iv_ruleWhereItems= ruleWhereItems EOF )
            // InternalWreslEditorParser.g:3565:2: iv_ruleWhereItems= ruleWhereItems EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhereItemsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhereItems=ruleWhereItems();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhereItems; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhereItems"


    // $ANTLR start "ruleWhereItems"
    // InternalWreslEditorParser.g:3572:1: ruleWhereItems returns [EObject current=null] : ( ( (lv_assignment_0_0= ruleAssignment ) ) (otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) ) )* ) ;
    public final EObject ruleWhereItems() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_assignment_0_0 = null;

        EObject lv_assignment_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3575:28: ( ( ( (lv_assignment_0_0= ruleAssignment ) ) (otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) ) )* ) )
            // InternalWreslEditorParser.g:3576:1: ( ( (lv_assignment_0_0= ruleAssignment ) ) (otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) ) )* )
            {
            // InternalWreslEditorParser.g:3576:1: ( ( (lv_assignment_0_0= ruleAssignment ) ) (otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) ) )* )
            // InternalWreslEditorParser.g:3576:2: ( (lv_assignment_0_0= ruleAssignment ) ) (otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) ) )*
            {
            // InternalWreslEditorParser.g:3576:2: ( (lv_assignment_0_0= ruleAssignment ) )
            // InternalWreslEditorParser.g:3577:1: (lv_assignment_0_0= ruleAssignment )
            {
            // InternalWreslEditorParser.g:3577:1: (lv_assignment_0_0= ruleAssignment )
            // InternalWreslEditorParser.g:3578:3: lv_assignment_0_0= ruleAssignment
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhereItemsAccess().getAssignmentAssignmentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_26);
            lv_assignment_0_0=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhereItemsRule());
              	        }
                     		add(
                     			current, 
                     			"assignment",
                      		lv_assignment_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Assignment");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:3594:2: (otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==Comma) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalWreslEditorParser.g:3595:2: otherlv_1= Comma ( (lv_assignment_2_0= ruleAssignment ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getWhereItemsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    // InternalWreslEditorParser.g:3599:1: ( (lv_assignment_2_0= ruleAssignment ) )
            	    // InternalWreslEditorParser.g:3600:1: (lv_assignment_2_0= ruleAssignment )
            	    {
            	    // InternalWreslEditorParser.g:3600:1: (lv_assignment_2_0= ruleAssignment )
            	    // InternalWreslEditorParser.g:3601:3: lv_assignment_2_0= ruleAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWhereItemsAccess().getAssignmentAssignmentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_assignment_2_0=ruleAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWhereItemsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"assignment",
            	              		lv_assignment_2_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Assignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhereItems"


    // $ANTLR start "entryRuleAssignment"
    // InternalWreslEditorParser.g:3625:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalWreslEditorParser.g:3626:2: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalWreslEditorParser.g:3627:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalWreslEditorParser.g:3634:1: ruleAssignment returns [EObject current=null] : ( ( (lv_term_0_0= ruleTermSimple ) ) otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_term_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3637:28: ( ( ( (lv_term_0_0= ruleTermSimple ) ) otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:3638:1: ( ( (lv_term_0_0= ruleTermSimple ) ) otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:3638:1: ( ( (lv_term_0_0= ruleTermSimple ) ) otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalWreslEditorParser.g:3638:2: ( (lv_term_0_0= ruleTermSimple ) ) otherlv_1= EqualsSign ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalWreslEditorParser.g:3638:2: ( (lv_term_0_0= ruleTermSimple ) )
            // InternalWreslEditorParser.g:3639:1: (lv_term_0_0= ruleTermSimple )
            {
            // InternalWreslEditorParser.g:3639:1: (lv_term_0_0= ruleTermSimple )
            // InternalWreslEditorParser.g:3640:3: lv_term_0_0= ruleTermSimple
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getTermTermSimpleParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_57);
            lv_term_0_0=ruleTermSimple();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"term",
                      		lv_term_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TermSimple");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:3661:1: ( (lv_expression_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:3662:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:3662:1: (lv_expression_2_0= ruleExpression )
            // InternalWreslEditorParser.g:3663:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleTermSimple"
    // InternalWreslEditorParser.g:3687:1: entryRuleTermSimple returns [EObject current=null] : iv_ruleTermSimple= ruleTermSimple EOF ;
    public final EObject entryRuleTermSimple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTermSimple = null;


        try {
            // InternalWreslEditorParser.g:3688:2: (iv_ruleTermSimple= ruleTermSimple EOF )
            // InternalWreslEditorParser.g:3689:2: iv_ruleTermSimple= ruleTermSimple EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermSimpleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTermSimple=ruleTermSimple();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTermSimple; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTermSimple"


    // $ANTLR start "ruleTermSimple"
    // InternalWreslEditorParser.g:3696:1: ruleTermSimple returns [EObject current=null] : (this_ID_0= RULE_ID | ruleNumber | this_Function_2= ruleFunction | ruleSpecialIdent ) ;
    public final EObject ruleTermSimple() throws RecognitionException {
        EObject current = null;

        Token this_ID_0=null;
        EObject this_Function_2 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3699:28: ( (this_ID_0= RULE_ID | ruleNumber | this_Function_2= ruleFunction | ruleSpecialIdent ) )
            // InternalWreslEditorParser.g:3700:1: (this_ID_0= RULE_ID | ruleNumber | this_Function_2= ruleFunction | ruleSpecialIdent )
            {
            // InternalWreslEditorParser.g:3700:1: (this_ID_0= RULE_ID | ruleNumber | this_Function_2= ruleFunction | ruleSpecialIdent )
            int alt102=4;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalWreslEditorParser.g:3700:2: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_0, grammarAccess.getTermSimpleAccess().getIDTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3706:2: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTermSimpleAccess().getNumberParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:3718:2: this_Function_2= ruleFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTermSimpleAccess().getFunctionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Function_2=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Function_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:3731:2: ruleSpecialIdent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTermSimpleAccess().getSpecialIdentParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSpecialIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTermSimple"


    // $ANTLR start "entryRuleLowerAndOrUpper"
    // InternalWreslEditorParser.g:3749:1: entryRuleLowerAndOrUpper returns [EObject current=null] : iv_ruleLowerAndOrUpper= ruleLowerAndOrUpper EOF ;
    public final EObject entryRuleLowerAndOrUpper() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLowerAndOrUpper = null;


        try {
            // InternalWreslEditorParser.g:3750:2: (iv_ruleLowerAndOrUpper= ruleLowerAndOrUpper EOF )
            // InternalWreslEditorParser.g:3751:2: iv_ruleLowerAndOrUpper= ruleLowerAndOrUpper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLowerAndOrUpperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLowerAndOrUpper=ruleLowerAndOrUpper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLowerAndOrUpper; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLowerAndOrUpper"


    // $ANTLR start "ruleLowerAndOrUpper"
    // InternalWreslEditorParser.g:3758:1: ruleLowerAndOrUpper returns [EObject current=null] : (this_lowerUpper_0= rulelowerUpper | this_upperLower_1= ruleupperLower ) ;
    public final EObject ruleLowerAndOrUpper() throws RecognitionException {
        EObject current = null;

        EObject this_lowerUpper_0 = null;

        EObject this_upperLower_1 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3761:28: ( (this_lowerUpper_0= rulelowerUpper | this_upperLower_1= ruleupperLower ) )
            // InternalWreslEditorParser.g:3762:1: (this_lowerUpper_0= rulelowerUpper | this_upperLower_1= ruleupperLower )
            {
            // InternalWreslEditorParser.g:3762:1: (this_lowerUpper_0= rulelowerUpper | this_upperLower_1= ruleupperLower )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==Lower) ) {
                alt103=1;
            }
            else if ( (LA103_0==Upper) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalWreslEditorParser.g:3763:2: this_lowerUpper_0= rulelowerUpper
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLowerAndOrUpperAccess().getLowerUpperParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_lowerUpper_0=rulelowerUpper();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_lowerUpper_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3776:2: this_upperLower_1= ruleupperLower
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLowerAndOrUpperAccess().getUpperLowerParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_upperLower_1=ruleupperLower();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_upperLower_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLowerAndOrUpper"


    // $ANTLR start "entryRuleupperLower"
    // InternalWreslEditorParser.g:3795:1: entryRuleupperLower returns [EObject current=null] : iv_ruleupperLower= ruleupperLower EOF ;
    public final EObject entryRuleupperLower() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleupperLower = null;


        try {
            // InternalWreslEditorParser.g:3796:2: (iv_ruleupperLower= ruleupperLower EOF )
            // InternalWreslEditorParser.g:3797:2: iv_ruleupperLower= ruleupperLower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperLowerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleupperLower=ruleupperLower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleupperLower; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleupperLower"


    // $ANTLR start "ruleupperLower"
    // InternalWreslEditorParser.g:3804:1: ruleupperLower returns [EObject current=null] : ( ( (lv_upper_0_0= ruleUpper ) ) ( (lv_lower_1_0= ruleLower ) )? ) ;
    public final EObject ruleupperLower() throws RecognitionException {
        EObject current = null;

        EObject lv_upper_0_0 = null;

        EObject lv_lower_1_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3807:28: ( ( ( (lv_upper_0_0= ruleUpper ) ) ( (lv_lower_1_0= ruleLower ) )? ) )
            // InternalWreslEditorParser.g:3808:1: ( ( (lv_upper_0_0= ruleUpper ) ) ( (lv_lower_1_0= ruleLower ) )? )
            {
            // InternalWreslEditorParser.g:3808:1: ( ( (lv_upper_0_0= ruleUpper ) ) ( (lv_lower_1_0= ruleLower ) )? )
            // InternalWreslEditorParser.g:3808:2: ( (lv_upper_0_0= ruleUpper ) ) ( (lv_lower_1_0= ruleLower ) )?
            {
            // InternalWreslEditorParser.g:3808:2: ( (lv_upper_0_0= ruleUpper ) )
            // InternalWreslEditorParser.g:3809:1: (lv_upper_0_0= ruleUpper )
            {
            // InternalWreslEditorParser.g:3809:1: (lv_upper_0_0= ruleUpper )
            // InternalWreslEditorParser.g:3810:3: lv_upper_0_0= ruleUpper
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUpperLowerAccess().getUpperUpperParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_58);
            lv_upper_0_0=ruleUpper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUpperLowerRule());
              	        }
                     		set(
                     			current, 
                     			"upper",
                      		lv_upper_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Upper");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:3826:2: ( (lv_lower_1_0= ruleLower ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==Lower) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalWreslEditorParser.g:3827:1: (lv_lower_1_0= ruleLower )
                    {
                    // InternalWreslEditorParser.g:3827:1: (lv_lower_1_0= ruleLower )
                    // InternalWreslEditorParser.g:3828:3: lv_lower_1_0= ruleLower
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUpperLowerAccess().getLowerLowerParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_lower_1_0=ruleLower();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUpperLowerRule());
                      	        }
                             		set(
                             			current, 
                             			"lower",
                              		lv_lower_1_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Lower");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleupperLower"


    // $ANTLR start "entryRulelowerUpper"
    // InternalWreslEditorParser.g:3852:1: entryRulelowerUpper returns [EObject current=null] : iv_rulelowerUpper= rulelowerUpper EOF ;
    public final EObject entryRulelowerUpper() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelowerUpper = null;


        try {
            // InternalWreslEditorParser.g:3853:2: (iv_rulelowerUpper= rulelowerUpper EOF )
            // InternalWreslEditorParser.g:3854:2: iv_rulelowerUpper= rulelowerUpper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLowerUpperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelowerUpper=rulelowerUpper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelowerUpper; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelowerUpper"


    // $ANTLR start "rulelowerUpper"
    // InternalWreslEditorParser.g:3861:1: rulelowerUpper returns [EObject current=null] : ( ( (lv_lower_0_0= ruleLower ) ) ( (lv_upper_1_0= ruleUpper ) )? ) ;
    public final EObject rulelowerUpper() throws RecognitionException {
        EObject current = null;

        EObject lv_lower_0_0 = null;

        EObject lv_upper_1_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3864:28: ( ( ( (lv_lower_0_0= ruleLower ) ) ( (lv_upper_1_0= ruleUpper ) )? ) )
            // InternalWreslEditorParser.g:3865:1: ( ( (lv_lower_0_0= ruleLower ) ) ( (lv_upper_1_0= ruleUpper ) )? )
            {
            // InternalWreslEditorParser.g:3865:1: ( ( (lv_lower_0_0= ruleLower ) ) ( (lv_upper_1_0= ruleUpper ) )? )
            // InternalWreslEditorParser.g:3865:2: ( (lv_lower_0_0= ruleLower ) ) ( (lv_upper_1_0= ruleUpper ) )?
            {
            // InternalWreslEditorParser.g:3865:2: ( (lv_lower_0_0= ruleLower ) )
            // InternalWreslEditorParser.g:3866:1: (lv_lower_0_0= ruleLower )
            {
            // InternalWreslEditorParser.g:3866:1: (lv_lower_0_0= ruleLower )
            // InternalWreslEditorParser.g:3867:3: lv_lower_0_0= ruleLower
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLowerUpperAccess().getLowerLowerParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_59);
            lv_lower_0_0=ruleLower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLowerUpperRule());
              	        }
                     		set(
                     			current, 
                     			"lower",
                      		lv_lower_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Lower");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:3883:2: ( (lv_upper_1_0= ruleUpper ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==Upper) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalWreslEditorParser.g:3884:1: (lv_upper_1_0= ruleUpper )
                    {
                    // InternalWreslEditorParser.g:3884:1: (lv_upper_1_0= ruleUpper )
                    // InternalWreslEditorParser.g:3885:3: lv_upper_1_0= ruleUpper
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLowerUpperAccess().getUpperUpperParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_upper_1_0=ruleUpper();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLowerUpperRule());
                      	        }
                             		set(
                             			current, 
                             			"upper",
                              		lv_upper_1_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Upper");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelowerUpper"


    // $ANTLR start "entryRuleUpper"
    // InternalWreslEditorParser.g:3909:1: entryRuleUpper returns [EObject current=null] : iv_ruleUpper= ruleUpper EOF ;
    public final EObject entryRuleUpper() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpper = null;


        try {
            // InternalWreslEditorParser.g:3910:2: (iv_ruleUpper= ruleUpper EOF )
            // InternalWreslEditorParser.g:3911:2: iv_ruleUpper= ruleUpper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpper=ruleUpper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpper; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpper"


    // $ANTLR start "ruleUpper"
    // InternalWreslEditorParser.g:3918:1: ruleUpper returns [EObject current=null] : ( (otherlv_0= Upper | otherlv_1= Upper ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) ) ;
    public final EObject ruleUpper() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3921:28: ( ( (otherlv_0= Upper | otherlv_1= Upper ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) ) )
            // InternalWreslEditorParser.g:3922:1: ( (otherlv_0= Upper | otherlv_1= Upper ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) )
            {
            // InternalWreslEditorParser.g:3922:1: ( (otherlv_0= Upper | otherlv_1= Upper ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:3922:2: (otherlv_0= Upper | otherlv_1= Upper ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:3922:2: (otherlv_0= Upper | otherlv_1= Upper )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Upper) ) {
                int LA106_1 = input.LA(2);

                if ( (synpred122_InternalWreslEditorParser()) ) {
                    alt106=1;
                }
                else if ( (true) ) {
                    alt106=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 106, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalWreslEditorParser.g:3923:2: otherlv_0= Upper
                    {
                    otherlv_0=(Token)match(input,Upper,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getUpperAccess().getUpperKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3929:2: otherlv_1= Upper
                    {
                    otherlv_1=(Token)match(input,Upper,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getUpperAccess().getUPPERKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:3933:2: ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Unbounded) ) {
                alt108=1;
            }
            else if ( ((LA108_0>=Daysintimestep && LA108_0<=Daysinmonth)||LA108_0==Wateryear||LA108_0==Cfs_taf||(LA108_0>=Prevapr && LA108_0<=Daysin)||LA108_0==Month||(LA108_0>=Apr && LA108_0<=Jun)||(LA108_0>=Mar && LA108_0<=Oct)||LA108_0==Sep||LA108_0==M||LA108_0==LeftParenthesis||LA108_0==PlusSign||LA108_0==HyphenMinus||LA108_0==I||(LA108_0>=RULE_MIN && LA108_0<=RULE_FLOAT)||LA108_0==RULE_ID) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }
            switch (alt108) {
                case 1 :
                    // InternalWreslEditorParser.g:3933:3: ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) )
                    {
                    // InternalWreslEditorParser.g:3933:3: ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) )
                    // InternalWreslEditorParser.g:3933:4: () (otherlv_3= Unbounded | otherlv_4= Unbounded )
                    {
                    // InternalWreslEditorParser.g:3933:4: ()
                    // InternalWreslEditorParser.g:3934:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUpperAccess().getUpperAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalWreslEditorParser.g:3942:2: (otherlv_3= Unbounded | otherlv_4= Unbounded )
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==Unbounded) ) {
                        int LA107_1 = input.LA(2);

                        if ( (synpred123_InternalWreslEditorParser()) ) {
                            alt107=1;
                        }
                        else if ( (true) ) {
                            alt107=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 107, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 107, 0, input);

                        throw nvae;
                    }
                    switch (alt107) {
                        case 1 :
                            // InternalWreslEditorParser.g:3943:2: otherlv_3= Unbounded
                            {
                            otherlv_3=(Token)match(input,Unbounded,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getUpperAccess().getUnboundedKeyword_1_0_1_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:3949:2: otherlv_4= Unbounded
                            {
                            otherlv_4=(Token)match(input,Unbounded,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getUpperAccess().getUNBOUNDEDKeyword_1_0_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:3954:6: ( (lv_expression_5_0= ruleExpression ) )
                    {
                    // InternalWreslEditorParser.g:3954:6: ( (lv_expression_5_0= ruleExpression ) )
                    // InternalWreslEditorParser.g:3955:1: (lv_expression_5_0= ruleExpression )
                    {
                    // InternalWreslEditorParser.g:3955:1: (lv_expression_5_0= ruleExpression )
                    // InternalWreslEditorParser.g:3956:3: lv_expression_5_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUpperAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUpperRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpper"


    // $ANTLR start "entryRuleLower"
    // InternalWreslEditorParser.g:3980:1: entryRuleLower returns [EObject current=null] : iv_ruleLower= ruleLower EOF ;
    public final EObject entryRuleLower() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLower = null;


        try {
            // InternalWreslEditorParser.g:3981:2: (iv_ruleLower= ruleLower EOF )
            // InternalWreslEditorParser.g:3982:2: iv_ruleLower= ruleLower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLowerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLower=ruleLower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLower; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLower"


    // $ANTLR start "ruleLower"
    // InternalWreslEditorParser.g:3989:1: ruleLower returns [EObject current=null] : ( (otherlv_0= Lower | otherlv_1= Lower ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) ) ;
    public final EObject ruleLower() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:3992:28: ( ( (otherlv_0= Lower | otherlv_1= Lower ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) ) )
            // InternalWreslEditorParser.g:3993:1: ( (otherlv_0= Lower | otherlv_1= Lower ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) )
            {
            // InternalWreslEditorParser.g:3993:1: ( (otherlv_0= Lower | otherlv_1= Lower ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:3993:2: (otherlv_0= Lower | otherlv_1= Lower ) ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:3993:2: (otherlv_0= Lower | otherlv_1= Lower )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Lower) ) {
                int LA109_1 = input.LA(2);

                if ( (synpred125_InternalWreslEditorParser()) ) {
                    alt109=1;
                }
                else if ( (true) ) {
                    alt109=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 109, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalWreslEditorParser.g:3994:2: otherlv_0= Lower
                    {
                    otherlv_0=(Token)match(input,Lower,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getLowerAccess().getLowerKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4000:2: otherlv_1= Lower
                    {
                    otherlv_1=(Token)match(input,Lower,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getLowerAccess().getLOWERKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4004:2: ( ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) ) | ( (lv_expression_5_0= ruleExpression ) ) )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Unbounded) ) {
                alt111=1;
            }
            else if ( ((LA111_0>=Daysintimestep && LA111_0<=Daysinmonth)||LA111_0==Wateryear||LA111_0==Cfs_taf||(LA111_0>=Prevapr && LA111_0<=Daysin)||LA111_0==Month||(LA111_0>=Apr && LA111_0<=Jun)||(LA111_0>=Mar && LA111_0<=Oct)||LA111_0==Sep||LA111_0==M||LA111_0==LeftParenthesis||LA111_0==PlusSign||LA111_0==HyphenMinus||LA111_0==I||(LA111_0>=RULE_MIN && LA111_0<=RULE_FLOAT)||LA111_0==RULE_ID) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalWreslEditorParser.g:4004:3: ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) )
                    {
                    // InternalWreslEditorParser.g:4004:3: ( () (otherlv_3= Unbounded | otherlv_4= Unbounded ) )
                    // InternalWreslEditorParser.g:4004:4: () (otherlv_3= Unbounded | otherlv_4= Unbounded )
                    {
                    // InternalWreslEditorParser.g:4004:4: ()
                    // InternalWreslEditorParser.g:4005:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getLowerAccess().getLowerAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalWreslEditorParser.g:4013:2: (otherlv_3= Unbounded | otherlv_4= Unbounded )
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==Unbounded) ) {
                        int LA110_1 = input.LA(2);

                        if ( (synpred126_InternalWreslEditorParser()) ) {
                            alt110=1;
                        }
                        else if ( (true) ) {
                            alt110=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 110, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 110, 0, input);

                        throw nvae;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalWreslEditorParser.g:4014:2: otherlv_3= Unbounded
                            {
                            otherlv_3=(Token)match(input,Unbounded,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getLowerAccess().getUnboundedKeyword_1_0_1_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:4020:2: otherlv_4= Unbounded
                            {
                            otherlv_4=(Token)match(input,Unbounded,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getLowerAccess().getUNBOUNDEDKeyword_1_0_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4025:6: ( (lv_expression_5_0= ruleExpression ) )
                    {
                    // InternalWreslEditorParser.g:4025:6: ( (lv_expression_5_0= ruleExpression ) )
                    // InternalWreslEditorParser.g:4026:1: (lv_expression_5_0= ruleExpression )
                    {
                    // InternalWreslEditorParser.g:4026:1: (lv_expression_5_0= ruleExpression )
                    // InternalWreslEditorParser.g:4027:3: lv_expression_5_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLowerAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLowerRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLower"


    // $ANTLR start "entryRuleGoal"
    // InternalWreslEditorParser.g:4051:1: entryRuleGoal returns [EObject current=null] : iv_ruleGoal= ruleGoal EOF ;
    public final EObject entryRuleGoal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoal = null;


        try {
            // InternalWreslEditorParser.g:4052:2: (iv_ruleGoal= ruleGoal EOF )
            // InternalWreslEditorParser.g:4053:2: iv_ruleGoal= ruleGoal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoal=ruleGoal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoal"


    // $ANTLR start "ruleGoal"
    // InternalWreslEditorParser.g:4060:1: ruleGoal returns [EObject current=null] : ( (otherlv_0= Goal | otherlv_1= Goal ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (lv_name_6_0= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) ) ) otherlv_9= RightCurlyBracket ) ;
    public final EObject ruleGoal() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_local_4_1=null;
        Token lv_local_4_2=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_ta_2_0 = null;

        EObject lv_definition_8_1 = null;

        EObject lv_definition_8_2 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4063:28: ( ( (otherlv_0= Goal | otherlv_1= Goal ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (lv_name_6_0= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) ) ) otherlv_9= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:4064:1: ( (otherlv_0= Goal | otherlv_1= Goal ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (lv_name_6_0= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) ) ) otherlv_9= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:4064:1: ( (otherlv_0= Goal | otherlv_1= Goal ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (lv_name_6_0= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) ) ) otherlv_9= RightCurlyBracket )
            // InternalWreslEditorParser.g:4064:2: (otherlv_0= Goal | otherlv_1= Goal ) ( (lv_ta_2_0= ruleTimeArraySize ) )? (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )? ( (lv_name_6_0= RULE_ID ) ) otherlv_7= LeftCurlyBracket ( ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) ) ) otherlv_9= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:4064:2: (otherlv_0= Goal | otherlv_1= Goal )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==Goal) ) {
                int LA112_1 = input.LA(2);

                if ( (synpred128_InternalWreslEditorParser()) ) {
                    alt112=1;
                }
                else if ( (true) ) {
                    alt112=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalWreslEditorParser.g:4065:2: otherlv_0= Goal
                    {
                    otherlv_0=(Token)match(input,Goal,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4071:2: otherlv_1= Goal
                    {
                    otherlv_1=(Token)match(input,Goal,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getGoalAccess().getGOALKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4075:2: ( (lv_ta_2_0= ruleTimeArraySize ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==LeftParenthesis) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalWreslEditorParser.g:4076:1: (lv_ta_2_0= ruleTimeArraySize )
                    {
                    // InternalWreslEditorParser.g:4076:1: (lv_ta_2_0= ruleTimeArraySize )
                    // InternalWreslEditorParser.g:4077:3: lv_ta_2_0= ruleTimeArraySize
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalAccess().getTaTimeArraySizeParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_17);
                    lv_ta_2_0=ruleTimeArraySize();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalRule());
                      	        }
                             		set(
                             			current, 
                             			"ta",
                              		lv_ta_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TimeArraySize");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalWreslEditorParser.g:4093:3: (otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==LeftSquareBracket) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalWreslEditorParser.g:4094:2: otherlv_3= LeftSquareBracket ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) ) otherlv_5= RightSquareBracket
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getGoalAccess().getLeftSquareBracketKeyword_2_0());
                          
                    }
                    // InternalWreslEditorParser.g:4098:1: ( ( (lv_local_4_1= Local | lv_local_4_2= Local ) ) )
                    // InternalWreslEditorParser.g:4099:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                    {
                    // InternalWreslEditorParser.g:4099:1: ( (lv_local_4_1= Local | lv_local_4_2= Local ) )
                    // InternalWreslEditorParser.g:4100:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                    {
                    // InternalWreslEditorParser.g:4100:1: (lv_local_4_1= Local | lv_local_4_2= Local )
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==Local) ) {
                        int LA114_1 = input.LA(2);

                        if ( (synpred130_InternalWreslEditorParser()) ) {
                            alt114=1;
                        }
                        else if ( (true) ) {
                            alt114=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 114, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 114, 0, input);

                        throw nvae;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalWreslEditorParser.g:4101:3: lv_local_4_1= Local
                            {
                            lv_local_4_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_4_1, grammarAccess.getGoalAccess().getLocalLocalKeyword_2_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getGoalRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:4114:8: lv_local_4_2= Local
                            {
                            lv_local_4_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_4_2, grammarAccess.getGoalAccess().getLocalLOCALKeyword_2_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getGoalRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getGoalAccess().getRightSquareBracketKeyword_2_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4135:3: ( (lv_name_6_0= RULE_ID ) )
            // InternalWreslEditorParser.g:4136:1: (lv_name_6_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:4136:1: (lv_name_6_0= RULE_ID )
            // InternalWreslEditorParser.g:4137:3: lv_name_6_0= RULE_ID
            {
            lv_name_6_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_6_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getGoalRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_6_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,LeftCurlyBracket,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalWreslEditorParser.g:4158:1: ( ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) ) )
            // InternalWreslEditorParser.g:4159:1: ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) )
            {
            // InternalWreslEditorParser.g:4159:1: ( (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase ) )
            // InternalWreslEditorParser.g:4160:1: (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase )
            {
            // InternalWreslEditorParser.g:4160:1: (lv_definition_8_1= ruleGoalSimple | lv_definition_8_2= ruleGoalCase )
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( ((LA116_0>=Daysintimestep && LA116_0<=Daysinmonth)||LA116_0==Wateryear||LA116_0==Cfs_taf||(LA116_0>=Prevapr && LA116_0<=Daysin)||LA116_0==Month||(LA116_0>=Apr && LA116_0<=Jun)||(LA116_0>=Mar && LA116_0<=Oct)||LA116_0==Sep||LA116_0==M||LA116_0==LeftParenthesis||LA116_0==PlusSign||LA116_0==HyphenMinus||LA116_0==I||(LA116_0>=RULE_MIN && LA116_0<=RULE_FLOAT)||LA116_0==RULE_ID) ) {
                alt116=1;
            }
            else if ( (LA116_0==Lhs) ) {
                alt116=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    // InternalWreslEditorParser.g:4161:3: lv_definition_8_1= ruleGoalSimple
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalAccess().getDefinitionGoalSimpleParserRuleCall_5_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_definition_8_1=ruleGoalSimple();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalRule());
                      	        }
                             		set(
                             			current, 
                             			"definition",
                              		lv_definition_8_1, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.GoalSimple");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4176:8: lv_definition_8_2= ruleGoalCase
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalAccess().getDefinitionGoalCaseParserRuleCall_5_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_definition_8_2=ruleGoalCase();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalRule());
                      	        }
                             		set(
                             			current, 
                             			"definition",
                              		lv_definition_8_2, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.GoalCase");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            otherlv_9=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoal"


    // $ANTLR start "entryRuleGoalCase"
    // InternalWreslEditorParser.g:4207:1: entryRuleGoalCase returns [EObject current=null] : iv_ruleGoalCase= ruleGoalCase EOF ;
    public final EObject entryRuleGoalCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoalCase = null;


        try {
            // InternalWreslEditorParser.g:4208:2: (iv_ruleGoalCase= ruleGoalCase EOF )
            // InternalWreslEditorParser.g:4209:2: iv_ruleGoalCase= ruleGoalCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoalCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoalCase=ruleGoalCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoalCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoalCase"


    // $ANTLR start "ruleGoalCase"
    // InternalWreslEditorParser.g:4216:1: ruleGoalCase returns [EObject current=null] : ( (otherlv_0= Lhs | otherlv_1= Lhs ) ( (lv_lhs_2_0= ruleExpression ) ) ( ( (lv_content_3_0= ruleGoalNoCaseContent ) ) | ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+ ) ) ;
    public final EObject ruleGoalCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_lhs_2_0 = null;

        EObject lv_content_3_0 = null;

        EObject lv_caseContent_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4219:28: ( ( (otherlv_0= Lhs | otherlv_1= Lhs ) ( (lv_lhs_2_0= ruleExpression ) ) ( ( (lv_content_3_0= ruleGoalNoCaseContent ) ) | ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+ ) ) )
            // InternalWreslEditorParser.g:4220:1: ( (otherlv_0= Lhs | otherlv_1= Lhs ) ( (lv_lhs_2_0= ruleExpression ) ) ( ( (lv_content_3_0= ruleGoalNoCaseContent ) ) | ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+ ) )
            {
            // InternalWreslEditorParser.g:4220:1: ( (otherlv_0= Lhs | otherlv_1= Lhs ) ( (lv_lhs_2_0= ruleExpression ) ) ( ( (lv_content_3_0= ruleGoalNoCaseContent ) ) | ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+ ) )
            // InternalWreslEditorParser.g:4220:2: (otherlv_0= Lhs | otherlv_1= Lhs ) ( (lv_lhs_2_0= ruleExpression ) ) ( ( (lv_content_3_0= ruleGoalNoCaseContent ) ) | ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+ )
            {
            // InternalWreslEditorParser.g:4220:2: (otherlv_0= Lhs | otherlv_1= Lhs )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==Lhs) ) {
                int LA117_1 = input.LA(2);

                if ( (synpred133_InternalWreslEditorParser()) ) {
                    alt117=1;
                }
                else if ( (true) ) {
                    alt117=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 117, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalWreslEditorParser.g:4221:2: otherlv_0= Lhs
                    {
                    otherlv_0=(Token)match(input,Lhs,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getGoalCaseAccess().getLhsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4227:2: otherlv_1= Lhs
                    {
                    otherlv_1=(Token)match(input,Lhs,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getGoalCaseAccess().getLHSKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4231:2: ( (lv_lhs_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:4232:1: (lv_lhs_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:4232:1: (lv_lhs_2_0= ruleExpression )
            // InternalWreslEditorParser.g:4233:3: lv_lhs_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGoalCaseAccess().getLhsExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_62);
            lv_lhs_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGoalCaseRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:4249:2: ( ( (lv_content_3_0= ruleGoalNoCaseContent ) ) | ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+ )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==Rhs) ) {
                alt119=1;
            }
            else if ( (LA119_0==Case) ) {
                alt119=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // InternalWreslEditorParser.g:4249:3: ( (lv_content_3_0= ruleGoalNoCaseContent ) )
                    {
                    // InternalWreslEditorParser.g:4249:3: ( (lv_content_3_0= ruleGoalNoCaseContent ) )
                    // InternalWreslEditorParser.g:4250:1: (lv_content_3_0= ruleGoalNoCaseContent )
                    {
                    // InternalWreslEditorParser.g:4250:1: (lv_content_3_0= ruleGoalNoCaseContent )
                    // InternalWreslEditorParser.g:4251:3: lv_content_3_0= ruleGoalNoCaseContent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalCaseAccess().getContentGoalNoCaseContentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_3_0=ruleGoalNoCaseContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalCaseRule());
                      	        }
                             		set(
                             			current, 
                             			"content",
                              		lv_content_3_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.GoalNoCaseContent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4268:6: ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+
                    {
                    // InternalWreslEditorParser.g:4268:6: ( (lv_caseContent_4_0= ruleGoalCaseContent ) )+
                    int cnt118=0;
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==Case) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalWreslEditorParser.g:4269:1: (lv_caseContent_4_0= ruleGoalCaseContent )
                    	    {
                    	    // InternalWreslEditorParser.g:4269:1: (lv_caseContent_4_0= ruleGoalCaseContent )
                    	    // InternalWreslEditorParser.g:4270:3: lv_caseContent_4_0= ruleGoalCaseContent
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getGoalCaseAccess().getCaseContentGoalCaseContentParserRuleCall_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_caseContent_4_0=ruleGoalCaseContent();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getGoalCaseRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"caseContent",
                    	              		lv_caseContent_4_0, 
                    	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.GoalCaseContent");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt118 >= 1 ) break loop118;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(118, input);
                                throw eee;
                        }
                        cnt118++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoalCase"


    // $ANTLR start "entryRuleGoalCaseContent"
    // InternalWreslEditorParser.g:4294:1: entryRuleGoalCaseContent returns [EObject current=null] : iv_ruleGoalCaseContent= ruleGoalCaseContent EOF ;
    public final EObject entryRuleGoalCaseContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoalCaseContent = null;


        try {
            // InternalWreslEditorParser.g:4295:2: (iv_ruleGoalCaseContent= ruleGoalCaseContent EOF )
            // InternalWreslEditorParser.g:4296:2: iv_ruleGoalCaseContent= ruleGoalCaseContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoalCaseContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoalCaseContent=ruleGoalCaseContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoalCaseContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoalCaseContent"


    // $ANTLR start "ruleGoalCaseContent"
    // InternalWreslEditorParser.g:4303:1: ruleGoalCaseContent returns [EObject current=null] : ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) (otherlv_5= Rhs | otherlv_6= Rhs ) ( (lv_rhs_7_0= ruleExpression ) ) ( (lv_subContent_8_0= ruleSubContent ) )? otherlv_9= RightCurlyBracket ) ;
    public final EObject ruleGoalCaseContent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_caseName_2_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_caseName_2_2 = null;

        EObject lv_condition_4_0 = null;

        EObject lv_rhs_7_0 = null;

        EObject lv_subContent_8_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4306:28: ( ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) (otherlv_5= Rhs | otherlv_6= Rhs ) ( (lv_rhs_7_0= ruleExpression ) ) ( (lv_subContent_8_0= ruleSubContent ) )? otherlv_9= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:4307:1: ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) (otherlv_5= Rhs | otherlv_6= Rhs ) ( (lv_rhs_7_0= ruleExpression ) ) ( (lv_subContent_8_0= ruleSubContent ) )? otherlv_9= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:4307:1: ( (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) (otherlv_5= Rhs | otherlv_6= Rhs ) ( (lv_rhs_7_0= ruleExpression ) ) ( (lv_subContent_8_0= ruleSubContent ) )? otherlv_9= RightCurlyBracket )
            // InternalWreslEditorParser.g:4307:2: (otherlv_0= Case | otherlv_1= Case ) ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) ) otherlv_3= LeftCurlyBracket ( (lv_condition_4_0= ruleCondition ) ) (otherlv_5= Rhs | otherlv_6= Rhs ) ( (lv_rhs_7_0= ruleExpression ) ) ( (lv_subContent_8_0= ruleSubContent ) )? otherlv_9= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:4307:2: (otherlv_0= Case | otherlv_1= Case )
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==Case) ) {
                int LA120_1 = input.LA(2);

                if ( (synpred136_InternalWreslEditorParser()) ) {
                    alt120=1;
                }
                else if ( (true) ) {
                    alt120=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 120, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalWreslEditorParser.g:4308:2: otherlv_0= Case
                    {
                    otherlv_0=(Token)match(input,Case,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getGoalCaseContentAccess().getCaseKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4314:2: otherlv_1= Case
                    {
                    otherlv_1=(Token)match(input,Case,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getGoalCaseContentAccess().getCASEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4318:2: ( ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) ) )
            // InternalWreslEditorParser.g:4319:1: ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) )
            {
            // InternalWreslEditorParser.g:4319:1: ( (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent ) )
            // InternalWreslEditorParser.g:4320:1: (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent )
            {
            // InternalWreslEditorParser.g:4320:1: (lv_caseName_2_1= RULE_ID | lv_caseName_2_2= ruleSpecialIdent )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_ID) ) {
                alt121=1;
            }
            else if ( ((LA121_0>=Daysintimestep && LA121_0<=Daysinmonth)||LA121_0==Wateryear||LA121_0==Cfs_taf||(LA121_0>=Prevapr && LA121_0<=Daysin)||LA121_0==Month||(LA121_0>=Apr && LA121_0<=Jun)||(LA121_0>=Mar && LA121_0<=Oct)||LA121_0==Sep||LA121_0==I) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalWreslEditorParser.g:4321:3: lv_caseName_2_1= RULE_ID
                    {
                    lv_caseName_2_1=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_caseName_2_1, grammarAccess.getGoalCaseContentAccess().getCaseNameIDTerminalRuleCall_1_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGoalCaseContentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"caseName",
                              		lv_caseName_2_1, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4336:8: lv_caseName_2_2= ruleSpecialIdent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getCaseNameSpecialIdentParserRuleCall_1_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_7);
                    lv_caseName_2_2=ruleSpecialIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"caseName",
                              		lv_caseName_2_2, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SpecialIdent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGoalCaseContentAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalWreslEditorParser.g:4359:1: ( (lv_condition_4_0= ruleCondition ) )
            // InternalWreslEditorParser.g:4360:1: (lv_condition_4_0= ruleCondition )
            {
            // InternalWreslEditorParser.g:4360:1: (lv_condition_4_0= ruleCondition )
            // InternalWreslEditorParser.g:4361:3: lv_condition_4_0= ruleCondition
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getConditionConditionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_condition_4_0=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
              	        }
                     		set(
                     			current, 
                     			"condition",
                      		lv_condition_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Condition");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:4377:2: (otherlv_5= Rhs | otherlv_6= Rhs )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==Rhs) ) {
                int LA122_1 = input.LA(2);

                if ( (synpred138_InternalWreslEditorParser()) ) {
                    alt122=1;
                }
                else if ( (true) ) {
                    alt122=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 122, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalWreslEditorParser.g:4378:2: otherlv_5= Rhs
                    {
                    otherlv_5=(Token)match(input,Rhs,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getGoalCaseContentAccess().getRhsKeyword_4_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4384:2: otherlv_6= Rhs
                    {
                    otherlv_6=(Token)match(input,Rhs,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getGoalCaseContentAccess().getRHSKeyword_4_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4388:2: ( (lv_rhs_7_0= ruleExpression ) )
            // InternalWreslEditorParser.g:4389:1: (lv_rhs_7_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:4389:1: (lv_rhs_7_0= ruleExpression )
            // InternalWreslEditorParser.g:4390:3: lv_rhs_7_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getRhsExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_65);
            lv_rhs_7_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
              	        }
                     		set(
                     			current, 
                     			"rhs",
                      		lv_rhs_7_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:4406:2: ( (lv_subContent_8_0= ruleSubContent ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==Lhs) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalWreslEditorParser.g:4407:1: (lv_subContent_8_0= ruleSubContent )
                    {
                    // InternalWreslEditorParser.g:4407:1: (lv_subContent_8_0= ruleSubContent )
                    // InternalWreslEditorParser.g:4408:3: lv_subContent_8_0= ruleSubContent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getSubContentSubContentParserRuleCall_6_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_9);
                    lv_subContent_8_0=ruleSubContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"subContent",
                              		lv_subContent_8_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SubContent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getGoalCaseContentAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoalCaseContent"


    // $ANTLR start "entryRuleGoalNoCaseContent"
    // InternalWreslEditorParser.g:4437:1: entryRuleGoalNoCaseContent returns [EObject current=null] : iv_ruleGoalNoCaseContent= ruleGoalNoCaseContent EOF ;
    public final EObject entryRuleGoalNoCaseContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoalNoCaseContent = null;


        try {
            // InternalWreslEditorParser.g:4438:2: (iv_ruleGoalNoCaseContent= ruleGoalNoCaseContent EOF )
            // InternalWreslEditorParser.g:4439:2: iv_ruleGoalNoCaseContent= ruleGoalNoCaseContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoalNoCaseContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoalNoCaseContent=ruleGoalNoCaseContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoalNoCaseContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoalNoCaseContent"


    // $ANTLR start "ruleGoalNoCaseContent"
    // InternalWreslEditorParser.g:4446:1: ruleGoalNoCaseContent returns [EObject current=null] : ( (otherlv_0= Rhs | otherlv_1= Rhs ) ( (lv_rhs_2_0= ruleExpression ) ) ( (lv_subContent_3_0= ruleSubContent ) )? ) ;
    public final EObject ruleGoalNoCaseContent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_rhs_2_0 = null;

        EObject lv_subContent_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4449:28: ( ( (otherlv_0= Rhs | otherlv_1= Rhs ) ( (lv_rhs_2_0= ruleExpression ) ) ( (lv_subContent_3_0= ruleSubContent ) )? ) )
            // InternalWreslEditorParser.g:4450:1: ( (otherlv_0= Rhs | otherlv_1= Rhs ) ( (lv_rhs_2_0= ruleExpression ) ) ( (lv_subContent_3_0= ruleSubContent ) )? )
            {
            // InternalWreslEditorParser.g:4450:1: ( (otherlv_0= Rhs | otherlv_1= Rhs ) ( (lv_rhs_2_0= ruleExpression ) ) ( (lv_subContent_3_0= ruleSubContent ) )? )
            // InternalWreslEditorParser.g:4450:2: (otherlv_0= Rhs | otherlv_1= Rhs ) ( (lv_rhs_2_0= ruleExpression ) ) ( (lv_subContent_3_0= ruleSubContent ) )?
            {
            // InternalWreslEditorParser.g:4450:2: (otherlv_0= Rhs | otherlv_1= Rhs )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==Rhs) ) {
                int LA124_1 = input.LA(2);

                if ( (synpred140_InternalWreslEditorParser()) ) {
                    alt124=1;
                }
                else if ( (true) ) {
                    alt124=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 124, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // InternalWreslEditorParser.g:4451:2: otherlv_0= Rhs
                    {
                    otherlv_0=(Token)match(input,Rhs,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getGoalNoCaseContentAccess().getRhsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4457:2: otherlv_1= Rhs
                    {
                    otherlv_1=(Token)match(input,Rhs,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getGoalNoCaseContentAccess().getRHSKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4461:2: ( (lv_rhs_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:4462:1: (lv_rhs_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:4462:1: (lv_rhs_2_0= ruleExpression )
            // InternalWreslEditorParser.g:4463:3: lv_rhs_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGoalNoCaseContentAccess().getRhsExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_66);
            lv_rhs_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGoalNoCaseContentRule());
              	        }
                     		set(
                     			current, 
                     			"rhs",
                      		lv_rhs_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:4479:2: ( (lv_subContent_3_0= ruleSubContent ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Lhs) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalWreslEditorParser.g:4480:1: (lv_subContent_3_0= ruleSubContent )
                    {
                    // InternalWreslEditorParser.g:4480:1: (lv_subContent_3_0= ruleSubContent )
                    // InternalWreslEditorParser.g:4481:3: lv_subContent_3_0= ruleSubContent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getGoalNoCaseContentAccess().getSubContentSubContentParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_subContent_3_0=ruleSubContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getGoalNoCaseContentRule());
                      	        }
                             		set(
                             			current, 
                             			"subContent",
                              		lv_subContent_3_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SubContent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoalNoCaseContent"


    // $ANTLR start "entryRuleSubContent"
    // InternalWreslEditorParser.g:4505:1: entryRuleSubContent returns [EObject current=null] : iv_ruleSubContent= ruleSubContent EOF ;
    public final EObject entryRuleSubContent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubContent = null;


        try {
            // InternalWreslEditorParser.g:4506:2: (iv_ruleSubContent= ruleSubContent EOF )
            // InternalWreslEditorParser.g:4507:2: iv_ruleSubContent= ruleSubContent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubContentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubContent=ruleSubContent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubContent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubContent"


    // $ANTLR start "ruleSubContent"
    // InternalWreslEditorParser.g:4514:1: ruleSubContent returns [EObject current=null] : ( ( ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )? ) | ( ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )? ) ) ;
    public final EObject ruleSubContent() throws RecognitionException {
        EObject current = null;

        EObject lv_gt_0_0 = null;

        EObject lv_lt_1_0 = null;

        EObject lv_lt_2_0 = null;

        EObject lv_gt_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4517:28: ( ( ( ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )? ) | ( ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )? ) ) )
            // InternalWreslEditorParser.g:4518:1: ( ( ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )? ) | ( ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )? ) )
            {
            // InternalWreslEditorParser.g:4518:1: ( ( ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )? ) | ( ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )? ) )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==Lhs) ) {
                int LA128_1 = input.LA(2);

                if ( (LA128_1==GreaterThanSign) ) {
                    alt128=1;
                }
                else if ( (LA128_1==LessThanSign) ) {
                    alt128=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 128, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalWreslEditorParser.g:4518:2: ( ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )? )
                    {
                    // InternalWreslEditorParser.g:4518:2: ( ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )? )
                    // InternalWreslEditorParser.g:4518:3: ( (lv_gt_0_0= ruleLhsGtRhs ) ) ( (lv_lt_1_0= ruleLhsLtRhs ) )?
                    {
                    // InternalWreslEditorParser.g:4518:3: ( (lv_gt_0_0= ruleLhsGtRhs ) )
                    // InternalWreslEditorParser.g:4519:1: (lv_gt_0_0= ruleLhsGtRhs )
                    {
                    // InternalWreslEditorParser.g:4519:1: (lv_gt_0_0= ruleLhsGtRhs )
                    // InternalWreslEditorParser.g:4520:3: lv_gt_0_0= ruleLhsGtRhs
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubContentAccess().getGtLhsGtRhsParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_gt_0_0=ruleLhsGtRhs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubContentRule());
                      	        }
                             		set(
                             			current, 
                             			"gt",
                              		lv_gt_0_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LhsGtRhs");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalWreslEditorParser.g:4536:2: ( (lv_lt_1_0= ruleLhsLtRhs ) )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==Lhs) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalWreslEditorParser.g:4537:1: (lv_lt_1_0= ruleLhsLtRhs )
                            {
                            // InternalWreslEditorParser.g:4537:1: (lv_lt_1_0= ruleLhsLtRhs )
                            // InternalWreslEditorParser.g:4538:3: lv_lt_1_0= ruleLhsLtRhs
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSubContentAccess().getLtLhsLtRhsParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_lt_1_0=ruleLhsLtRhs();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSubContentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"lt",
                                      		lv_lt_1_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LhsLtRhs");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4555:6: ( ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )? )
                    {
                    // InternalWreslEditorParser.g:4555:6: ( ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )? )
                    // InternalWreslEditorParser.g:4555:7: ( (lv_lt_2_0= ruleLhsLtRhs ) ) ( (lv_gt_3_0= ruleLhsGtRhs ) )?
                    {
                    // InternalWreslEditorParser.g:4555:7: ( (lv_lt_2_0= ruleLhsLtRhs ) )
                    // InternalWreslEditorParser.g:4556:1: (lv_lt_2_0= ruleLhsLtRhs )
                    {
                    // InternalWreslEditorParser.g:4556:1: (lv_lt_2_0= ruleLhsLtRhs )
                    // InternalWreslEditorParser.g:4557:3: lv_lt_2_0= ruleLhsLtRhs
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSubContentAccess().getLtLhsLtRhsParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_66);
                    lv_lt_2_0=ruleLhsLtRhs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSubContentRule());
                      	        }
                             		set(
                             			current, 
                             			"lt",
                              		lv_lt_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LhsLtRhs");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalWreslEditorParser.g:4573:2: ( (lv_gt_3_0= ruleLhsGtRhs ) )?
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==Lhs) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalWreslEditorParser.g:4574:1: (lv_gt_3_0= ruleLhsGtRhs )
                            {
                            // InternalWreslEditorParser.g:4574:1: (lv_gt_3_0= ruleLhsGtRhs )
                            // InternalWreslEditorParser.g:4575:3: lv_gt_3_0= ruleLhsGtRhs
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSubContentAccess().getGtLhsGtRhsParserRuleCall_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_gt_3_0=ruleLhsGtRhs();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSubContentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"gt",
                                      		lv_gt_3_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LhsGtRhs");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubContent"


    // $ANTLR start "entryRuleLhsGtRhs"
    // InternalWreslEditorParser.g:4599:1: entryRuleLhsGtRhs returns [EObject current=null] : iv_ruleLhsGtRhs= ruleLhsGtRhs EOF ;
    public final EObject entryRuleLhsGtRhs() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLhsGtRhs = null;


        try {
            // InternalWreslEditorParser.g:4600:2: (iv_ruleLhsGtRhs= ruleLhsGtRhs EOF )
            // InternalWreslEditorParser.g:4601:2: iv_ruleLhsGtRhs= ruleLhsGtRhs EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLhsGtRhsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLhsGtRhs=ruleLhsGtRhs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLhsGtRhs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLhsGtRhs"


    // $ANTLR start "ruleLhsGtRhs"
    // InternalWreslEditorParser.g:4608:1: ruleLhsGtRhs returns [EObject current=null] : ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= GreaterThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) ) ;
    public final EObject ruleLhsGtRhs() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_penalty_8_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4611:28: ( ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= GreaterThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) ) )
            // InternalWreslEditorParser.g:4612:1: ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= GreaterThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) )
            {
            // InternalWreslEditorParser.g:4612:1: ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= GreaterThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) )
            // InternalWreslEditorParser.g:4612:2: (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= GreaterThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) )
            {
            // InternalWreslEditorParser.g:4612:2: (otherlv_0= Lhs | otherlv_1= Lhs )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==Lhs) ) {
                int LA129_1 = input.LA(2);

                if ( (synpred145_InternalWreslEditorParser()) ) {
                    alt129=1;
                }
                else if ( (true) ) {
                    alt129=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 129, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }
            switch (alt129) {
                case 1 :
                    // InternalWreslEditorParser.g:4613:2: otherlv_0= Lhs
                    {
                    otherlv_0=(Token)match(input,Lhs,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getLhsGtRhsAccess().getLhsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4619:2: otherlv_1= Lhs
                    {
                    otherlv_1=(Token)match(input,Lhs,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getLhsGtRhsAccess().getLHSKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,GreaterThanSign,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getLhsGtRhsAccess().getGreaterThanSignKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:4628:1: (otherlv_3= Rhs | otherlv_4= Rhs )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==Rhs) ) {
                int LA130_1 = input.LA(2);

                if ( (synpred146_InternalWreslEditorParser()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalWreslEditorParser.g:4629:2: otherlv_3= Rhs
                    {
                    otherlv_3=(Token)match(input,Rhs,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLhsGtRhsAccess().getRhsKeyword_2_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4635:2: otherlv_4= Rhs
                    {
                    otherlv_4=(Token)match(input,Rhs,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getLhsGtRhsAccess().getRHSKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4639:2: ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Constrain) ) {
                alt132=1;
            }
            else if ( (LA132_0==Penalty) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalWreslEditorParser.g:4639:3: ( () (otherlv_6= Constrain | otherlv_7= Constrain ) )
                    {
                    // InternalWreslEditorParser.g:4639:3: ( () (otherlv_6= Constrain | otherlv_7= Constrain ) )
                    // InternalWreslEditorParser.g:4639:4: () (otherlv_6= Constrain | otherlv_7= Constrain )
                    {
                    // InternalWreslEditorParser.g:4639:4: ()
                    // InternalWreslEditorParser.g:4640:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getLhsGtRhsAccess().getLhsGtRhsAction_3_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalWreslEditorParser.g:4648:2: (otherlv_6= Constrain | otherlv_7= Constrain )
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( (LA131_0==Constrain) ) {
                        int LA131_1 = input.LA(2);

                        if ( (synpred147_InternalWreslEditorParser()) ) {
                            alt131=1;
                        }
                        else if ( (true) ) {
                            alt131=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 131, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 131, 0, input);

                        throw nvae;
                    }
                    switch (alt131) {
                        case 1 :
                            // InternalWreslEditorParser.g:4649:2: otherlv_6= Constrain
                            {
                            otherlv_6=(Token)match(input,Constrain,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getLhsGtRhsAccess().getConstrainKeyword_3_0_1_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:4655:2: otherlv_7= Constrain
                            {
                            otherlv_7=(Token)match(input,Constrain,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getLhsGtRhsAccess().getCONSTRAINKeyword_3_0_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4660:6: ( (lv_penalty_8_0= rulePenalty ) )
                    {
                    // InternalWreslEditorParser.g:4660:6: ( (lv_penalty_8_0= rulePenalty ) )
                    // InternalWreslEditorParser.g:4661:1: (lv_penalty_8_0= rulePenalty )
                    {
                    // InternalWreslEditorParser.g:4661:1: (lv_penalty_8_0= rulePenalty )
                    // InternalWreslEditorParser.g:4662:3: lv_penalty_8_0= rulePenalty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLhsGtRhsAccess().getPenaltyPenaltyParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_penalty_8_0=rulePenalty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLhsGtRhsRule());
                      	        }
                             		set(
                             			current, 
                             			"penalty",
                              		lv_penalty_8_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Penalty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLhsGtRhs"


    // $ANTLR start "entryRuleLhsLtRhs"
    // InternalWreslEditorParser.g:4686:1: entryRuleLhsLtRhs returns [EObject current=null] : iv_ruleLhsLtRhs= ruleLhsLtRhs EOF ;
    public final EObject entryRuleLhsLtRhs() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLhsLtRhs = null;


        try {
            // InternalWreslEditorParser.g:4687:2: (iv_ruleLhsLtRhs= ruleLhsLtRhs EOF )
            // InternalWreslEditorParser.g:4688:2: iv_ruleLhsLtRhs= ruleLhsLtRhs EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLhsLtRhsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLhsLtRhs=ruleLhsLtRhs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLhsLtRhs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLhsLtRhs"


    // $ANTLR start "ruleLhsLtRhs"
    // InternalWreslEditorParser.g:4695:1: ruleLhsLtRhs returns [EObject current=null] : ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= LessThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) ) ;
    public final EObject ruleLhsLtRhs() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_penalty_8_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4698:28: ( ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= LessThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) ) )
            // InternalWreslEditorParser.g:4699:1: ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= LessThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) )
            {
            // InternalWreslEditorParser.g:4699:1: ( (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= LessThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) ) )
            // InternalWreslEditorParser.g:4699:2: (otherlv_0= Lhs | otherlv_1= Lhs ) otherlv_2= LessThanSign (otherlv_3= Rhs | otherlv_4= Rhs ) ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) )
            {
            // InternalWreslEditorParser.g:4699:2: (otherlv_0= Lhs | otherlv_1= Lhs )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==Lhs) ) {
                int LA133_1 = input.LA(2);

                if ( (synpred149_InternalWreslEditorParser()) ) {
                    alt133=1;
                }
                else if ( (true) ) {
                    alt133=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 133, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // InternalWreslEditorParser.g:4700:2: otherlv_0= Lhs
                    {
                    otherlv_0=(Token)match(input,Lhs,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getLhsLtRhsAccess().getLhsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4706:2: otherlv_1= Lhs
                    {
                    otherlv_1=(Token)match(input,Lhs,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getLhsLtRhsAccess().getLHSKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,LessThanSign,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getLhsLtRhsAccess().getLessThanSignKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:4715:1: (otherlv_3= Rhs | otherlv_4= Rhs )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Rhs) ) {
                int LA134_1 = input.LA(2);

                if ( (synpred150_InternalWreslEditorParser()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // InternalWreslEditorParser.g:4716:2: otherlv_3= Rhs
                    {
                    otherlv_3=(Token)match(input,Rhs,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLhsLtRhsAccess().getRhsKeyword_2_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4722:2: otherlv_4= Rhs
                    {
                    otherlv_4=(Token)match(input,Rhs,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getLhsLtRhsAccess().getRHSKeyword_2_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4726:2: ( ( () (otherlv_6= Constrain | otherlv_7= Constrain ) ) | ( (lv_penalty_8_0= rulePenalty ) ) )
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Constrain) ) {
                alt136=1;
            }
            else if ( (LA136_0==Penalty) ) {
                alt136=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }
            switch (alt136) {
                case 1 :
                    // InternalWreslEditorParser.g:4726:3: ( () (otherlv_6= Constrain | otherlv_7= Constrain ) )
                    {
                    // InternalWreslEditorParser.g:4726:3: ( () (otherlv_6= Constrain | otherlv_7= Constrain ) )
                    // InternalWreslEditorParser.g:4726:4: () (otherlv_6= Constrain | otherlv_7= Constrain )
                    {
                    // InternalWreslEditorParser.g:4726:4: ()
                    // InternalWreslEditorParser.g:4727:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getLhsLtRhsAccess().getLhsLtRhsAction_3_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalWreslEditorParser.g:4735:2: (otherlv_6= Constrain | otherlv_7= Constrain )
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==Constrain) ) {
                        int LA135_1 = input.LA(2);

                        if ( (synpred151_InternalWreslEditorParser()) ) {
                            alt135=1;
                        }
                        else if ( (true) ) {
                            alt135=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 135, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 135, 0, input);

                        throw nvae;
                    }
                    switch (alt135) {
                        case 1 :
                            // InternalWreslEditorParser.g:4736:2: otherlv_6= Constrain
                            {
                            otherlv_6=(Token)match(input,Constrain,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getLhsLtRhsAccess().getConstrainKeyword_3_0_1_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:4742:2: otherlv_7= Constrain
                            {
                            otherlv_7=(Token)match(input,Constrain,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getLhsLtRhsAccess().getCONSTRAINKeyword_3_0_1_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4747:6: ( (lv_penalty_8_0= rulePenalty ) )
                    {
                    // InternalWreslEditorParser.g:4747:6: ( (lv_penalty_8_0= rulePenalty ) )
                    // InternalWreslEditorParser.g:4748:1: (lv_penalty_8_0= rulePenalty )
                    {
                    // InternalWreslEditorParser.g:4748:1: (lv_penalty_8_0= rulePenalty )
                    // InternalWreslEditorParser.g:4749:3: lv_penalty_8_0= rulePenalty
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLhsLtRhsAccess().getPenaltyPenaltyParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_penalty_8_0=rulePenalty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLhsLtRhsRule());
                      	        }
                             		set(
                             			current, 
                             			"penalty",
                              		lv_penalty_8_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Penalty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLhsLtRhs"


    // $ANTLR start "entryRulePenalty"
    // InternalWreslEditorParser.g:4773:1: entryRulePenalty returns [EObject current=null] : iv_rulePenalty= rulePenalty EOF ;
    public final EObject entryRulePenalty() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePenalty = null;


        try {
            // InternalWreslEditorParser.g:4774:2: (iv_rulePenalty= rulePenalty EOF )
            // InternalWreslEditorParser.g:4775:2: iv_rulePenalty= rulePenalty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPenaltyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePenalty=rulePenalty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePenalty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePenalty"


    // $ANTLR start "rulePenalty"
    // InternalWreslEditorParser.g:4782:1: rulePenalty returns [EObject current=null] : ( (otherlv_0= Penalty | otherlv_1= Penalty ) ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject rulePenalty() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4785:28: ( ( (otherlv_0= Penalty | otherlv_1= Penalty ) ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:4786:1: ( (otherlv_0= Penalty | otherlv_1= Penalty ) ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:4786:1: ( (otherlv_0= Penalty | otherlv_1= Penalty ) ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalWreslEditorParser.g:4786:2: (otherlv_0= Penalty | otherlv_1= Penalty ) ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalWreslEditorParser.g:4786:2: (otherlv_0= Penalty | otherlv_1= Penalty )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==Penalty) ) {
                int LA137_1 = input.LA(2);

                if ( (synpred153_InternalWreslEditorParser()) ) {
                    alt137=1;
                }
                else if ( (true) ) {
                    alt137=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 137, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalWreslEditorParser.g:4787:2: otherlv_0= Penalty
                    {
                    otherlv_0=(Token)match(input,Penalty,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getPenaltyAccess().getPenaltyKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4793:2: otherlv_1= Penalty
                    {
                    otherlv_1=(Token)match(input,Penalty,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPenaltyAccess().getPENALTYKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4797:2: ( (lv_expression_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:4798:1: (lv_expression_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:4798:1: (lv_expression_2_0= ruleExpression )
            // InternalWreslEditorParser.g:4799:3: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPenaltyAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPenaltyRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePenalty"


    // $ANTLR start "entryRuleGoalSimple"
    // InternalWreslEditorParser.g:4823:1: entryRuleGoalSimple returns [EObject current=null] : iv_ruleGoalSimple= ruleGoalSimple EOF ;
    public final EObject entryRuleGoalSimple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoalSimple = null;


        try {
            // InternalWreslEditorParser.g:4824:2: (iv_ruleGoalSimple= ruleGoalSimple EOF )
            // InternalWreslEditorParser.g:4825:2: iv_ruleGoalSimple= ruleGoalSimple EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoalSimpleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoalSimple=ruleGoalSimple();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoalSimple; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoalSimple"


    // $ANTLR start "ruleGoalSimple"
    // InternalWreslEditorParser.g:4832:1: ruleGoalSimple returns [EObject current=null] : ( (lv_constraint_0_0= ruleConstraint ) ) ;
    public final EObject ruleGoalSimple() throws RecognitionException {
        EObject current = null;

        EObject lv_constraint_0_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4835:28: ( ( (lv_constraint_0_0= ruleConstraint ) ) )
            // InternalWreslEditorParser.g:4836:1: ( (lv_constraint_0_0= ruleConstraint ) )
            {
            // InternalWreslEditorParser.g:4836:1: ( (lv_constraint_0_0= ruleConstraint ) )
            // InternalWreslEditorParser.g:4837:1: (lv_constraint_0_0= ruleConstraint )
            {
            // InternalWreslEditorParser.g:4837:1: (lv_constraint_0_0= ruleConstraint )
            // InternalWreslEditorParser.g:4838:3: lv_constraint_0_0= ruleConstraint
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGoalSimpleAccess().getConstraintConstraintParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_constraint_0_0=ruleConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGoalSimpleRule());
              	        }
                     		set(
                     			current, 
                     			"constraint",
                      		lv_constraint_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Constraint");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoalSimple"


    // $ANTLR start "entryRuleConstraint"
    // InternalWreslEditorParser.g:4862:1: entryRuleConstraint returns [EObject current=null] : iv_ruleConstraint= ruleConstraint EOF ;
    public final EObject entryRuleConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstraint = null;


        try {
            // InternalWreslEditorParser.g:4863:2: (iv_ruleConstraint= ruleConstraint EOF )
            // InternalWreslEditorParser.g:4864:2: iv_ruleConstraint= ruleConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstraint=ruleConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstraint"


    // $ANTLR start "ruleConstraint"
    // InternalWreslEditorParser.g:4871:1: ruleConstraint returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleExpression ) ) ( ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) ) ) ( (lv_rhs_2_0= ruleExpression ) ) ) ;
    public final EObject ruleConstraint() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_1=null;
        Token lv_operator_1_2=null;
        Token lv_operator_1_3=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4874:28: ( ( ( (lv_lhs_0_0= ruleExpression ) ) ( ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) ) ) ( (lv_rhs_2_0= ruleExpression ) ) ) )
            // InternalWreslEditorParser.g:4875:1: ( ( (lv_lhs_0_0= ruleExpression ) ) ( ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) ) ) ( (lv_rhs_2_0= ruleExpression ) ) )
            {
            // InternalWreslEditorParser.g:4875:1: ( ( (lv_lhs_0_0= ruleExpression ) ) ( ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) ) ) ( (lv_rhs_2_0= ruleExpression ) ) )
            // InternalWreslEditorParser.g:4875:2: ( (lv_lhs_0_0= ruleExpression ) ) ( ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) ) ) ( (lv_rhs_2_0= ruleExpression ) )
            {
            // InternalWreslEditorParser.g:4875:2: ( (lv_lhs_0_0= ruleExpression ) )
            // InternalWreslEditorParser.g:4876:1: (lv_lhs_0_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:4876:1: (lv_lhs_0_0= ruleExpression )
            // InternalWreslEditorParser.g:4877:3: lv_lhs_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstraintAccess().getLhsExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_70);
            lv_lhs_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstraintRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:4893:2: ( ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) ) )
            // InternalWreslEditorParser.g:4894:1: ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) )
            {
            // InternalWreslEditorParser.g:4894:1: ( (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign ) )
            // InternalWreslEditorParser.g:4895:1: (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign )
            {
            // InternalWreslEditorParser.g:4895:1: (lv_operator_1_1= LessThanSign | lv_operator_1_2= GreaterThanSign | lv_operator_1_3= EqualsSign )
            int alt138=3;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt138=1;
                }
                break;
            case GreaterThanSign:
                {
                alt138=2;
                }
                break;
            case EqualsSign:
                {
                alt138=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }

            switch (alt138) {
                case 1 :
                    // InternalWreslEditorParser.g:4896:3: lv_operator_1_1= LessThanSign
                    {
                    lv_operator_1_1=(Token)match(input,LessThanSign,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_operator_1_1, grammarAccess.getConstraintAccess().getOperatorLessThanSignKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstraintRule());
                      	        }
                             		setWithLastConsumed(current, "operator", lv_operator_1_1, null);
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4909:8: lv_operator_1_2= GreaterThanSign
                    {
                    lv_operator_1_2=(Token)match(input,GreaterThanSign,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_operator_1_2, grammarAccess.getConstraintAccess().getOperatorGreaterThanSignKeyword_1_0_1());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstraintRule());
                      	        }
                             		setWithLastConsumed(current, "operator", lv_operator_1_2, null);
                      	    
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:4922:8: lv_operator_1_3= EqualsSign
                    {
                    lv_operator_1_3=(Token)match(input,EqualsSign,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_operator_1_3, grammarAccess.getConstraintAccess().getOperatorEqualsSignKeyword_1_0_2());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getConstraintRule());
                      	        }
                             		setWithLastConsumed(current, "operator", lv_operator_1_3, null);
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalWreslEditorParser.g:4938:2: ( (lv_rhs_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:4939:1: (lv_rhs_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:4939:1: (lv_rhs_2_0= ruleExpression )
            // InternalWreslEditorParser.g:4940:3: lv_rhs_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstraintAccess().getRhsExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rhs_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstraintRule());
              	        }
                     		set(
                     			current, 
                     			"rhs",
                      		lv_rhs_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstraint"


    // $ANTLR start "entryRuleGroup"
    // InternalWreslEditorParser.g:4964:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // InternalWreslEditorParser.g:4965:2: (iv_ruleGroup= ruleGroup EOF )
            // InternalWreslEditorParser.g:4966:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGroup=ruleGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // InternalWreslEditorParser.g:4973:1: ruleGroup returns [EObject current=null] : ( (otherlv_0= Group | otherlv_1= Group ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_pattern_4_0 = null;

        EObject lv_ifincitems_5_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:4976:28: ( ( (otherlv_0= Group | otherlv_1= Group ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:4977:1: ( (otherlv_0= Group | otherlv_1= Group ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:4977:1: ( (otherlv_0= Group | otherlv_1= Group ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket )
            // InternalWreslEditorParser.g:4977:2: (otherlv_0= Group | otherlv_1= Group ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:4977:2: (otherlv_0= Group | otherlv_1= Group )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Group) ) {
                int LA139_1 = input.LA(2);

                if ( (synpred156_InternalWreslEditorParser()) ) {
                    alt139=1;
                }
                else if ( (true) ) {
                    alt139=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 139, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalWreslEditorParser.g:4978:2: otherlv_0= Group
                    {
                    otherlv_0=(Token)match(input,Group,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:4984:2: otherlv_1= Group
                    {
                    otherlv_1=(Token)match(input,Group,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getGROUPKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:4988:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalWreslEditorParser.g:4989:1: (lv_name_2_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:4989:1: (lv_name_2_0= RULE_ID )
            // InternalWreslEditorParser.g:4990:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getGroupRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalWreslEditorParser.g:5011:1: ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+
            int cnt140=0;
            loop140:
            do {
                int alt140=3;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==Objective||LA140_0==Include||LA140_0==Define||LA140_0==Const_1||LA140_0==Dvar_1||LA140_0==Goal||LA140_0==Svar_1) ) {
                    alt140=1;
                }
                else if ( (LA140_0==RULE_IF) ) {
                    alt140=2;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalWreslEditorParser.g:5011:2: ( (lv_pattern_4_0= rulePattern ) )
            	    {
            	    // InternalWreslEditorParser.g:5011:2: ( (lv_pattern_4_0= rulePattern ) )
            	    // InternalWreslEditorParser.g:5012:1: (lv_pattern_4_0= rulePattern )
            	    {
            	    // InternalWreslEditorParser.g:5012:1: (lv_pattern_4_0= rulePattern )
            	    // InternalWreslEditorParser.g:5013:3: lv_pattern_4_0= rulePattern
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGroupAccess().getPatternPatternParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_pattern_4_0=rulePattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pattern",
            	              		lv_pattern_4_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalWreslEditorParser.g:5030:6: ( (lv_ifincitems_5_0= ruleIfIncItems ) )
            	    {
            	    // InternalWreslEditorParser.g:5030:6: ( (lv_ifincitems_5_0= ruleIfIncItems ) )
            	    // InternalWreslEditorParser.g:5031:1: (lv_ifincitems_5_0= ruleIfIncItems )
            	    {
            	    // InternalWreslEditorParser.g:5031:1: (lv_ifincitems_5_0= ruleIfIncItems )
            	    // InternalWreslEditorParser.g:5032:3: lv_ifincitems_5_0= ruleIfIncItems
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGroupAccess().getIfincitemsIfIncItemsParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_ifincitems_5_0=ruleIfIncItems();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ifincitems",
            	              		lv_ifincitems_5_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.IfIncItems");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt140 >= 1 ) break loop140;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(140, input);
                        throw eee;
                }
                cnt140++;
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleModel"
    // InternalWreslEditorParser.g:5061:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalWreslEditorParser.g:5062:2: (iv_ruleModel= ruleModel EOF )
            // InternalWreslEditorParser.g:5063:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalWreslEditorParser.g:5070:1: ruleModel returns [EObject current=null] : ( (otherlv_0= Model | otherlv_1= Model ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_pattern_4_0 = null;

        EObject lv_ifincitems_5_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5073:28: ( ( (otherlv_0= Model | otherlv_1= Model ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:5074:1: ( (otherlv_0= Model | otherlv_1= Model ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:5074:1: ( (otherlv_0= Model | otherlv_1= Model ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket )
            // InternalWreslEditorParser.g:5074:2: (otherlv_0= Model | otherlv_1= Model ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+ otherlv_6= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:5074:2: (otherlv_0= Model | otherlv_1= Model )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==Model) ) {
                int LA141_1 = input.LA(2);

                if ( (synpred159_InternalWreslEditorParser()) ) {
                    alt141=1;
                }
                else if ( (true) ) {
                    alt141=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 141, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalWreslEditorParser.g:5075:2: otherlv_0= Model
                    {
                    otherlv_0=(Token)match(input,Model,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5081:2: otherlv_1= Model
                    {
                    otherlv_1=(Token)match(input,Model,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getMODELKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:5085:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalWreslEditorParser.g:5086:1: (lv_name_2_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:5086:1: (lv_name_2_0= RULE_ID )
            // InternalWreslEditorParser.g:5087:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getModelRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalWreslEditorParser.g:5108:1: ( ( (lv_pattern_4_0= rulePattern ) ) | ( (lv_ifincitems_5_0= ruleIfIncItems ) ) )+
            int cnt142=0;
            loop142:
            do {
                int alt142=3;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==Objective||LA142_0==Include||LA142_0==Define||LA142_0==Const_1||LA142_0==Dvar_1||LA142_0==Goal||LA142_0==Svar_1) ) {
                    alt142=1;
                }
                else if ( (LA142_0==RULE_IF) ) {
                    alt142=2;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalWreslEditorParser.g:5108:2: ( (lv_pattern_4_0= rulePattern ) )
            	    {
            	    // InternalWreslEditorParser.g:5108:2: ( (lv_pattern_4_0= rulePattern ) )
            	    // InternalWreslEditorParser.g:5109:1: (lv_pattern_4_0= rulePattern )
            	    {
            	    // InternalWreslEditorParser.g:5109:1: (lv_pattern_4_0= rulePattern )
            	    // InternalWreslEditorParser.g:5110:3: lv_pattern_4_0= rulePattern
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModelAccess().getPatternPatternParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_pattern_4_0=rulePattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModelRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pattern",
            	              		lv_pattern_4_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalWreslEditorParser.g:5127:6: ( (lv_ifincitems_5_0= ruleIfIncItems ) )
            	    {
            	    // InternalWreslEditorParser.g:5127:6: ( (lv_ifincitems_5_0= ruleIfIncItems ) )
            	    // InternalWreslEditorParser.g:5128:1: (lv_ifincitems_5_0= ruleIfIncItems )
            	    {
            	    // InternalWreslEditorParser.g:5128:1: (lv_ifincitems_5_0= ruleIfIncItems )
            	    // InternalWreslEditorParser.g:5129:3: lv_ifincitems_5_0= ruleIfIncItems
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModelAccess().getIfincitemsIfIncItemsParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_ifincitems_5_0=ruleIfIncItems();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModelRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ifincitems",
            	              		lv_ifincitems_5_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.IfIncItems");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt142 >= 1 ) break loop142;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(142, input);
                        throw eee;
                }
                cnt142++;
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleInitial"
    // InternalWreslEditorParser.g:5158:1: entryRuleInitial returns [EObject current=null] : iv_ruleInitial= ruleInitial EOF ;
    public final EObject entryRuleInitial() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitial = null;


        try {
            // InternalWreslEditorParser.g:5159:2: (iv_ruleInitial= ruleInitial EOF )
            // InternalWreslEditorParser.g:5160:2: iv_ruleInitial= ruleInitial EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitial=ruleInitial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitial; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitial"


    // $ANTLR start "ruleInitial"
    // InternalWreslEditorParser.g:5167:1: ruleInitial returns [EObject current=null] : ( (otherlv_0= Initial_1 | otherlv_1= Initial_1 | otherlv_2= Initial_1 ) otherlv_3= LeftCurlyBracket ( (lv_pattern_4_0= rulePattern ) )+ otherlv_5= RightCurlyBracket ) ;
    public final EObject ruleInitial() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_pattern_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5170:28: ( ( (otherlv_0= Initial_1 | otherlv_1= Initial_1 | otherlv_2= Initial_1 ) otherlv_3= LeftCurlyBracket ( (lv_pattern_4_0= rulePattern ) )+ otherlv_5= RightCurlyBracket ) )
            // InternalWreslEditorParser.g:5171:1: ( (otherlv_0= Initial_1 | otherlv_1= Initial_1 | otherlv_2= Initial_1 ) otherlv_3= LeftCurlyBracket ( (lv_pattern_4_0= rulePattern ) )+ otherlv_5= RightCurlyBracket )
            {
            // InternalWreslEditorParser.g:5171:1: ( (otherlv_0= Initial_1 | otherlv_1= Initial_1 | otherlv_2= Initial_1 ) otherlv_3= LeftCurlyBracket ( (lv_pattern_4_0= rulePattern ) )+ otherlv_5= RightCurlyBracket )
            // InternalWreslEditorParser.g:5171:2: (otherlv_0= Initial_1 | otherlv_1= Initial_1 | otherlv_2= Initial_1 ) otherlv_3= LeftCurlyBracket ( (lv_pattern_4_0= rulePattern ) )+ otherlv_5= RightCurlyBracket
            {
            // InternalWreslEditorParser.g:5171:2: (otherlv_0= Initial_1 | otherlv_1= Initial_1 | otherlv_2= Initial_1 )
            int alt143=3;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==Initial_1) ) {
                int LA143_1 = input.LA(2);

                if ( (synpred162_InternalWreslEditorParser()) ) {
                    alt143=1;
                }
                else if ( (synpred163_InternalWreslEditorParser()) ) {
                    alt143=2;
                }
                else if ( (true) ) {
                    alt143=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 143, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // InternalWreslEditorParser.g:5172:2: otherlv_0= Initial_1
                    {
                    otherlv_0=(Token)match(input,Initial_1,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getInitialAccess().getInitialKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5178:2: otherlv_1= Initial_1
                    {
                    otherlv_1=(Token)match(input,Initial_1,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getInitialAccess().getInitialKeyword_0_1());
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:5184:2: otherlv_2= Initial_1
                    {
                    otherlv_2=(Token)match(input,Initial_1,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getInitialAccess().getINITIALKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getInitialAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:5193:1: ( (lv_pattern_4_0= rulePattern ) )+
            int cnt144=0;
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==Objective||LA144_0==Include||LA144_0==Define||LA144_0==Const_1||LA144_0==Dvar_1||LA144_0==Goal||LA144_0==Svar_1) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalWreslEditorParser.g:5194:1: (lv_pattern_4_0= rulePattern )
            	    {
            	    // InternalWreslEditorParser.g:5194:1: (lv_pattern_4_0= rulePattern )
            	    // InternalWreslEditorParser.g:5195:3: lv_pattern_4_0= rulePattern
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInitialAccess().getPatternPatternParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_pattern_4_0=rulePattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInitialRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"pattern",
            	              		lv_pattern_4_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Pattern");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt144 >= 1 ) break loop144;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(144, input);
                        throw eee;
                }
                cnt144++;
            } while (true);

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getInitialAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitial"


    // $ANTLR start "entryRuleSequence"
    // InternalWreslEditorParser.g:5224:1: entryRuleSequence returns [EObject current=null] : iv_ruleSequence= ruleSequence EOF ;
    public final EObject entryRuleSequence() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequence = null;


        try {
            // InternalWreslEditorParser.g:5225:2: (iv_ruleSequence= ruleSequence EOF )
            // InternalWreslEditorParser.g:5226:2: iv_ruleSequence= ruleSequence EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequence=ruleSequence();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequence; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequence"


    // $ANTLR start "ruleSequence"
    // InternalWreslEditorParser.g:5233:1: ruleSequence returns [EObject current=null] : ( ( (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? ) ) | ( ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket ) ) ;
    public final EObject ruleSequence() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token this_ORDER_8=null;
        Token lv_order_9_0=null;
        Token this_ORDER_10=null;
        Token lv_order_11_0=null;
        Token otherlv_15=null;
        EObject lv_condition_7_0 = null;

        EObject lv_condition_12_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5236:28: ( ( ( (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? ) ) | ( ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket ) ) )
            // InternalWreslEditorParser.g:5237:1: ( ( (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? ) ) | ( ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket ) )
            {
            // InternalWreslEditorParser.g:5237:1: ( ( (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? ) ) | ( ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==Sequence) ) {
                alt152=1;
            }
            else if ( (LA152_0==Condition||LA152_0==Timestep||LA152_0==RightCurlyBracket||LA152_0==RULE_ORDER) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalWreslEditorParser.g:5237:2: ( (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? ) )
                    {
                    // InternalWreslEditorParser.g:5237:2: ( (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? ) )
                    // InternalWreslEditorParser.g:5237:3: (otherlv_0= Sequence | otherlv_1= Sequence ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= LeftCurlyBracket (otherlv_4= Model | otherlv_5= Model ) ( (otherlv_6= RULE_ID ) ) ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? )
                    {
                    // InternalWreslEditorParser.g:5237:3: (otherlv_0= Sequence | otherlv_1= Sequence )
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==Sequence) ) {
                        int LA145_1 = input.LA(2);

                        if ( (synpred165_InternalWreslEditorParser()) ) {
                            alt145=1;
                        }
                        else if ( (true) ) {
                            alt145=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 145, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 145, 0, input);

                        throw nvae;
                    }
                    switch (alt145) {
                        case 1 :
                            // InternalWreslEditorParser.g:5238:2: otherlv_0= Sequence
                            {
                            otherlv_0=(Token)match(input,Sequence,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_0, grammarAccess.getSequenceAccess().getSequenceKeyword_0_0_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:5244:2: otherlv_1= Sequence
                            {
                            otherlv_1=(Token)match(input,Sequence,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getSequenceAccess().getSEQUENCEKeyword_0_0_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:5248:2: ( (lv_name_2_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:5249:1: (lv_name_2_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:5249:1: (lv_name_2_0= RULE_ID )
                    // InternalWreslEditorParser.g:5250:3: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_name_2_0, grammarAccess.getSequenceAccess().getNameIDTerminalRuleCall_0_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSequenceRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ID");
                      	    
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getSequenceAccess().getLeftCurlyBracketKeyword_0_2());
                          
                    }
                    // InternalWreslEditorParser.g:5271:1: (otherlv_4= Model | otherlv_5= Model )
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( (LA146_0==Model) ) {
                        int LA146_1 = input.LA(2);

                        if ( (synpred166_InternalWreslEditorParser()) ) {
                            alt146=1;
                        }
                        else if ( (true) ) {
                            alt146=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 146, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 146, 0, input);

                        throw nvae;
                    }
                    switch (alt146) {
                        case 1 :
                            // InternalWreslEditorParser.g:5272:2: otherlv_4= Model
                            {
                            otherlv_4=(Token)match(input,Model,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getSequenceAccess().getModelKeyword_0_3_0());
                                  
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:5278:2: otherlv_5= Model
                            {
                            otherlv_5=(Token)match(input,Model,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getSequenceAccess().getMODELKeyword_0_3_1());
                                  
                            }

                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:5282:2: ( (otherlv_6= RULE_ID ) )
                    // InternalWreslEditorParser.g:5283:1: (otherlv_6= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:5283:1: (otherlv_6= RULE_ID )
                    // InternalWreslEditorParser.g:5284:3: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getSequenceRule());
                      	        }
                              
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_6, grammarAccess.getSequenceAccess().getModelModelCrossReference_0_4_0()); 
                      	
                    }

                    }


                    }

                    // InternalWreslEditorParser.g:5298:2: ( ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )? )
                    // InternalWreslEditorParser.g:5298:3: ( (lv_condition_7_0= ruleCondition ) )? (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )?
                    {
                    // InternalWreslEditorParser.g:5298:3: ( (lv_condition_7_0= ruleCondition ) )?
                    int alt147=2;
                    alt147 = dfa147.predict(input);
                    switch (alt147) {
                        case 1 :
                            // InternalWreslEditorParser.g:5299:1: (lv_condition_7_0= ruleCondition )
                            {
                            // InternalWreslEditorParser.g:5299:1: (lv_condition_7_0= ruleCondition )
                            // InternalWreslEditorParser.g:5300:3: lv_condition_7_0= ruleCondition
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSequenceAccess().getConditionConditionParserRuleCall_0_5_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_74);
                            lv_condition_7_0=ruleCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSequenceRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"condition",
                                      		lv_condition_7_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Condition");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:5316:3: (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )?
                    int alt148=2;
                    int LA148_0 = input.LA(1);

                    if ( (LA148_0==RULE_ORDER) ) {
                        int LA148_1 = input.LA(2);

                        if ( (LA148_1==RULE_INT) ) {
                            int LA148_3 = input.LA(3);

                            if ( (synpred168_InternalWreslEditorParser()) ) {
                                alt148=1;
                            }
                        }
                    }
                    switch (alt148) {
                        case 1 :
                            // InternalWreslEditorParser.g:5316:4: this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) )
                            {
                            this_ORDER_8=(Token)match(input,RULE_ORDER,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_ORDER_8, grammarAccess.getSequenceAccess().getORDERTerminalRuleCall_0_5_1_0()); 
                                  
                            }
                            // InternalWreslEditorParser.g:5320:1: ( (lv_order_9_0= RULE_INT ) )
                            // InternalWreslEditorParser.g:5321:1: (lv_order_9_0= RULE_INT )
                            {
                            // InternalWreslEditorParser.g:5321:1: (lv_order_9_0= RULE_INT )
                            // InternalWreslEditorParser.g:5322:3: lv_order_9_0= RULE_INT
                            {
                            lv_order_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_order_9_0, grammarAccess.getSequenceAccess().getOrderINTTerminalRuleCall_0_5_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getSequenceRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"order",
                                      		lv_order_9_0, 
                                      		"org.eclipse.xtext.common.Terminals.INT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5339:6: ( ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket )
                    {
                    // InternalWreslEditorParser.g:5339:6: ( ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket )
                    // InternalWreslEditorParser.g:5339:7: ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? ) ( ruleTimeStep ruleTimeStepValue )? otherlv_15= RightCurlyBracket
                    {
                    // InternalWreslEditorParser.g:5339:7: ( (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )? )
                    // InternalWreslEditorParser.g:5339:8: (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )? ( (lv_condition_12_0= ruleCondition ) )?
                    {
                    // InternalWreslEditorParser.g:5339:8: (this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) ) )?
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==RULE_ORDER) ) {
                        alt149=1;
                    }
                    switch (alt149) {
                        case 1 :
                            // InternalWreslEditorParser.g:5339:9: this_ORDER_10= RULE_ORDER ( (lv_order_11_0= RULE_INT ) )
                            {
                            this_ORDER_10=(Token)match(input,RULE_ORDER,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_ORDER_10, grammarAccess.getSequenceAccess().getORDERTerminalRuleCall_1_0_0_0()); 
                                  
                            }
                            // InternalWreslEditorParser.g:5343:1: ( (lv_order_11_0= RULE_INT ) )
                            // InternalWreslEditorParser.g:5344:1: (lv_order_11_0= RULE_INT )
                            {
                            // InternalWreslEditorParser.g:5344:1: (lv_order_11_0= RULE_INT )
                            // InternalWreslEditorParser.g:5345:3: lv_order_11_0= RULE_INT
                            {
                            lv_order_11_0=(Token)match(input,RULE_INT,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_order_11_0, grammarAccess.getSequenceAccess().getOrderINTTerminalRuleCall_1_0_0_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getSequenceRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"order",
                                      		lv_order_11_0, 
                                      		"org.eclipse.xtext.common.Terminals.INT");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalWreslEditorParser.g:5361:4: ( (lv_condition_12_0= ruleCondition ) )?
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==Condition) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalWreslEditorParser.g:5362:1: (lv_condition_12_0= ruleCondition )
                            {
                            // InternalWreslEditorParser.g:5362:1: (lv_condition_12_0= ruleCondition )
                            // InternalWreslEditorParser.g:5363:3: lv_condition_12_0= ruleCondition
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getSequenceAccess().getConditionConditionParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_76);
                            lv_condition_12_0=ruleCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getSequenceRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"condition",
                                      		lv_condition_12_0, 
                                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Condition");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }

                    // InternalWreslEditorParser.g:5379:4: ( ruleTimeStep ruleTimeStepValue )?
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==Timestep) ) {
                        alt151=1;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalWreslEditorParser.g:5380:2: ruleTimeStep ruleTimeStepValue
                            {
                            if ( state.backtracking==0 ) {
                               
                              	  /* */ 
                              	
                            }
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getSequenceAccess().getTimeStepParserRuleCall_1_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_77);
                            ruleTimeStep();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      afterParserOrEnumRuleCall();
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                              	  /* */ 
                              	
                            }
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getSequenceAccess().getTimeStepValueParserRuleCall_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_9);
                            ruleTimeStepValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    otherlv_15=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getSequenceAccess().getRightCurlyBracketKeyword_1_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequence"


    // $ANTLR start "entryRuleCondition"
    // InternalWreslEditorParser.g:5414:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalWreslEditorParser.g:5415:2: (iv_ruleCondition= ruleCondition EOF )
            // InternalWreslEditorParser.g:5416:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalWreslEditorParser.g:5423:1: ruleCondition returns [EObject current=null] : ( (otherlv_0= Condition | otherlv_1= Condition ) ( ( (lv_logical_2_0= ruleLogicalExpression ) ) | ( () this_ALWAYS_4= RULE_ALWAYS ) ) ) ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token this_ALWAYS_4=null;
        EObject lv_logical_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5426:28: ( ( (otherlv_0= Condition | otherlv_1= Condition ) ( ( (lv_logical_2_0= ruleLogicalExpression ) ) | ( () this_ALWAYS_4= RULE_ALWAYS ) ) ) )
            // InternalWreslEditorParser.g:5427:1: ( (otherlv_0= Condition | otherlv_1= Condition ) ( ( (lv_logical_2_0= ruleLogicalExpression ) ) | ( () this_ALWAYS_4= RULE_ALWAYS ) ) )
            {
            // InternalWreslEditorParser.g:5427:1: ( (otherlv_0= Condition | otherlv_1= Condition ) ( ( (lv_logical_2_0= ruleLogicalExpression ) ) | ( () this_ALWAYS_4= RULE_ALWAYS ) ) )
            // InternalWreslEditorParser.g:5427:2: (otherlv_0= Condition | otherlv_1= Condition ) ( ( (lv_logical_2_0= ruleLogicalExpression ) ) | ( () this_ALWAYS_4= RULE_ALWAYS ) )
            {
            // InternalWreslEditorParser.g:5427:2: (otherlv_0= Condition | otherlv_1= Condition )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==Condition) ) {
                int LA153_1 = input.LA(2);

                if ( (synpred173_InternalWreslEditorParser()) ) {
                    alt153=1;
                }
                else if ( (true) ) {
                    alt153=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 153, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalWreslEditorParser.g:5428:2: otherlv_0= Condition
                    {
                    otherlv_0=(Token)match(input,Condition,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5434:2: otherlv_1= Condition
                    {
                    otherlv_1=(Token)match(input,Condition,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getCONDITIONKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:5438:2: ( ( (lv_logical_2_0= ruleLogicalExpression ) ) | ( () this_ALWAYS_4= RULE_ALWAYS ) )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( ((LA154_0>=Daysintimestep && LA154_0<=Daysinmonth)||LA154_0==Wateryear||LA154_0==Cfs_taf||(LA154_0>=Prevapr && LA154_0<=Daysin)||LA154_0==Month||(LA154_0>=Apr && LA154_0<=Jun)||(LA154_0>=Mar && LA154_0<=Oct)||LA154_0==Sep||LA154_0==M||LA154_0==LeftParenthesis||LA154_0==PlusSign||LA154_0==HyphenMinus||LA154_0==I||(LA154_0>=RULE_RANGE && LA154_0<=RULE_FLOAT)||LA154_0==RULE_NOT||LA154_0==RULE_ID) ) {
                alt154=1;
            }
            else if ( (LA154_0==RULE_ALWAYS) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // InternalWreslEditorParser.g:5438:3: ( (lv_logical_2_0= ruleLogicalExpression ) )
                    {
                    // InternalWreslEditorParser.g:5438:3: ( (lv_logical_2_0= ruleLogicalExpression ) )
                    // InternalWreslEditorParser.g:5439:1: (lv_logical_2_0= ruleLogicalExpression )
                    {
                    // InternalWreslEditorParser.g:5439:1: (lv_logical_2_0= ruleLogicalExpression )
                    // InternalWreslEditorParser.g:5440:3: lv_logical_2_0= ruleLogicalExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionAccess().getLogicalLogicalExpressionParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_logical_2_0=ruleLogicalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionRule());
                      	        }
                             		set(
                             			current, 
                             			"logical",
                              		lv_logical_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.LogicalExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5457:6: ( () this_ALWAYS_4= RULE_ALWAYS )
                    {
                    // InternalWreslEditorParser.g:5457:6: ( () this_ALWAYS_4= RULE_ALWAYS )
                    // InternalWreslEditorParser.g:5457:7: () this_ALWAYS_4= RULE_ALWAYS
                    {
                    // InternalWreslEditorParser.g:5457:7: ()
                    // InternalWreslEditorParser.g:5458:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getConditionAccess().getConditionAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    this_ALWAYS_4=(Token)match(input,RULE_ALWAYS,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ALWAYS_4, grammarAccess.getConditionAccess().getALWAYSTerminalRuleCall_1_1_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleLogicalExpression"
    // InternalWreslEditorParser.g:5478:1: entryRuleLogicalExpression returns [EObject current=null] : iv_ruleLogicalExpression= ruleLogicalExpression EOF ;
    public final EObject entryRuleLogicalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalExpression = null;


        try {
            // InternalWreslEditorParser.g:5479:2: (iv_ruleLogicalExpression= ruleLogicalExpression EOF )
            // InternalWreslEditorParser.g:5480:2: iv_ruleLogicalExpression= ruleLogicalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalExpression=ruleLogicalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalExpression"


    // $ANTLR start "ruleLogicalExpression"
    // InternalWreslEditorParser.g:5487:1: ruleLogicalExpression returns [EObject current=null] : ( ( (lv_c1_0_0= ruleConditionalUnary ) ) ( ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) ) )* ) ;
    public final EObject ruleLogicalExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_c1_0_0 = null;

        EObject lv_c2_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5490:28: ( ( ( (lv_c1_0_0= ruleConditionalUnary ) ) ( ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) ) )* ) )
            // InternalWreslEditorParser.g:5491:1: ( ( (lv_c1_0_0= ruleConditionalUnary ) ) ( ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) ) )* )
            {
            // InternalWreslEditorParser.g:5491:1: ( ( (lv_c1_0_0= ruleConditionalUnary ) ) ( ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) ) )* )
            // InternalWreslEditorParser.g:5491:2: ( (lv_c1_0_0= ruleConditionalUnary ) ) ( ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) ) )*
            {
            // InternalWreslEditorParser.g:5491:2: ( (lv_c1_0_0= ruleConditionalUnary ) )
            // InternalWreslEditorParser.g:5492:1: (lv_c1_0_0= ruleConditionalUnary )
            {
            // InternalWreslEditorParser.g:5492:1: (lv_c1_0_0= ruleConditionalUnary )
            // InternalWreslEditorParser.g:5493:3: lv_c1_0_0= ruleConditionalUnary
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLogicalExpressionAccess().getC1ConditionalUnaryParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_79);
            lv_c1_0_0=ruleConditionalUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"c1",
                      		lv_c1_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ConditionalUnary");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:5509:2: ( ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) ) )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( ((LA155_0>=RULE_AND && LA155_0<=RULE_OR)) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalWreslEditorParser.g:5510:2: ruleBinaryOp ( (lv_c2_2_0= ruleConditionalUnary ) )
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	  /* */ 
            	      	
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getLogicalExpressionAccess().getBinaryOpParserRuleCall_1_0()); 
            	          
            	    }
            	    pushFollow(FOLLOW_12);
            	    ruleBinaryOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              afterParserOrEnumRuleCall();
            	          
            	    }
            	    // InternalWreslEditorParser.g:5520:1: ( (lv_c2_2_0= ruleConditionalUnary ) )
            	    // InternalWreslEditorParser.g:5521:1: (lv_c2_2_0= ruleConditionalUnary )
            	    {
            	    // InternalWreslEditorParser.g:5521:1: (lv_c2_2_0= ruleConditionalUnary )
            	    // InternalWreslEditorParser.g:5522:3: lv_c2_2_0= ruleConditionalUnary
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalExpressionAccess().getC2ConditionalUnaryParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_79);
            	    lv_c2_2_0=ruleConditionalUnary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"c2",
            	              		lv_c2_2_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.ConditionalUnary");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalExpression"


    // $ANTLR start "entryRuleBinaryOp"
    // InternalWreslEditorParser.g:5546:1: entryRuleBinaryOp returns [String current=null] : iv_ruleBinaryOp= ruleBinaryOp EOF ;
    public final String entryRuleBinaryOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryOp = null;


        try {
            // InternalWreslEditorParser.g:5547:1: (iv_ruleBinaryOp= ruleBinaryOp EOF )
            // InternalWreslEditorParser.g:5548:2: iv_ruleBinaryOp= ruleBinaryOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinaryOp=ruleBinaryOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryOp"


    // $ANTLR start "ruleBinaryOp"
    // InternalWreslEditorParser.g:5555:1: ruleBinaryOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_OR_0= RULE_OR | this_AND_1= RULE_AND ) ;
    public final AntlrDatatypeRuleToken ruleBinaryOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_OR_0=null;
        Token this_AND_1=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5559:6: ( (this_OR_0= RULE_OR | this_AND_1= RULE_AND ) )
            // InternalWreslEditorParser.g:5560:1: (this_OR_0= RULE_OR | this_AND_1= RULE_AND )
            {
            // InternalWreslEditorParser.g:5560:1: (this_OR_0= RULE_OR | this_AND_1= RULE_AND )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_OR) ) {
                alt156=1;
            }
            else if ( (LA156_0==RULE_AND) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalWreslEditorParser.g:5560:6: this_OR_0= RULE_OR
                    {
                    this_OR_0=(Token)match(input,RULE_OR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OR_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OR_0, grammarAccess.getBinaryOpAccess().getORTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5568:10: this_AND_1= RULE_AND
                    {
                    this_AND_1=(Token)match(input,RULE_AND,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AND_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_AND_1, grammarAccess.getBinaryOpAccess().getANDTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryOp"


    // $ANTLR start "entryRuleConditionalUnary"
    // InternalWreslEditorParser.g:5583:1: entryRuleConditionalUnary returns [EObject current=null] : iv_ruleConditionalUnary= ruleConditionalUnary EOF ;
    public final EObject entryRuleConditionalUnary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalUnary = null;


        try {
            // InternalWreslEditorParser.g:5584:2: (iv_ruleConditionalUnary= ruleConditionalUnary EOF )
            // InternalWreslEditorParser.g:5585:2: iv_ruleConditionalUnary= ruleConditionalUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalUnary=ruleConditionalUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalUnary"


    // $ANTLR start "ruleConditionalUnary"
    // InternalWreslEditorParser.g:5592:1: ruleConditionalUnary returns [EObject current=null] : ( ( ruleConditionalNegation )? this_ConditionalTerm_1= ruleConditionalTerm ) ;
    public final EObject ruleConditionalUnary() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalTerm_1 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5595:28: ( ( ( ruleConditionalNegation )? this_ConditionalTerm_1= ruleConditionalTerm ) )
            // InternalWreslEditorParser.g:5596:1: ( ( ruleConditionalNegation )? this_ConditionalTerm_1= ruleConditionalTerm )
            {
            // InternalWreslEditorParser.g:5596:1: ( ( ruleConditionalNegation )? this_ConditionalTerm_1= ruleConditionalTerm )
            // InternalWreslEditorParser.g:5596:2: ( ruleConditionalNegation )? this_ConditionalTerm_1= ruleConditionalTerm
            {
            // InternalWreslEditorParser.g:5596:2: ( ruleConditionalNegation )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_NOT) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalWreslEditorParser.g:5597:2: ruleConditionalNegation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalUnaryAccess().getConditionalNegationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_12);
                    ruleConditionalNegation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalUnaryAccess().getConditionalTermParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ConditionalTerm_1=ruleConditionalTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ConditionalTerm_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalUnary"


    // $ANTLR start "entryRuleConditionalNegation"
    // InternalWreslEditorParser.g:5627:1: entryRuleConditionalNegation returns [String current=null] : iv_ruleConditionalNegation= ruleConditionalNegation EOF ;
    public final String entryRuleConditionalNegation() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConditionalNegation = null;


        try {
            // InternalWreslEditorParser.g:5628:1: (iv_ruleConditionalNegation= ruleConditionalNegation EOF )
            // InternalWreslEditorParser.g:5629:2: iv_ruleConditionalNegation= ruleConditionalNegation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalNegationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalNegation=ruleConditionalNegation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalNegation.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalNegation"


    // $ANTLR start "ruleConditionalNegation"
    // InternalWreslEditorParser.g:5636:1: ruleConditionalNegation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_NOT_0= RULE_NOT ;
    public final AntlrDatatypeRuleToken ruleConditionalNegation() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NOT_0=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5640:6: (this_NOT_0= RULE_NOT )
            // InternalWreslEditorParser.g:5641:5: this_NOT_0= RULE_NOT
            {
            this_NOT_0=(Token)match(input,RULE_NOT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NOT_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_NOT_0, grammarAccess.getConditionalNegationAccess().getNOTTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalNegation"


    // $ANTLR start "entryRuleConditionalTerm"
    // InternalWreslEditorParser.g:5656:1: entryRuleConditionalTerm returns [EObject current=null] : iv_ruleConditionalTerm= ruleConditionalTerm EOF ;
    public final EObject entryRuleConditionalTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalTerm = null;


        try {
            // InternalWreslEditorParser.g:5657:2: (iv_ruleConditionalTerm= ruleConditionalTerm EOF )
            // InternalWreslEditorParser.g:5658:2: iv_ruleConditionalTerm= ruleConditionalTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalTerm=ruleConditionalTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalTerm"


    // $ANTLR start "ruleConditionalTerm"
    // InternalWreslEditorParser.g:5665:1: ruleConditionalTerm returns [EObject current=null] : ( ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) ) | ruleLogicalFunction | ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) ) ) ;
    public final EObject ruleConditionalTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_e1_0_0 = null;

        EObject lv_e2_2_0 = null;

        EObject this_LogicalExpression_5 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5668:28: ( ( ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) ) | ruleLogicalFunction | ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) ) ) )
            // InternalWreslEditorParser.g:5669:1: ( ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) ) | ruleLogicalFunction | ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) ) )
            {
            // InternalWreslEditorParser.g:5669:1: ( ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) ) | ruleLogicalFunction | ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) ) )
            int alt158=3;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalWreslEditorParser.g:5669:2: ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) )
                    {
                    // InternalWreslEditorParser.g:5669:2: ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) )
                    // InternalWreslEditorParser.g:5669:3: ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) )
                    {
                    // InternalWreslEditorParser.g:5669:3: ( (lv_e1_0_0= ruleExpression ) )
                    // InternalWreslEditorParser.g:5670:1: (lv_e1_0_0= ruleExpression )
                    {
                    // InternalWreslEditorParser.g:5670:1: (lv_e1_0_0= ruleExpression )
                    // InternalWreslEditorParser.g:5671:3: lv_e1_0_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalTermAccess().getE1ExpressionParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_80);
                    lv_e1_0_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalTermRule());
                      	        }
                             		set(
                             			current, 
                             			"e1",
                              		lv_e1_0_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalTermAccess().getRelationParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    ruleRelation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalWreslEditorParser.g:5698:1: ( (lv_e2_2_0= ruleExpression ) )
                    // InternalWreslEditorParser.g:5699:1: (lv_e2_2_0= ruleExpression )
                    {
                    // InternalWreslEditorParser.g:5699:1: (lv_e2_2_0= ruleExpression )
                    // InternalWreslEditorParser.g:5700:3: lv_e2_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalTermAccess().getE2ExpressionParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_e2_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalTermRule());
                      	        }
                             		set(
                             			current, 
                             			"e2",
                              		lv_e2_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5718:2: ruleLogicalFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalTermAccess().getLogicalFunctionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleLogicalFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:5729:6: ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) )
                    {
                    // InternalWreslEditorParser.g:5729:6: ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) )
                    // InternalWreslEditorParser.g:5729:7: ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis )
                    {
                    // InternalWreslEditorParser.g:5733:5: (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis )
                    // InternalWreslEditorParser.g:5734:2: otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalTermAccess().getLeftParenthesisKeyword_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalTermAccess().getLogicalExpressionParserRuleCall_2_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_LogicalExpression_5=ruleLogicalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LogicalExpression_5;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getConditionalTermAccess().getRightParenthesisKeyword_2_0_2());
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalTerm"


    // $ANTLR start "entryRuleRelation"
    // InternalWreslEditorParser.g:5763:1: entryRuleRelation returns [String current=null] : iv_ruleRelation= ruleRelation EOF ;
    public final String entryRuleRelation() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelation = null;


        try {
            // InternalWreslEditorParser.g:5764:1: (iv_ruleRelation= ruleRelation EOF )
            // InternalWreslEditorParser.g:5765:2: iv_ruleRelation= ruleRelation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelation=ruleRelation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelation.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelation"


    // $ANTLR start "ruleRelation"
    // InternalWreslEditorParser.g:5772:1: ruleRelation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= EqualsSignEqualsSign | kw= SolidusEqualsSign ) ;
    public final AntlrDatatypeRuleToken ruleRelation() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5776:6: ( (kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= EqualsSignEqualsSign | kw= SolidusEqualsSign ) )
            // InternalWreslEditorParser.g:5777:1: (kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= EqualsSignEqualsSign | kw= SolidusEqualsSign )
            {
            // InternalWreslEditorParser.g:5777:1: (kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= EqualsSignEqualsSign | kw= SolidusEqualsSign )
            int alt159=6;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt159=1;
                }
                break;
            case LessThanSign:
                {
                alt159=2;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt159=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt159=4;
                }
                break;
            case EqualsSignEqualsSign:
                {
                alt159=5;
                }
                break;
            case SolidusEqualsSign:
                {
                alt159=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }

            switch (alt159) {
                case 1 :
                    // InternalWreslEditorParser.g:5778:2: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationAccess().getGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:5785:2: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationAccess().getLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:5792:2: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationAccess().getGreaterThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:5799:2: kw= LessThanSignEqualsSign
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationAccess().getLessThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:5806:2: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationAccess().getEqualsSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:5813:2: kw= SolidusEqualsSign
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationAccess().getSolidusEqualsSignKeyword_5()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelation"


    // $ANTLR start "entryRuleExpression"
    // InternalWreslEditorParser.g:5826:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalWreslEditorParser.g:5827:2: (iv_ruleExpression= ruleExpression EOF )
            // InternalWreslEditorParser.g:5828:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalWreslEditorParser.g:5835:1: ruleExpression returns [EObject current=null] : this_Add_0= ruleAdd ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Add_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5838:28: (this_Add_0= ruleAdd )
            // InternalWreslEditorParser.g:5840:2: this_Add_0= ruleAdd
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAddParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Add_0=ruleAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Add_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleAdd"
    // InternalWreslEditorParser.g:5859:1: entryRuleAdd returns [EObject current=null] : iv_ruleAdd= ruleAdd EOF ;
    public final EObject entryRuleAdd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdd = null;


        try {
            // InternalWreslEditorParser.g:5860:2: (iv_ruleAdd= ruleAdd EOF )
            // InternalWreslEditorParser.g:5861:2: iv_ruleAdd= ruleAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdd=ruleAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdd"


    // $ANTLR start "ruleAdd"
    // InternalWreslEditorParser.g:5868:1: ruleAdd returns [EObject current=null] : ( ( (lv_m1_0_0= ruleMultiply ) ) ( (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) ) )* ) ;
    public final EObject ruleAdd() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_m1_0_0 = null;

        EObject lv_m2_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5871:28: ( ( ( (lv_m1_0_0= ruleMultiply ) ) ( (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) ) )* ) )
            // InternalWreslEditorParser.g:5872:1: ( ( (lv_m1_0_0= ruleMultiply ) ) ( (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) ) )* )
            {
            // InternalWreslEditorParser.g:5872:1: ( ( (lv_m1_0_0= ruleMultiply ) ) ( (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) ) )* )
            // InternalWreslEditorParser.g:5872:2: ( (lv_m1_0_0= ruleMultiply ) ) ( (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) ) )*
            {
            // InternalWreslEditorParser.g:5872:2: ( (lv_m1_0_0= ruleMultiply ) )
            // InternalWreslEditorParser.g:5873:1: (lv_m1_0_0= ruleMultiply )
            {
            // InternalWreslEditorParser.g:5873:1: (lv_m1_0_0= ruleMultiply )
            // InternalWreslEditorParser.g:5874:3: lv_m1_0_0= ruleMultiply
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAddAccess().getM1MultiplyParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_81);
            lv_m1_0_0=ruleMultiply();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAddRule());
              	        }
                     		set(
                     			current, 
                     			"m1",
                      		lv_m1_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Multiply");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:5890:2: ( (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) ) )*
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( (LA161_0==PlusSign||LA161_0==HyphenMinus) ) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalWreslEditorParser.g:5890:3: (otherlv_1= PlusSign | otherlv_2= HyphenMinus ) ( (lv_m2_3_0= ruleMultiply ) )
            	    {
            	    // InternalWreslEditorParser.g:5890:3: (otherlv_1= PlusSign | otherlv_2= HyphenMinus )
            	    int alt160=2;
            	    int LA160_0 = input.LA(1);

            	    if ( (LA160_0==PlusSign) ) {
            	        alt160=1;
            	    }
            	    else if ( (LA160_0==HyphenMinus) ) {
            	        alt160=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 160, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt160) {
            	        case 1 :
            	            // InternalWreslEditorParser.g:5891:2: otherlv_1= PlusSign
            	            {
            	            otherlv_1=(Token)match(input,PlusSign,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_1, grammarAccess.getAddAccess().getPlusSignKeyword_1_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalWreslEditorParser.g:5897:2: otherlv_2= HyphenMinus
            	            {
            	            otherlv_2=(Token)match(input,HyphenMinus,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getAddAccess().getHyphenMinusKeyword_1_0_1());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalWreslEditorParser.g:5901:2: ( (lv_m2_3_0= ruleMultiply ) )
            	    // InternalWreslEditorParser.g:5902:1: (lv_m2_3_0= ruleMultiply )
            	    {
            	    // InternalWreslEditorParser.g:5902:1: (lv_m2_3_0= ruleMultiply )
            	    // InternalWreslEditorParser.g:5903:3: lv_m2_3_0= ruleMultiply
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAddAccess().getM2MultiplyParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_m2_3_0=ruleMultiply();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAddRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"m2",
            	              		lv_m2_3_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Multiply");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop161;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdd"


    // $ANTLR start "entryRuleMultiply"
    // InternalWreslEditorParser.g:5927:1: entryRuleMultiply returns [EObject current=null] : iv_ruleMultiply= ruleMultiply EOF ;
    public final EObject entryRuleMultiply() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiply = null;


        try {
            // InternalWreslEditorParser.g:5928:2: (iv_ruleMultiply= ruleMultiply EOF )
            // InternalWreslEditorParser.g:5929:2: iv_ruleMultiply= ruleMultiply EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiply=ruleMultiply();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiply; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiply"


    // $ANTLR start "ruleMultiply"
    // InternalWreslEditorParser.g:5936:1: ruleMultiply returns [EObject current=null] : ( ( (lv_u1_0_0= ruleUnary ) ) ( (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) ) )* ) ;
    public final EObject ruleMultiply() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_u1_0_0 = null;

        EObject lv_u2_3_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:5939:28: ( ( ( (lv_u1_0_0= ruleUnary ) ) ( (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) ) )* ) )
            // InternalWreslEditorParser.g:5940:1: ( ( (lv_u1_0_0= ruleUnary ) ) ( (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) ) )* )
            {
            // InternalWreslEditorParser.g:5940:1: ( ( (lv_u1_0_0= ruleUnary ) ) ( (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) ) )* )
            // InternalWreslEditorParser.g:5940:2: ( (lv_u1_0_0= ruleUnary ) ) ( (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) ) )*
            {
            // InternalWreslEditorParser.g:5940:2: ( (lv_u1_0_0= ruleUnary ) )
            // InternalWreslEditorParser.g:5941:1: (lv_u1_0_0= ruleUnary )
            {
            // InternalWreslEditorParser.g:5941:1: (lv_u1_0_0= ruleUnary )
            // InternalWreslEditorParser.g:5942:3: lv_u1_0_0= ruleUnary
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMultiplyAccess().getU1UnaryParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_82);
            lv_u1_0_0=ruleUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMultiplyRule());
              	        }
                     		set(
                     			current, 
                     			"u1",
                      		lv_u1_0_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Unary");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:5958:2: ( (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==Asterisk||LA163_0==Solidus) ) {
                    alt163=1;
                }


                switch (alt163) {
            	case 1 :
            	    // InternalWreslEditorParser.g:5958:3: (otherlv_1= Asterisk | otherlv_2= Solidus ) ( (lv_u2_3_0= ruleUnary ) )
            	    {
            	    // InternalWreslEditorParser.g:5958:3: (otherlv_1= Asterisk | otherlv_2= Solidus )
            	    int alt162=2;
            	    int LA162_0 = input.LA(1);

            	    if ( (LA162_0==Asterisk) ) {
            	        alt162=1;
            	    }
            	    else if ( (LA162_0==Solidus) ) {
            	        alt162=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 162, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt162) {
            	        case 1 :
            	            // InternalWreslEditorParser.g:5959:2: otherlv_1= Asterisk
            	            {
            	            otherlv_1=(Token)match(input,Asterisk,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_1, grammarAccess.getMultiplyAccess().getAsteriskKeyword_1_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalWreslEditorParser.g:5965:2: otherlv_2= Solidus
            	            {
            	            otherlv_2=(Token)match(input,Solidus,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getMultiplyAccess().getSolidusKeyword_1_0_1());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // InternalWreslEditorParser.g:5969:2: ( (lv_u2_3_0= ruleUnary ) )
            	    // InternalWreslEditorParser.g:5970:1: (lv_u2_3_0= ruleUnary )
            	    {
            	    // InternalWreslEditorParser.g:5970:1: (lv_u2_3_0= ruleUnary )
            	    // InternalWreslEditorParser.g:5971:3: lv_u2_3_0= ruleUnary
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplyAccess().getU2UnaryParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_82);
            	    lv_u2_3_0=ruleUnary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"u2",
            	              		lv_u2_3_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Unary");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiply"


    // $ANTLR start "entryRuleUnary"
    // InternalWreslEditorParser.g:5995:1: entryRuleUnary returns [EObject current=null] : iv_ruleUnary= ruleUnary EOF ;
    public final EObject entryRuleUnary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnary = null;


        try {
            // InternalWreslEditorParser.g:5996:2: (iv_ruleUnary= ruleUnary EOF )
            // InternalWreslEditorParser.g:5997:2: iv_ruleUnary= ruleUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnary=ruleUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnary"


    // $ANTLR start "ruleUnary"
    // InternalWreslEditorParser.g:6004:1: ruleUnary returns [EObject current=null] : ( (otherlv_0= PlusSign | ruleNegation )? this_Term_2= ruleTerm ) ;
    public final EObject ruleUnary() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Term_2 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6007:28: ( ( (otherlv_0= PlusSign | ruleNegation )? this_Term_2= ruleTerm ) )
            // InternalWreslEditorParser.g:6008:1: ( (otherlv_0= PlusSign | ruleNegation )? this_Term_2= ruleTerm )
            {
            // InternalWreslEditorParser.g:6008:1: ( (otherlv_0= PlusSign | ruleNegation )? this_Term_2= ruleTerm )
            // InternalWreslEditorParser.g:6008:2: (otherlv_0= PlusSign | ruleNegation )? this_Term_2= ruleTerm
            {
            // InternalWreslEditorParser.g:6008:2: (otherlv_0= PlusSign | ruleNegation )?
            int alt164=3;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==PlusSign) ) {
                alt164=1;
            }
            else if ( (LA164_0==HyphenMinus) ) {
                alt164=2;
            }
            switch (alt164) {
                case 1 :
                    // InternalWreslEditorParser.g:6009:2: otherlv_0= PlusSign
                    {
                    otherlv_0=(Token)match(input,PlusSign,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getUnaryAccess().getPlusSignKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6015:2: ruleNegation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryAccess().getNegationParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    ruleNegation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getUnaryAccess().getTermParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Term_2=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Term_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnary"


    // $ANTLR start "entryRuleNegation"
    // InternalWreslEditorParser.g:6045:1: entryRuleNegation returns [String current=null] : iv_ruleNegation= ruleNegation EOF ;
    public final String entryRuleNegation() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNegation = null;


        try {
            // InternalWreslEditorParser.g:6046:1: (iv_ruleNegation= ruleNegation EOF )
            // InternalWreslEditorParser.g:6047:2: iv_ruleNegation= ruleNegation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNegation=ruleNegation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegation.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegation"


    // $ANTLR start "ruleNegation"
    // InternalWreslEditorParser.g:6054:1: ruleNegation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= HyphenMinus ;
    public final AntlrDatatypeRuleToken ruleNegation() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6058:6: (kw= HyphenMinus )
            // InternalWreslEditorParser.g:6060:2: kw= HyphenMinus
            {
            kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getNegationAccess().getHyphenMinusKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegation"


    // $ANTLR start "entryRuleTerm"
    // InternalWreslEditorParser.g:6073:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalWreslEditorParser.g:6074:2: (iv_ruleTerm= ruleTerm EOF )
            // InternalWreslEditorParser.g:6075:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalWreslEditorParser.g:6082:1: ruleTerm returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) | ( (lv_n_1_0= ruleNumber ) ) | ( (lv_f_2_0= ruleFunction ) ) | (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) | ( (lv_s_6_0= ruleSpecialIdent ) ) | ruleMultiStep ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_n_1_0 = null;

        EObject lv_f_2_0 = null;

        EObject lv_e_4_0 = null;

        AntlrDatatypeRuleToken lv_s_6_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6085:28: ( ( ( (otherlv_0= RULE_ID ) ) | ( (lv_n_1_0= ruleNumber ) ) | ( (lv_f_2_0= ruleFunction ) ) | (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) | ( (lv_s_6_0= ruleSpecialIdent ) ) | ruleMultiStep ) )
            // InternalWreslEditorParser.g:6086:1: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_n_1_0= ruleNumber ) ) | ( (lv_f_2_0= ruleFunction ) ) | (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) | ( (lv_s_6_0= ruleSpecialIdent ) ) | ruleMultiStep )
            {
            // InternalWreslEditorParser.g:6086:1: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_n_1_0= ruleNumber ) ) | ( (lv_f_2_0= ruleFunction ) ) | (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) | ( (lv_s_6_0= ruleSpecialIdent ) ) | ruleMultiStep )
            int alt165=6;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // InternalWreslEditorParser.g:6086:2: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalWreslEditorParser.g:6086:2: ( (otherlv_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:6087:1: (otherlv_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:6087:1: (otherlv_0= RULE_ID )
                    // InternalWreslEditorParser.g:6088:3: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getTermRule());
                      	        }
                              
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_0, grammarAccess.getTermAccess().getRefDeclarationCrossReference_0_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6103:6: ( (lv_n_1_0= ruleNumber ) )
                    {
                    // InternalWreslEditorParser.g:6103:6: ( (lv_n_1_0= ruleNumber ) )
                    // InternalWreslEditorParser.g:6104:1: (lv_n_1_0= ruleNumber )
                    {
                    // InternalWreslEditorParser.g:6104:1: (lv_n_1_0= ruleNumber )
                    // InternalWreslEditorParser.g:6105:3: lv_n_1_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTermAccess().getNNumberParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_n_1_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTermRule());
                      	        }
                             		set(
                             			current, 
                             			"n",
                              		lv_n_1_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Number");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:6122:6: ( (lv_f_2_0= ruleFunction ) )
                    {
                    // InternalWreslEditorParser.g:6122:6: ( (lv_f_2_0= ruleFunction ) )
                    // InternalWreslEditorParser.g:6123:1: (lv_f_2_0= ruleFunction )
                    {
                    // InternalWreslEditorParser.g:6123:1: (lv_f_2_0= ruleFunction )
                    // InternalWreslEditorParser.g:6124:3: lv_f_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTermAccess().getFFunctionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_f_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTermRule());
                      	        }
                             		set(
                             			current, 
                             			"f",
                              		lv_f_2_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Function");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:6141:6: (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis )
                    {
                    // InternalWreslEditorParser.g:6141:6: (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis )
                    // InternalWreslEditorParser.g:6142:2: otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis
                    {
                    otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTermAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    // InternalWreslEditorParser.g:6146:1: ( (lv_e_4_0= ruleExpression ) )
                    // InternalWreslEditorParser.g:6147:1: (lv_e_4_0= ruleExpression )
                    {
                    // InternalWreslEditorParser.g:6147:1: (lv_e_4_0= ruleExpression )
                    // InternalWreslEditorParser.g:6148:3: lv_e_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTermAccess().getEExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_e_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTermRule());
                      	        }
                             		set(
                             			current, 
                             			"e",
                              		lv_e_4_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTermAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:6170:6: ( (lv_s_6_0= ruleSpecialIdent ) )
                    {
                    // InternalWreslEditorParser.g:6170:6: ( (lv_s_6_0= ruleSpecialIdent ) )
                    // InternalWreslEditorParser.g:6171:1: (lv_s_6_0= ruleSpecialIdent )
                    {
                    // InternalWreslEditorParser.g:6171:1: (lv_s_6_0= ruleSpecialIdent )
                    // InternalWreslEditorParser.g:6172:3: lv_s_6_0= ruleSpecialIdent
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTermAccess().getSSpecialIdentParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_s_6_0=ruleSpecialIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTermRule());
                      	        }
                             		set(
                             			current, 
                             			"s",
                              		lv_s_6_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.SpecialIdent");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:6190:2: ruleMultiStep
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTermAccess().getMultiStepParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleMultiStep();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFunction"
    // InternalWreslEditorParser.g:6208:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalWreslEditorParser.g:6209:2: (iv_ruleFunction= ruleFunction EOF )
            // InternalWreslEditorParser.g:6210:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalWreslEditorParser.g:6217:1: ruleFunction returns [EObject current=null] : (this_ExternalFunction1_0= ruleExternalFunction1 | this_ExternalFunction2_1= ruleExternalFunction2 | this_MaxFunction_2= ruleMaxFunction | this_MinFunction_3= ruleMinFunction | (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis ) | this_ModFunction_7= ruleModFunction | this_IntFunction_8= ruleIntFunction | this_AbsFunction_9= ruleAbsFunction | this_RoundFunction_10= ruleRoundFunction | this_PowFunction_11= rulePowFunction | this_LogFunction_12= ruleLogFunction | this_SinFunction_13= ruleSinFunction | this_CosFunction_14= ruleCosFunction | this_TanFunction_15= ruleTanFunction | this_CotFunction_16= ruleCotFunction | this_AsinFunction_17= ruleAsinFunction | this_AcosFunction_18= ruleAcosFunction | this_AtanFunction_19= ruleAtanFunction | this_AcotFunction_20= ruleAcotFunction | this_VarModel_21= ruleVarModel | this_VarModelStep_22= ruleVarModelStep | this_VarModelIndex_23= ruleVarModelIndex | this_VarModelIndexStep_24= ruleVarModelIndexStep ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ExternalFunction1_0 = null;

        EObject this_ExternalFunction2_1 = null;

        EObject this_MaxFunction_2 = null;

        EObject this_MinFunction_3 = null;

        EObject this_SumContent_5 = null;

        EObject this_ModFunction_7 = null;

        EObject this_IntFunction_8 = null;

        EObject this_AbsFunction_9 = null;

        EObject this_RoundFunction_10 = null;

        EObject this_PowFunction_11 = null;

        EObject this_LogFunction_12 = null;

        EObject this_SinFunction_13 = null;

        EObject this_CosFunction_14 = null;

        EObject this_TanFunction_15 = null;

        EObject this_CotFunction_16 = null;

        EObject this_AsinFunction_17 = null;

        EObject this_AcosFunction_18 = null;

        EObject this_AtanFunction_19 = null;

        EObject this_AcotFunction_20 = null;

        EObject this_VarModel_21 = null;

        EObject this_VarModelStep_22 = null;

        EObject this_VarModelIndex_23 = null;

        EObject this_VarModelIndexStep_24 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6220:28: ( (this_ExternalFunction1_0= ruleExternalFunction1 | this_ExternalFunction2_1= ruleExternalFunction2 | this_MaxFunction_2= ruleMaxFunction | this_MinFunction_3= ruleMinFunction | (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis ) | this_ModFunction_7= ruleModFunction | this_IntFunction_8= ruleIntFunction | this_AbsFunction_9= ruleAbsFunction | this_RoundFunction_10= ruleRoundFunction | this_PowFunction_11= rulePowFunction | this_LogFunction_12= ruleLogFunction | this_SinFunction_13= ruleSinFunction | this_CosFunction_14= ruleCosFunction | this_TanFunction_15= ruleTanFunction | this_CotFunction_16= ruleCotFunction | this_AsinFunction_17= ruleAsinFunction | this_AcosFunction_18= ruleAcosFunction | this_AtanFunction_19= ruleAtanFunction | this_AcotFunction_20= ruleAcotFunction | this_VarModel_21= ruleVarModel | this_VarModelStep_22= ruleVarModelStep | this_VarModelIndex_23= ruleVarModelIndex | this_VarModelIndexStep_24= ruleVarModelIndexStep ) )
            // InternalWreslEditorParser.g:6221:1: (this_ExternalFunction1_0= ruleExternalFunction1 | this_ExternalFunction2_1= ruleExternalFunction2 | this_MaxFunction_2= ruleMaxFunction | this_MinFunction_3= ruleMinFunction | (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis ) | this_ModFunction_7= ruleModFunction | this_IntFunction_8= ruleIntFunction | this_AbsFunction_9= ruleAbsFunction | this_RoundFunction_10= ruleRoundFunction | this_PowFunction_11= rulePowFunction | this_LogFunction_12= ruleLogFunction | this_SinFunction_13= ruleSinFunction | this_CosFunction_14= ruleCosFunction | this_TanFunction_15= ruleTanFunction | this_CotFunction_16= ruleCotFunction | this_AsinFunction_17= ruleAsinFunction | this_AcosFunction_18= ruleAcosFunction | this_AtanFunction_19= ruleAtanFunction | this_AcotFunction_20= ruleAcotFunction | this_VarModel_21= ruleVarModel | this_VarModelStep_22= ruleVarModelStep | this_VarModelIndex_23= ruleVarModelIndex | this_VarModelIndexStep_24= ruleVarModelIndexStep )
            {
            // InternalWreslEditorParser.g:6221:1: (this_ExternalFunction1_0= ruleExternalFunction1 | this_ExternalFunction2_1= ruleExternalFunction2 | this_MaxFunction_2= ruleMaxFunction | this_MinFunction_3= ruleMinFunction | (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis ) | this_ModFunction_7= ruleModFunction | this_IntFunction_8= ruleIntFunction | this_AbsFunction_9= ruleAbsFunction | this_RoundFunction_10= ruleRoundFunction | this_PowFunction_11= rulePowFunction | this_LogFunction_12= ruleLogFunction | this_SinFunction_13= ruleSinFunction | this_CosFunction_14= ruleCosFunction | this_TanFunction_15= ruleTanFunction | this_CotFunction_16= ruleCotFunction | this_AsinFunction_17= ruleAsinFunction | this_AcosFunction_18= ruleAcosFunction | this_AtanFunction_19= ruleAtanFunction | this_AcotFunction_20= ruleAcotFunction | this_VarModel_21= ruleVarModel | this_VarModelStep_22= ruleVarModelStep | this_VarModelIndex_23= ruleVarModelIndex | this_VarModelIndexStep_24= ruleVarModelIndexStep )
            int alt166=23;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // InternalWreslEditorParser.g:6222:2: this_ExternalFunction1_0= ruleExternalFunction1
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getExternalFunction1ParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExternalFunction1_0=ruleExternalFunction1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExternalFunction1_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6235:2: this_ExternalFunction2_1= ruleExternalFunction2
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getExternalFunction2ParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExternalFunction2_1=ruleExternalFunction2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExternalFunction2_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:6248:2: this_MaxFunction_2= ruleMaxFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getMaxFunctionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_MaxFunction_2=ruleMaxFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MaxFunction_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:6261:2: this_MinFunction_3= ruleMinFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getMinFunctionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_MinFunction_3=ruleMinFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MinFunction_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:6273:6: (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis )
                    {
                    // InternalWreslEditorParser.g:6273:6: (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis )
                    // InternalWreslEditorParser.g:6274:2: otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getSumContentParserRuleCall_4_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_SumContent_5=ruleSumContent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SumContent_5;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:6297:2: this_ModFunction_7= ruleModFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getModFunctionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ModFunction_7=ruleModFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ModFunction_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalWreslEditorParser.g:6310:2: this_IntFunction_8= ruleIntFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getIntFunctionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntFunction_8=ruleIntFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntFunction_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalWreslEditorParser.g:6323:2: this_AbsFunction_9= ruleAbsFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getAbsFunctionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AbsFunction_9=ruleAbsFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AbsFunction_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalWreslEditorParser.g:6336:2: this_RoundFunction_10= ruleRoundFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getRoundFunctionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RoundFunction_10=ruleRoundFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RoundFunction_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalWreslEditorParser.g:6349:2: this_PowFunction_11= rulePowFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getPowFunctionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PowFunction_11=rulePowFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PowFunction_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalWreslEditorParser.g:6362:2: this_LogFunction_12= ruleLogFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getLogFunctionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LogFunction_12=ruleLogFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LogFunction_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalWreslEditorParser.g:6375:2: this_SinFunction_13= ruleSinFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getSinFunctionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SinFunction_13=ruleSinFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SinFunction_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalWreslEditorParser.g:6388:2: this_CosFunction_14= ruleCosFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getCosFunctionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CosFunction_14=ruleCosFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CosFunction_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // InternalWreslEditorParser.g:6401:2: this_TanFunction_15= ruleTanFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getTanFunctionParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TanFunction_15=ruleTanFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TanFunction_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // InternalWreslEditorParser.g:6414:2: this_CotFunction_16= ruleCotFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getCotFunctionParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CotFunction_16=ruleCotFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CotFunction_16;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    // InternalWreslEditorParser.g:6427:2: this_AsinFunction_17= ruleAsinFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getAsinFunctionParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsinFunction_17=ruleAsinFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsinFunction_17;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 17 :
                    // InternalWreslEditorParser.g:6440:2: this_AcosFunction_18= ruleAcosFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getAcosFunctionParserRuleCall_16()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AcosFunction_18=ruleAcosFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AcosFunction_18;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 18 :
                    // InternalWreslEditorParser.g:6453:2: this_AtanFunction_19= ruleAtanFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getAtanFunctionParserRuleCall_17()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AtanFunction_19=ruleAtanFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AtanFunction_19;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 19 :
                    // InternalWreslEditorParser.g:6466:2: this_AcotFunction_20= ruleAcotFunction
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getAcotFunctionParserRuleCall_18()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AcotFunction_20=ruleAcotFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AcotFunction_20;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 20 :
                    // InternalWreslEditorParser.g:6479:2: this_VarModel_21= ruleVarModel
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getVarModelParserRuleCall_19()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VarModel_21=ruleVarModel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VarModel_21;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 21 :
                    // InternalWreslEditorParser.g:6492:2: this_VarModelStep_22= ruleVarModelStep
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getVarModelStepParserRuleCall_20()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VarModelStep_22=ruleVarModelStep();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VarModelStep_22;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 22 :
                    // InternalWreslEditorParser.g:6505:2: this_VarModelIndex_23= ruleVarModelIndex
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getVarModelIndexParserRuleCall_21()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VarModelIndex_23=ruleVarModelIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VarModelIndex_23;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 23 :
                    // InternalWreslEditorParser.g:6518:2: this_VarModelIndexStep_24= ruleVarModelIndexStep
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionAccess().getVarModelIndexStepParserRuleCall_22()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VarModelIndexStep_24=ruleVarModelIndexStep();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VarModelIndexStep_24;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleExternalFunction1"
    // InternalWreslEditorParser.g:6537:1: entryRuleExternalFunction1 returns [EObject current=null] : iv_ruleExternalFunction1= ruleExternalFunction1 EOF ;
    public final EObject entryRuleExternalFunction1() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalFunction1 = null;


        try {
            // InternalWreslEditorParser.g:6538:2: (iv_ruleExternalFunction1= ruleExternalFunction1 EOF )
            // InternalWreslEditorParser.g:6539:2: iv_ruleExternalFunction1= ruleExternalFunction1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalFunction1Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternalFunction1=ruleExternalFunction1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalFunction1; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalFunction1"


    // $ANTLR start "ruleExternalFunction1"
    // InternalWreslEditorParser.g:6546:1: ruleExternalFunction1 returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis ( ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) ) ) (otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) ) )* otherlv_7= RightParenthesis (otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis )? ) ;
    public final EObject ruleExternalFunction1() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_e1_4_1 = null;

        EObject lv_e1_4_2 = null;

        EObject lv_e2_6_1 = null;

        EObject lv_e2_6_2 = null;

        EObject lv_e0_9_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6549:28: ( ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis ( ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) ) ) (otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) ) )* otherlv_7= RightParenthesis (otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis )? ) )
            // InternalWreslEditorParser.g:6550:1: ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis ( ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) ) ) (otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) ) )* otherlv_7= RightParenthesis (otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis )? )
            {
            // InternalWreslEditorParser.g:6550:1: ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis ( ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) ) ) (otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) ) )* otherlv_7= RightParenthesis (otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis )? )
            // InternalWreslEditorParser.g:6550:2: ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis ( ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) ) ) (otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) ) )* otherlv_7= RightParenthesis (otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis )?
            {
            // InternalWreslEditorParser.g:6550:2: ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth )
            int alt167=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt167=1;
                }
                break;
            case Cfs_taf:
            case Taf_cfs:
            case Af_cfs:
            case Cfs_af:
                {
                alt167=2;
                }
                break;
            case Month:
                {
                alt167=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }

            switch (alt167) {
                case 1 :
                    // InternalWreslEditorParser.g:6550:3: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalWreslEditorParser.g:6550:3: ( (otherlv_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:6551:1: (otherlv_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:6551:1: (otherlv_0= RULE_ID )
                    // InternalWreslEditorParser.g:6552:3: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getExternalFunction1Rule());
                      	        }
                              
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_0, grammarAccess.getExternalFunction1Access().getRefDeclarationCrossReference_0_0_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6568:2: ruleTafCfs
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExternalFunction1Access().getTafCfsParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_47);
                    ruleTafCfs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:6580:2: ruleMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExternalFunction1Access().getMonthParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_47);
                    ruleMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getExternalFunction1Access().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:6595:1: ( ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) ) )
            // InternalWreslEditorParser.g:6596:1: ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) )
            {
            // InternalWreslEditorParser.g:6596:1: ( (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray ) )
            // InternalWreslEditorParser.g:6597:1: (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray )
            {
            // InternalWreslEditorParser.g:6597:1: (lv_e1_4_1= ruleExpression | lv_e1_4_2= ruleTrunkTimeArray )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=Daysintimestep && LA168_0<=Daysinmonth)||LA168_0==Wateryear||LA168_0==Cfs_taf||(LA168_0>=Prevapr && LA168_0<=Daysin)||LA168_0==Month||(LA168_0>=Apr && LA168_0<=Jun)||(LA168_0>=Mar && LA168_0<=Oct)||LA168_0==Sep||LA168_0==M||LA168_0==LeftParenthesis||LA168_0==PlusSign||LA168_0==HyphenMinus||LA168_0==I||(LA168_0>=RULE_MIN && LA168_0<=RULE_FLOAT)) ) {
                alt168=1;
            }
            else if ( (LA168_0==RULE_ID) ) {
                int LA168_2 = input.LA(2);

                if ( (LA168_2==LeftParenthesis) ) {
                    switch ( input.LA(3) ) {
                    case RULE_INT:
                        {
                        int LA168_4 = input.LA(4);

                        if ( (LA168_4==Colon) ) {
                            alt168=2;
                        }
                        else if ( ((LA168_4>=RightParenthesis && LA168_4<=Solidus)) ) {
                            alt168=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 168, 4, input);

                            throw nvae;
                        }
                        }
                        break;
                    case HyphenMinus:
                        {
                        int LA168_5 = input.LA(4);

                        if ( (LA168_5==RULE_INT) ) {
                            int LA168_8 = input.LA(5);

                            if ( (LA168_8==Colon) ) {
                                alt168=2;
                            }
                            else if ( ((LA168_8>=RightParenthesis && LA168_8<=Solidus)) ) {
                                alt168=1;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 168, 8, input);

                                throw nvae;
                            }
                        }
                        else if ( ((LA168_5>=Daysintimestep && LA168_5<=Daysinmonth)||LA168_5==Wateryear||LA168_5==Cfs_taf||(LA168_5>=Prevapr && LA168_5<=Daysin)||LA168_5==Month||(LA168_5>=Apr && LA168_5<=Jun)||(LA168_5>=Mar && LA168_5<=Oct)||LA168_5==Sep||LA168_5==M||LA168_5==LeftParenthesis||LA168_5==I||(LA168_5>=RULE_MIN && LA168_5<=RULE_ACOT)||LA168_5==RULE_FLOAT||LA168_5==RULE_ID) ) {
                            alt168=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 168, 5, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_ID:
                        {
                        int LA168_6 = input.LA(4);

                        if ( ((LA168_6>=LeftParenthesis && LA168_6<=Solidus)||LA168_6==LeftSquareBracket) ) {
                            alt168=1;
                        }
                        else if ( (LA168_6==Colon) ) {
                            alt168=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 168, 6, input);

                            throw nvae;
                        }
                        }
                        break;
                    case Daysintimestep:
                    case Daysinmonth:
                    case Wateryear:
                    case Cfs_taf:
                    case Prevapr:
                    case Prevaug:
                    case Prevdec:
                    case Prevfeb:
                    case Prevjan:
                    case Prevjul:
                    case Prevjun:
                    case Prevmar:
                    case Prevmay:
                    case Prevnov:
                    case Prevoct:
                    case Prevsep:
                    case Taf_cfs:
                    case Af_cfs:
                    case Cfs_af:
                    case Daysin:
                    case Month:
                    case Apr:
                    case Aug:
                    case Day:
                    case Dec:
                    case Feb:
                    case Jan:
                    case Jul:
                    case Jun:
                    case Mar:
                    case May:
                    case Nov:
                    case Oct:
                    case Sep:
                    case M:
                    case LeftParenthesis:
                    case RightParenthesis:
                    case PlusSign:
                    case I:
                    case RULE_MIN:
                    case RULE_MAX:
                    case RULE_MOD:
                    case RULE_INTFUNC:
                    case RULE_ABS:
                    case RULE_ROUND:
                    case RULE_POW:
                    case RULE_LOG:
                    case RULE_SIN:
                    case RULE_COS:
                    case RULE_TAN:
                    case RULE_COT:
                    case RULE_ASIN:
                    case RULE_ACOS:
                    case RULE_ATAN:
                    case RULE_ACOT:
                    case RULE_FLOAT:
                        {
                        alt168=1;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 168, 3, input);

                        throw nvae;
                    }

                }
                else if ( ((LA168_2>=RightParenthesis && LA168_2<=Solidus)||LA168_2==LeftSquareBracket) ) {
                    alt168=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 168, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalWreslEditorParser.g:6598:3: lv_e1_4_1= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExternalFunction1Access().getE1ExpressionParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_49);
                    lv_e1_4_1=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExternalFunction1Rule());
                      	        }
                             		set(
                             			current, 
                             			"e1",
                              		lv_e1_4_1, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6613:8: lv_e1_4_2= ruleTrunkTimeArray
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExternalFunction1Access().getE1TrunkTimeArrayParserRuleCall_2_0_1()); 
                      	    
                    }
                    pushFollow(FOLLOW_49);
                    lv_e1_4_2=ruleTrunkTimeArray();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExternalFunction1Rule());
                      	        }
                             		set(
                             			current, 
                             			"e1",
                              		lv_e1_4_2, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TrunkTimeArray");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }
                    break;

            }


            }


            }

            // InternalWreslEditorParser.g:6631:2: (otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) ) )*
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==Comma) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // InternalWreslEditorParser.g:6632:2: otherlv_5= Comma ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getExternalFunction1Access().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalWreslEditorParser.g:6636:1: ( ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) ) )
            	    // InternalWreslEditorParser.g:6637:1: ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) )
            	    {
            	    // InternalWreslEditorParser.g:6637:1: ( (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray ) )
            	    // InternalWreslEditorParser.g:6638:1: (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray )
            	    {
            	    // InternalWreslEditorParser.g:6638:1: (lv_e2_6_1= ruleExpression | lv_e2_6_2= ruleTrunkTimeArray )
            	    int alt169=2;
            	    int LA169_0 = input.LA(1);

            	    if ( ((LA169_0>=Daysintimestep && LA169_0<=Daysinmonth)||LA169_0==Wateryear||LA169_0==Cfs_taf||(LA169_0>=Prevapr && LA169_0<=Daysin)||LA169_0==Month||(LA169_0>=Apr && LA169_0<=Jun)||(LA169_0>=Mar && LA169_0<=Oct)||LA169_0==Sep||LA169_0==M||LA169_0==LeftParenthesis||LA169_0==PlusSign||LA169_0==HyphenMinus||LA169_0==I||(LA169_0>=RULE_MIN && LA169_0<=RULE_FLOAT)) ) {
            	        alt169=1;
            	    }
            	    else if ( (LA169_0==RULE_ID) ) {
            	        int LA169_2 = input.LA(2);

            	        if ( ((LA169_2>=RightParenthesis && LA169_2<=Solidus)||LA169_2==LeftSquareBracket) ) {
            	            alt169=1;
            	        }
            	        else if ( (LA169_2==LeftParenthesis) ) {
            	            switch ( input.LA(3) ) {
            	            case Daysintimestep:
            	            case Daysinmonth:
            	            case Wateryear:
            	            case Cfs_taf:
            	            case Prevapr:
            	            case Prevaug:
            	            case Prevdec:
            	            case Prevfeb:
            	            case Prevjan:
            	            case Prevjul:
            	            case Prevjun:
            	            case Prevmar:
            	            case Prevmay:
            	            case Prevnov:
            	            case Prevoct:
            	            case Prevsep:
            	            case Taf_cfs:
            	            case Af_cfs:
            	            case Cfs_af:
            	            case Daysin:
            	            case Month:
            	            case Apr:
            	            case Aug:
            	            case Day:
            	            case Dec:
            	            case Feb:
            	            case Jan:
            	            case Jul:
            	            case Jun:
            	            case Mar:
            	            case May:
            	            case Nov:
            	            case Oct:
            	            case Sep:
            	            case M:
            	            case LeftParenthesis:
            	            case RightParenthesis:
            	            case PlusSign:
            	            case I:
            	            case RULE_MIN:
            	            case RULE_MAX:
            	            case RULE_MOD:
            	            case RULE_INTFUNC:
            	            case RULE_ABS:
            	            case RULE_ROUND:
            	            case RULE_POW:
            	            case RULE_LOG:
            	            case RULE_SIN:
            	            case RULE_COS:
            	            case RULE_TAN:
            	            case RULE_COT:
            	            case RULE_ASIN:
            	            case RULE_ACOS:
            	            case RULE_ATAN:
            	            case RULE_ACOT:
            	            case RULE_FLOAT:
            	                {
            	                alt169=1;
            	                }
            	                break;
            	            case RULE_INT:
            	                {
            	                int LA169_4 = input.LA(4);

            	                if ( (LA169_4==Colon) ) {
            	                    alt169=2;
            	                }
            	                else if ( ((LA169_4>=RightParenthesis && LA169_4<=Solidus)) ) {
            	                    alt169=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 169, 4, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case HyphenMinus:
            	                {
            	                int LA169_5 = input.LA(4);

            	                if ( (LA169_5==RULE_INT) ) {
            	                    int LA169_8 = input.LA(5);

            	                    if ( ((LA169_8>=RightParenthesis && LA169_8<=Solidus)) ) {
            	                        alt169=1;
            	                    }
            	                    else if ( (LA169_8==Colon) ) {
            	                        alt169=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 169, 8, input);

            	                        throw nvae;
            	                    }
            	                }
            	                else if ( ((LA169_5>=Daysintimestep && LA169_5<=Daysinmonth)||LA169_5==Wateryear||LA169_5==Cfs_taf||(LA169_5>=Prevapr && LA169_5<=Daysin)||LA169_5==Month||(LA169_5>=Apr && LA169_5<=Jun)||(LA169_5>=Mar && LA169_5<=Oct)||LA169_5==Sep||LA169_5==M||LA169_5==LeftParenthesis||LA169_5==I||(LA169_5>=RULE_MIN && LA169_5<=RULE_ACOT)||LA169_5==RULE_FLOAT||LA169_5==RULE_ID) ) {
            	                    alt169=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 169, 5, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case RULE_ID:
            	                {
            	                int LA169_6 = input.LA(4);

            	                if ( ((LA169_6>=LeftParenthesis && LA169_6<=Solidus)||LA169_6==LeftSquareBracket) ) {
            	                    alt169=1;
            	                }
            	                else if ( (LA169_6==Colon) ) {
            	                    alt169=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 169, 6, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 169, 3, input);

            	                throw nvae;
            	            }

            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 169, 2, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 169, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt169) {
            	        case 1 :
            	            // InternalWreslEditorParser.g:6639:3: lv_e2_6_1= ruleExpression
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getExternalFunction1Access().getE2ExpressionParserRuleCall_3_1_0_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_49);
            	            lv_e2_6_1=ruleExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getExternalFunction1Rule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"e2",
            	                      		lv_e2_6_1, 
            	                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalWreslEditorParser.g:6654:8: lv_e2_6_2= ruleTrunkTimeArray
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getExternalFunction1Access().getE2TrunkTimeArrayParserRuleCall_3_1_0_1()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_49);
            	            lv_e2_6_2=ruleTrunkTimeArray();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getExternalFunction1Rule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"e2",
            	                      		lv_e2_6_2, 
            	                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TrunkTimeArray");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);

            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getExternalFunction1Access().getRightParenthesisKeyword_4());
                  
            }
            // InternalWreslEditorParser.g:6677:1: (otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==LeftParenthesis) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalWreslEditorParser.g:6678:2: otherlv_8= LeftParenthesis ( (lv_e0_9_0= ruleExpression ) ) otherlv_10= RightParenthesis
                    {
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getExternalFunction1Access().getLeftParenthesisKeyword_5_0());
                          
                    }
                    // InternalWreslEditorParser.g:6682:1: ( (lv_e0_9_0= ruleExpression ) )
                    // InternalWreslEditorParser.g:6683:1: (lv_e0_9_0= ruleExpression )
                    {
                    // InternalWreslEditorParser.g:6683:1: (lv_e0_9_0= ruleExpression )
                    // InternalWreslEditorParser.g:6684:3: lv_e0_9_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExternalFunction1Access().getE0ExpressionParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_e0_9_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExternalFunction1Rule());
                      	        }
                             		set(
                             			current, 
                             			"e0",
                              		lv_e0_9_0, 
                              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getExternalFunction1Access().getRightParenthesisKeyword_5_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalFunction1"


    // $ANTLR start "entryRuleExternalFunction2"
    // InternalWreslEditorParser.g:6713:1: entryRuleExternalFunction2 returns [EObject current=null] : iv_ruleExternalFunction2= ruleExternalFunction2 EOF ;
    public final EObject entryRuleExternalFunction2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalFunction2 = null;


        try {
            // InternalWreslEditorParser.g:6714:2: (iv_ruleExternalFunction2= ruleExternalFunction2 EOF )
            // InternalWreslEditorParser.g:6715:2: iv_ruleExternalFunction2= ruleExternalFunction2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalFunction2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternalFunction2=ruleExternalFunction2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalFunction2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalFunction2"


    // $ANTLR start "ruleExternalFunction2"
    // InternalWreslEditorParser.g:6722:1: ruleExternalFunction2 returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis otherlv_4= RightParenthesis ) ;
    public final EObject ruleExternalFunction2() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6725:28: ( ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis otherlv_4= RightParenthesis ) )
            // InternalWreslEditorParser.g:6726:1: ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis otherlv_4= RightParenthesis )
            {
            // InternalWreslEditorParser.g:6726:1: ( ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis otherlv_4= RightParenthesis )
            // InternalWreslEditorParser.g:6726:2: ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth ) otherlv_3= LeftParenthesis otherlv_4= RightParenthesis
            {
            // InternalWreslEditorParser.g:6726:2: ( ( (otherlv_0= RULE_ID ) ) | ruleTafCfs | ruleMonth )
            int alt172=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt172=1;
                }
                break;
            case Cfs_taf:
            case Taf_cfs:
            case Af_cfs:
            case Cfs_af:
                {
                alt172=2;
                }
                break;
            case Month:
                {
                alt172=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }

            switch (alt172) {
                case 1 :
                    // InternalWreslEditorParser.g:6726:3: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalWreslEditorParser.g:6726:3: ( (otherlv_0= RULE_ID ) )
                    // InternalWreslEditorParser.g:6727:1: (otherlv_0= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:6727:1: (otherlv_0= RULE_ID )
                    // InternalWreslEditorParser.g:6728:3: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getExternalFunction2Rule());
                      	        }
                              
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_0, grammarAccess.getExternalFunction2Access().getRefDeclarationCrossReference_0_0_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6744:2: ruleTafCfs
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExternalFunction2Access().getTafCfsParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_47);
                    ruleTafCfs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:6756:2: ruleMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExternalFunction2Access().getMonthParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_47);
                    ruleMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getExternalFunction2Access().getLeftParenthesisKeyword_1());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getExternalFunction2Access().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalFunction2"


    // $ANTLR start "entryRuleTrunkTimeArray"
    // InternalWreslEditorParser.g:6784:1: entryRuleTrunkTimeArray returns [EObject current=null] : iv_ruleTrunkTimeArray= ruleTrunkTimeArray EOF ;
    public final EObject entryRuleTrunkTimeArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrunkTimeArray = null;


        try {
            // InternalWreslEditorParser.g:6785:2: (iv_ruleTrunkTimeArray= ruleTrunkTimeArray EOF )
            // InternalWreslEditorParser.g:6786:2: iv_ruleTrunkTimeArray= ruleTrunkTimeArray EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrunkTimeArrayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTrunkTimeArray=ruleTrunkTimeArray();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrunkTimeArray; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrunkTimeArray"


    // $ANTLR start "ruleTrunkTimeArray"
    // InternalWreslEditorParser.g:6793:1: ruleTrunkTimeArray returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftParenthesis ( (lv_t1_2_0= ruleTrunkTimeArrayIndex ) ) otherlv_3= Colon ( (lv_t2_4_0= ruleTrunkTimeArrayIndex ) ) otherlv_5= RightParenthesis ) ;
    public final EObject ruleTrunkTimeArray() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_t1_2_0 = null;

        EObject lv_t2_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6796:28: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftParenthesis ( (lv_t1_2_0= ruleTrunkTimeArrayIndex ) ) otherlv_3= Colon ( (lv_t2_4_0= ruleTrunkTimeArrayIndex ) ) otherlv_5= RightParenthesis ) )
            // InternalWreslEditorParser.g:6797:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftParenthesis ( (lv_t1_2_0= ruleTrunkTimeArrayIndex ) ) otherlv_3= Colon ( (lv_t2_4_0= ruleTrunkTimeArrayIndex ) ) otherlv_5= RightParenthesis )
            {
            // InternalWreslEditorParser.g:6797:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftParenthesis ( (lv_t1_2_0= ruleTrunkTimeArrayIndex ) ) otherlv_3= Colon ( (lv_t2_4_0= ruleTrunkTimeArrayIndex ) ) otherlv_5= RightParenthesis )
            // InternalWreslEditorParser.g:6797:2: ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftParenthesis ( (lv_t1_2_0= ruleTrunkTimeArrayIndex ) ) otherlv_3= Colon ( (lv_t2_4_0= ruleTrunkTimeArrayIndex ) ) otherlv_5= RightParenthesis
            {
            // InternalWreslEditorParser.g:6797:2: ( (otherlv_0= RULE_ID ) )
            // InternalWreslEditorParser.g:6798:1: (otherlv_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:6798:1: (otherlv_0= RULE_ID )
            // InternalWreslEditorParser.g:6799:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getTrunkTimeArrayRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getTrunkTimeArrayAccess().getRefDeclarationCrossReference_0_0()); 
              	
            }

            }


            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTrunkTimeArrayAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:6818:1: ( (lv_t1_2_0= ruleTrunkTimeArrayIndex ) )
            // InternalWreslEditorParser.g:6819:1: (lv_t1_2_0= ruleTrunkTimeArrayIndex )
            {
            // InternalWreslEditorParser.g:6819:1: (lv_t1_2_0= ruleTrunkTimeArrayIndex )
            // InternalWreslEditorParser.g:6820:3: lv_t1_2_0= ruleTrunkTimeArrayIndex
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTrunkTimeArrayAccess().getT1TrunkTimeArrayIndexParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_86);
            lv_t1_2_0=ruleTrunkTimeArrayIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTrunkTimeArrayRule());
              	        }
                     		set(
                     			current, 
                     			"t1",
                      		lv_t1_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TrunkTimeArrayIndex");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTrunkTimeArrayAccess().getColonKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:6841:1: ( (lv_t2_4_0= ruleTrunkTimeArrayIndex ) )
            // InternalWreslEditorParser.g:6842:1: (lv_t2_4_0= ruleTrunkTimeArrayIndex )
            {
            // InternalWreslEditorParser.g:6842:1: (lv_t2_4_0= ruleTrunkTimeArrayIndex )
            // InternalWreslEditorParser.g:6843:3: lv_t2_4_0= ruleTrunkTimeArrayIndex
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTrunkTimeArrayAccess().getT2TrunkTimeArrayIndexParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_t2_4_0=ruleTrunkTimeArrayIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTrunkTimeArrayRule());
              	        }
                     		set(
                     			current, 
                     			"t2",
                      		lv_t2_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.TrunkTimeArrayIndex");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTrunkTimeArrayAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrunkTimeArray"


    // $ANTLR start "entryRuleTrunkTimeArrayIndex"
    // InternalWreslEditorParser.g:6872:1: entryRuleTrunkTimeArrayIndex returns [EObject current=null] : iv_ruleTrunkTimeArrayIndex= ruleTrunkTimeArrayIndex EOF ;
    public final EObject entryRuleTrunkTimeArrayIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrunkTimeArrayIndex = null;


        try {
            // InternalWreslEditorParser.g:6873:2: (iv_ruleTrunkTimeArrayIndex= ruleTrunkTimeArrayIndex EOF )
            // InternalWreslEditorParser.g:6874:2: iv_ruleTrunkTimeArrayIndex= ruleTrunkTimeArrayIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTrunkTimeArrayIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTrunkTimeArrayIndex=ruleTrunkTimeArrayIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrunkTimeArrayIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrunkTimeArrayIndex"


    // $ANTLR start "ruleTrunkTimeArrayIndex"
    // InternalWreslEditorParser.g:6881:1: ruleTrunkTimeArrayIndex returns [EObject current=null] : (this_INT_0= RULE_INT | (otherlv_1= HyphenMinus this_INT_2= RULE_INT ) | ( (otherlv_3= RULE_ID ) ) ) ;
    public final EObject ruleTrunkTimeArrayIndex() throws RecognitionException {
        EObject current = null;

        Token this_INT_0=null;
        Token otherlv_1=null;
        Token this_INT_2=null;
        Token otherlv_3=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6884:28: ( (this_INT_0= RULE_INT | (otherlv_1= HyphenMinus this_INT_2= RULE_INT ) | ( (otherlv_3= RULE_ID ) ) ) )
            // InternalWreslEditorParser.g:6885:1: (this_INT_0= RULE_INT | (otherlv_1= HyphenMinus this_INT_2= RULE_INT ) | ( (otherlv_3= RULE_ID ) ) )
            {
            // InternalWreslEditorParser.g:6885:1: (this_INT_0= RULE_INT | (otherlv_1= HyphenMinus this_INT_2= RULE_INT ) | ( (otherlv_3= RULE_ID ) ) )
            int alt173=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt173=1;
                }
                break;
            case HyphenMinus:
                {
                alt173=2;
                }
                break;
            case RULE_ID:
                {
                alt173=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }

            switch (alt173) {
                case 1 :
                    // InternalWreslEditorParser.g:6885:2: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_0, grammarAccess.getTrunkTimeArrayIndexAccess().getINTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:6890:6: (otherlv_1= HyphenMinus this_INT_2= RULE_INT )
                    {
                    // InternalWreslEditorParser.g:6890:6: (otherlv_1= HyphenMinus this_INT_2= RULE_INT )
                    // InternalWreslEditorParser.g:6891:2: otherlv_1= HyphenMinus this_INT_2= RULE_INT
                    {
                    otherlv_1=(Token)match(input,HyphenMinus,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTrunkTimeArrayIndexAccess().getHyphenMinusKeyword_1_0());
                          
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_2, grammarAccess.getTrunkTimeArrayIndexAccess().getINTTerminalRuleCall_1_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:6900:6: ( (otherlv_3= RULE_ID ) )
                    {
                    // InternalWreslEditorParser.g:6900:6: ( (otherlv_3= RULE_ID ) )
                    // InternalWreslEditorParser.g:6901:1: (otherlv_3= RULE_ID )
                    {
                    // InternalWreslEditorParser.g:6901:1: (otherlv_3= RULE_ID )
                    // InternalWreslEditorParser.g:6902:3: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       
                      		  /* */ 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getTrunkTimeArrayIndexRule());
                      	        }
                              
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_3, grammarAccess.getTrunkTimeArrayIndexAccess().getRefDeclarationCrossReference_2_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrunkTimeArrayIndex"


    // $ANTLR start "entryRuleMaxFunction"
    // InternalWreslEditorParser.g:6924:1: entryRuleMaxFunction returns [EObject current=null] : iv_ruleMaxFunction= ruleMaxFunction EOF ;
    public final EObject entryRuleMaxFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMaxFunction = null;


        try {
            // InternalWreslEditorParser.g:6925:2: (iv_ruleMaxFunction= ruleMaxFunction EOF )
            // InternalWreslEditorParser.g:6926:2: iv_ruleMaxFunction= ruleMaxFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMaxFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMaxFunction=ruleMaxFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMaxFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMaxFunction"


    // $ANTLR start "ruleMaxFunction"
    // InternalWreslEditorParser.g:6933:1: ruleMaxFunction returns [EObject current=null] : (this_MAX_0= RULE_MAX otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis ) ;
    public final EObject ruleMaxFunction() throws RecognitionException {
        EObject current = null;

        Token this_MAX_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_e1_2_0 = null;

        EObject lv_e2_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:6936:28: ( (this_MAX_0= RULE_MAX otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis ) )
            // InternalWreslEditorParser.g:6937:1: (this_MAX_0= RULE_MAX otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis )
            {
            // InternalWreslEditorParser.g:6937:1: (this_MAX_0= RULE_MAX otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis )
            // InternalWreslEditorParser.g:6937:2: this_MAX_0= RULE_MAX otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis
            {
            this_MAX_0=(Token)match(input,RULE_MAX,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_MAX_0, grammarAccess.getMaxFunctionAccess().getMAXTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMaxFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:6946:1: ( (lv_e1_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:6947:1: (lv_e1_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:6947:1: (lv_e1_2_0= ruleExpression )
            // InternalWreslEditorParser.g:6948:3: lv_e1_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMaxFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_49);
            lv_e1_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMaxFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e1",
                      		lv_e1_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:6964:2: (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==Comma) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalWreslEditorParser.g:6965:2: otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) )
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getMaxFunctionAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalWreslEditorParser.g:6969:1: ( (lv_e2_4_0= ruleExpression ) )
            	    // InternalWreslEditorParser.g:6970:1: (lv_e2_4_0= ruleExpression )
            	    {
            	    // InternalWreslEditorParser.g:6970:1: (lv_e2_4_0= ruleExpression )
            	    // InternalWreslEditorParser.g:6971:3: lv_e2_4_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMaxFunctionAccess().getE2ExpressionParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_e2_4_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMaxFunctionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"e2",
            	              		lv_e2_4_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMaxFunctionAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMaxFunction"


    // $ANTLR start "entryRuleMinFunction"
    // InternalWreslEditorParser.g:7000:1: entryRuleMinFunction returns [EObject current=null] : iv_ruleMinFunction= ruleMinFunction EOF ;
    public final EObject entryRuleMinFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMinFunction = null;


        try {
            // InternalWreslEditorParser.g:7001:2: (iv_ruleMinFunction= ruleMinFunction EOF )
            // InternalWreslEditorParser.g:7002:2: iv_ruleMinFunction= ruleMinFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMinFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMinFunction=ruleMinFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMinFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMinFunction"


    // $ANTLR start "ruleMinFunction"
    // InternalWreslEditorParser.g:7009:1: ruleMinFunction returns [EObject current=null] : (this_MIN_0= RULE_MIN otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis ) ;
    public final EObject ruleMinFunction() throws RecognitionException {
        EObject current = null;

        Token this_MIN_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_e1_2_0 = null;

        EObject lv_e2_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7012:28: ( (this_MIN_0= RULE_MIN otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis ) )
            // InternalWreslEditorParser.g:7013:1: (this_MIN_0= RULE_MIN otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7013:1: (this_MIN_0= RULE_MIN otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis )
            // InternalWreslEditorParser.g:7013:2: this_MIN_0= RULE_MIN otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )* otherlv_5= RightParenthesis
            {
            this_MIN_0=(Token)match(input,RULE_MIN,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_MIN_0, grammarAccess.getMinFunctionAccess().getMINTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMinFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7022:1: ( (lv_e1_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7023:1: (lv_e1_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7023:1: (lv_e1_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7024:3: lv_e1_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMinFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_49);
            lv_e1_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMinFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e1",
                      		lv_e1_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalWreslEditorParser.g:7040:2: (otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==Comma) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalWreslEditorParser.g:7041:2: otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) )
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getMinFunctionAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalWreslEditorParser.g:7045:1: ( (lv_e2_4_0= ruleExpression ) )
            	    // InternalWreslEditorParser.g:7046:1: (lv_e2_4_0= ruleExpression )
            	    {
            	    // InternalWreslEditorParser.g:7046:1: (lv_e2_4_0= ruleExpression )
            	    // InternalWreslEditorParser.g:7047:3: lv_e2_4_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMinFunctionAccess().getE2ExpressionParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_e2_4_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMinFunctionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"e2",
            	              		lv_e2_4_0, 
            	              		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMinFunctionAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMinFunction"


    // $ANTLR start "entryRuleModFunction"
    // InternalWreslEditorParser.g:7076:1: entryRuleModFunction returns [EObject current=null] : iv_ruleModFunction= ruleModFunction EOF ;
    public final EObject entryRuleModFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModFunction = null;


        try {
            // InternalWreslEditorParser.g:7077:2: (iv_ruleModFunction= ruleModFunction EOF )
            // InternalWreslEditorParser.g:7078:2: iv_ruleModFunction= ruleModFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModFunction=ruleModFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModFunction"


    // $ANTLR start "ruleModFunction"
    // InternalWreslEditorParser.g:7085:1: ruleModFunction returns [EObject current=null] : (this_MOD_0= RULE_MOD otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) ;
    public final EObject ruleModFunction() throws RecognitionException {
        EObject current = null;

        Token this_MOD_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_e1_2_0 = null;

        EObject lv_e2_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7088:28: ( (this_MOD_0= RULE_MOD otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) )
            // InternalWreslEditorParser.g:7089:1: (this_MOD_0= RULE_MOD otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7089:1: (this_MOD_0= RULE_MOD otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis )
            // InternalWreslEditorParser.g:7089:2: this_MOD_0= RULE_MOD otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis
            {
            this_MOD_0=(Token)match(input,RULE_MOD,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_MOD_0, grammarAccess.getModFunctionAccess().getMODTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getModFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7098:1: ( (lv_e1_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7099:1: (lv_e1_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7099:1: (lv_e1_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7100:3: lv_e1_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getModFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_24);
            lv_e1_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getModFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e1",
                      		lv_e1_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getModFunctionAccess().getCommaKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:7121:1: ( (lv_e2_4_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7122:1: (lv_e2_4_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7122:1: (lv_e2_4_0= ruleExpression )
            // InternalWreslEditorParser.g:7123:3: lv_e2_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getModFunctionAccess().getE2ExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e2_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getModFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e2",
                      		lv_e2_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getModFunctionAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModFunction"


    // $ANTLR start "entryRuleIntFunction"
    // InternalWreslEditorParser.g:7152:1: entryRuleIntFunction returns [EObject current=null] : iv_ruleIntFunction= ruleIntFunction EOF ;
    public final EObject entryRuleIntFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntFunction = null;


        try {
            // InternalWreslEditorParser.g:7153:2: (iv_ruleIntFunction= ruleIntFunction EOF )
            // InternalWreslEditorParser.g:7154:2: iv_ruleIntFunction= ruleIntFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntFunction=ruleIntFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntFunction"


    // $ANTLR start "ruleIntFunction"
    // InternalWreslEditorParser.g:7161:1: ruleIntFunction returns [EObject current=null] : (this_INTFUNC_0= RULE_INTFUNC otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleIntFunction() throws RecognitionException {
        EObject current = null;

        Token this_INTFUNC_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7164:28: ( (this_INTFUNC_0= RULE_INTFUNC otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7165:1: (this_INTFUNC_0= RULE_INTFUNC otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7165:1: (this_INTFUNC_0= RULE_INTFUNC otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7165:2: this_INTFUNC_0= RULE_INTFUNC otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_INTFUNC_0=(Token)match(input,RULE_INTFUNC,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INTFUNC_0, grammarAccess.getIntFunctionAccess().getINTFUNCTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIntFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7174:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7175:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7175:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7176:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIntFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIntFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIntFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntFunction"


    // $ANTLR start "entryRuleAbsFunction"
    // InternalWreslEditorParser.g:7205:1: entryRuleAbsFunction returns [EObject current=null] : iv_ruleAbsFunction= ruleAbsFunction EOF ;
    public final EObject entryRuleAbsFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbsFunction = null;


        try {
            // InternalWreslEditorParser.g:7206:2: (iv_ruleAbsFunction= ruleAbsFunction EOF )
            // InternalWreslEditorParser.g:7207:2: iv_ruleAbsFunction= ruleAbsFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbsFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbsFunction=ruleAbsFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbsFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbsFunction"


    // $ANTLR start "ruleAbsFunction"
    // InternalWreslEditorParser.g:7214:1: ruleAbsFunction returns [EObject current=null] : (this_ABS_0= RULE_ABS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleAbsFunction() throws RecognitionException {
        EObject current = null;

        Token this_ABS_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7217:28: ( (this_ABS_0= RULE_ABS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7218:1: (this_ABS_0= RULE_ABS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7218:1: (this_ABS_0= RULE_ABS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7218:2: this_ABS_0= RULE_ABS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_ABS_0=(Token)match(input,RULE_ABS,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ABS_0, grammarAccess.getAbsFunctionAccess().getABSTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAbsFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7227:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7228:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7228:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7229:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAbsFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAbsFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAbsFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbsFunction"


    // $ANTLR start "entryRuleRoundFunction"
    // InternalWreslEditorParser.g:7258:1: entryRuleRoundFunction returns [EObject current=null] : iv_ruleRoundFunction= ruleRoundFunction EOF ;
    public final EObject entryRuleRoundFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoundFunction = null;


        try {
            // InternalWreslEditorParser.g:7259:2: (iv_ruleRoundFunction= ruleRoundFunction EOF )
            // InternalWreslEditorParser.g:7260:2: iv_ruleRoundFunction= ruleRoundFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoundFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRoundFunction=ruleRoundFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoundFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoundFunction"


    // $ANTLR start "ruleRoundFunction"
    // InternalWreslEditorParser.g:7267:1: ruleRoundFunction returns [EObject current=null] : (this_ROUND_0= RULE_ROUND otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleRoundFunction() throws RecognitionException {
        EObject current = null;

        Token this_ROUND_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7270:28: ( (this_ROUND_0= RULE_ROUND otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7271:1: (this_ROUND_0= RULE_ROUND otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7271:1: (this_ROUND_0= RULE_ROUND otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7271:2: this_ROUND_0= RULE_ROUND otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_ROUND_0=(Token)match(input,RULE_ROUND,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ROUND_0, grammarAccess.getRoundFunctionAccess().getROUNDTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRoundFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7280:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7281:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7281:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7282:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoundFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoundFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getRoundFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoundFunction"


    // $ANTLR start "entryRulePowFunction"
    // InternalWreslEditorParser.g:7311:1: entryRulePowFunction returns [EObject current=null] : iv_rulePowFunction= rulePowFunction EOF ;
    public final EObject entryRulePowFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePowFunction = null;


        try {
            // InternalWreslEditorParser.g:7312:2: (iv_rulePowFunction= rulePowFunction EOF )
            // InternalWreslEditorParser.g:7313:2: iv_rulePowFunction= rulePowFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePowFunction=rulePowFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePowFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePowFunction"


    // $ANTLR start "rulePowFunction"
    // InternalWreslEditorParser.g:7320:1: rulePowFunction returns [EObject current=null] : (this_POW_0= RULE_POW otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) ;
    public final EObject rulePowFunction() throws RecognitionException {
        EObject current = null;

        Token this_POW_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_e1_2_0 = null;

        EObject lv_e2_4_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7323:28: ( (this_POW_0= RULE_POW otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) )
            // InternalWreslEditorParser.g:7324:1: (this_POW_0= RULE_POW otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7324:1: (this_POW_0= RULE_POW otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis )
            // InternalWreslEditorParser.g:7324:2: this_POW_0= RULE_POW otherlv_1= LeftParenthesis ( (lv_e1_2_0= ruleExpression ) ) otherlv_3= Comma ( (lv_e2_4_0= ruleExpression ) ) otherlv_5= RightParenthesis
            {
            this_POW_0=(Token)match(input,RULE_POW,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_POW_0, grammarAccess.getPowFunctionAccess().getPOWTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPowFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7333:1: ( (lv_e1_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7334:1: (lv_e1_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7334:1: (lv_e1_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7335:3: lv_e1_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPowFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_24);
            lv_e1_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPowFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e1",
                      		lv_e1_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPowFunctionAccess().getCommaKeyword_3());
                  
            }
            // InternalWreslEditorParser.g:7356:1: ( (lv_e2_4_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7357:1: (lv_e2_4_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7357:1: (lv_e2_4_0= ruleExpression )
            // InternalWreslEditorParser.g:7358:3: lv_e2_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPowFunctionAccess().getE2ExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e2_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPowFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e2",
                      		lv_e2_4_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPowFunctionAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePowFunction"


    // $ANTLR start "entryRuleLogFunction"
    // InternalWreslEditorParser.g:7387:1: entryRuleLogFunction returns [EObject current=null] : iv_ruleLogFunction= ruleLogFunction EOF ;
    public final EObject entryRuleLogFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogFunction = null;


        try {
            // InternalWreslEditorParser.g:7388:2: (iv_ruleLogFunction= ruleLogFunction EOF )
            // InternalWreslEditorParser.g:7389:2: iv_ruleLogFunction= ruleLogFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogFunction=ruleLogFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogFunction"


    // $ANTLR start "ruleLogFunction"
    // InternalWreslEditorParser.g:7396:1: ruleLogFunction returns [EObject current=null] : (this_LOG_0= RULE_LOG otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleLogFunction() throws RecognitionException {
        EObject current = null;

        Token this_LOG_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7399:28: ( (this_LOG_0= RULE_LOG otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7400:1: (this_LOG_0= RULE_LOG otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7400:1: (this_LOG_0= RULE_LOG otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7400:2: this_LOG_0= RULE_LOG otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_LOG_0=(Token)match(input,RULE_LOG,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_LOG_0, grammarAccess.getLogFunctionAccess().getLOGTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLogFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7409:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7410:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7410:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7411:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLogFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLogFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getLogFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogFunction"


    // $ANTLR start "entryRuleSinFunction"
    // InternalWreslEditorParser.g:7440:1: entryRuleSinFunction returns [EObject current=null] : iv_ruleSinFunction= ruleSinFunction EOF ;
    public final EObject entryRuleSinFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSinFunction = null;


        try {
            // InternalWreslEditorParser.g:7441:2: (iv_ruleSinFunction= ruleSinFunction EOF )
            // InternalWreslEditorParser.g:7442:2: iv_ruleSinFunction= ruleSinFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSinFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSinFunction=ruleSinFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSinFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSinFunction"


    // $ANTLR start "ruleSinFunction"
    // InternalWreslEditorParser.g:7449:1: ruleSinFunction returns [EObject current=null] : (this_SIN_0= RULE_SIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleSinFunction() throws RecognitionException {
        EObject current = null;

        Token this_SIN_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7452:28: ( (this_SIN_0= RULE_SIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7453:1: (this_SIN_0= RULE_SIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7453:1: (this_SIN_0= RULE_SIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7453:2: this_SIN_0= RULE_SIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_SIN_0=(Token)match(input,RULE_SIN,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_SIN_0, grammarAccess.getSinFunctionAccess().getSINTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSinFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7462:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7463:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7463:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7464:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSinFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSinFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSinFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSinFunction"


    // $ANTLR start "entryRuleCosFunction"
    // InternalWreslEditorParser.g:7493:1: entryRuleCosFunction returns [EObject current=null] : iv_ruleCosFunction= ruleCosFunction EOF ;
    public final EObject entryRuleCosFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCosFunction = null;


        try {
            // InternalWreslEditorParser.g:7494:2: (iv_ruleCosFunction= ruleCosFunction EOF )
            // InternalWreslEditorParser.g:7495:2: iv_ruleCosFunction= ruleCosFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCosFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCosFunction=ruleCosFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCosFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCosFunction"


    // $ANTLR start "ruleCosFunction"
    // InternalWreslEditorParser.g:7502:1: ruleCosFunction returns [EObject current=null] : (this_COS_0= RULE_COS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleCosFunction() throws RecognitionException {
        EObject current = null;

        Token this_COS_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7505:28: ( (this_COS_0= RULE_COS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7506:1: (this_COS_0= RULE_COS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7506:1: (this_COS_0= RULE_COS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7506:2: this_COS_0= RULE_COS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_COS_0=(Token)match(input,RULE_COS,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COS_0, grammarAccess.getCosFunctionAccess().getCOSTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCosFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7515:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7516:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7516:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7517:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCosFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCosFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getCosFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCosFunction"


    // $ANTLR start "entryRuleTanFunction"
    // InternalWreslEditorParser.g:7546:1: entryRuleTanFunction returns [EObject current=null] : iv_ruleTanFunction= ruleTanFunction EOF ;
    public final EObject entryRuleTanFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTanFunction = null;


        try {
            // InternalWreslEditorParser.g:7547:2: (iv_ruleTanFunction= ruleTanFunction EOF )
            // InternalWreslEditorParser.g:7548:2: iv_ruleTanFunction= ruleTanFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTanFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTanFunction=ruleTanFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTanFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTanFunction"


    // $ANTLR start "ruleTanFunction"
    // InternalWreslEditorParser.g:7555:1: ruleTanFunction returns [EObject current=null] : (this_TAN_0= RULE_TAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleTanFunction() throws RecognitionException {
        EObject current = null;

        Token this_TAN_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7558:28: ( (this_TAN_0= RULE_TAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7559:1: (this_TAN_0= RULE_TAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7559:1: (this_TAN_0= RULE_TAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7559:2: this_TAN_0= RULE_TAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_TAN_0=(Token)match(input,RULE_TAN,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_TAN_0, grammarAccess.getTanFunctionAccess().getTANTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTanFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7568:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7569:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7569:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7570:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTanFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTanFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTanFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTanFunction"


    // $ANTLR start "entryRuleCotFunction"
    // InternalWreslEditorParser.g:7599:1: entryRuleCotFunction returns [EObject current=null] : iv_ruleCotFunction= ruleCotFunction EOF ;
    public final EObject entryRuleCotFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCotFunction = null;


        try {
            // InternalWreslEditorParser.g:7600:2: (iv_ruleCotFunction= ruleCotFunction EOF )
            // InternalWreslEditorParser.g:7601:2: iv_ruleCotFunction= ruleCotFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCotFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCotFunction=ruleCotFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCotFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCotFunction"


    // $ANTLR start "ruleCotFunction"
    // InternalWreslEditorParser.g:7608:1: ruleCotFunction returns [EObject current=null] : (this_COT_0= RULE_COT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleCotFunction() throws RecognitionException {
        EObject current = null;

        Token this_COT_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7611:28: ( (this_COT_0= RULE_COT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7612:1: (this_COT_0= RULE_COT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7612:1: (this_COT_0= RULE_COT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7612:2: this_COT_0= RULE_COT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_COT_0=(Token)match(input,RULE_COT,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_COT_0, grammarAccess.getCotFunctionAccess().getCOTTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCotFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7621:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7622:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7622:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7623:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCotFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCotFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getCotFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCotFunction"


    // $ANTLR start "entryRuleAsinFunction"
    // InternalWreslEditorParser.g:7652:1: entryRuleAsinFunction returns [EObject current=null] : iv_ruleAsinFunction= ruleAsinFunction EOF ;
    public final EObject entryRuleAsinFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsinFunction = null;


        try {
            // InternalWreslEditorParser.g:7653:2: (iv_ruleAsinFunction= ruleAsinFunction EOF )
            // InternalWreslEditorParser.g:7654:2: iv_ruleAsinFunction= ruleAsinFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAsinFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAsinFunction=ruleAsinFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAsinFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAsinFunction"


    // $ANTLR start "ruleAsinFunction"
    // InternalWreslEditorParser.g:7661:1: ruleAsinFunction returns [EObject current=null] : (this_ASIN_0= RULE_ASIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleAsinFunction() throws RecognitionException {
        EObject current = null;

        Token this_ASIN_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7664:28: ( (this_ASIN_0= RULE_ASIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7665:1: (this_ASIN_0= RULE_ASIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7665:1: (this_ASIN_0= RULE_ASIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7665:2: this_ASIN_0= RULE_ASIN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_ASIN_0=(Token)match(input,RULE_ASIN,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ASIN_0, grammarAccess.getAsinFunctionAccess().getASINTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAsinFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7674:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7675:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7675:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7676:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAsinFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAsinFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAsinFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAsinFunction"


    // $ANTLR start "entryRuleAcosFunction"
    // InternalWreslEditorParser.g:7705:1: entryRuleAcosFunction returns [EObject current=null] : iv_ruleAcosFunction= ruleAcosFunction EOF ;
    public final EObject entryRuleAcosFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAcosFunction = null;


        try {
            // InternalWreslEditorParser.g:7706:2: (iv_ruleAcosFunction= ruleAcosFunction EOF )
            // InternalWreslEditorParser.g:7707:2: iv_ruleAcosFunction= ruleAcosFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAcosFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAcosFunction=ruleAcosFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAcosFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAcosFunction"


    // $ANTLR start "ruleAcosFunction"
    // InternalWreslEditorParser.g:7714:1: ruleAcosFunction returns [EObject current=null] : (this_ACOS_0= RULE_ACOS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleAcosFunction() throws RecognitionException {
        EObject current = null;

        Token this_ACOS_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7717:28: ( (this_ACOS_0= RULE_ACOS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7718:1: (this_ACOS_0= RULE_ACOS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7718:1: (this_ACOS_0= RULE_ACOS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7718:2: this_ACOS_0= RULE_ACOS otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_ACOS_0=(Token)match(input,RULE_ACOS,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ACOS_0, grammarAccess.getAcosFunctionAccess().getACOSTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAcosFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7727:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7728:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7728:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7729:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAcosFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAcosFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAcosFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAcosFunction"


    // $ANTLR start "entryRuleAtanFunction"
    // InternalWreslEditorParser.g:7758:1: entryRuleAtanFunction returns [EObject current=null] : iv_ruleAtanFunction= ruleAtanFunction EOF ;
    public final EObject entryRuleAtanFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtanFunction = null;


        try {
            // InternalWreslEditorParser.g:7759:2: (iv_ruleAtanFunction= ruleAtanFunction EOF )
            // InternalWreslEditorParser.g:7760:2: iv_ruleAtanFunction= ruleAtanFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtanFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAtanFunction=ruleAtanFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtanFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtanFunction"


    // $ANTLR start "ruleAtanFunction"
    // InternalWreslEditorParser.g:7767:1: ruleAtanFunction returns [EObject current=null] : (this_ATAN_0= RULE_ATAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleAtanFunction() throws RecognitionException {
        EObject current = null;

        Token this_ATAN_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7770:28: ( (this_ATAN_0= RULE_ATAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7771:1: (this_ATAN_0= RULE_ATAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7771:1: (this_ATAN_0= RULE_ATAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7771:2: this_ATAN_0= RULE_ATAN otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_ATAN_0=(Token)match(input,RULE_ATAN,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ATAN_0, grammarAccess.getAtanFunctionAccess().getATANTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAtanFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7780:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7781:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7781:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7782:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAtanFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAtanFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAtanFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtanFunction"


    // $ANTLR start "entryRuleAcotFunction"
    // InternalWreslEditorParser.g:7811:1: entryRuleAcotFunction returns [EObject current=null] : iv_ruleAcotFunction= ruleAcotFunction EOF ;
    public final EObject entryRuleAcotFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAcotFunction = null;


        try {
            // InternalWreslEditorParser.g:7812:2: (iv_ruleAcotFunction= ruleAcotFunction EOF )
            // InternalWreslEditorParser.g:7813:2: iv_ruleAcotFunction= ruleAcotFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAcotFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAcotFunction=ruleAcotFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAcotFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAcotFunction"


    // $ANTLR start "ruleAcotFunction"
    // InternalWreslEditorParser.g:7820:1: ruleAcotFunction returns [EObject current=null] : (this_ACOT_0= RULE_ACOT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) ;
    public final EObject ruleAcotFunction() throws RecognitionException {
        EObject current = null;

        Token this_ACOT_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_e_2_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7823:28: ( (this_ACOT_0= RULE_ACOT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis ) )
            // InternalWreslEditorParser.g:7824:1: (this_ACOT_0= RULE_ACOT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7824:1: (this_ACOT_0= RULE_ACOT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis )
            // InternalWreslEditorParser.g:7824:2: this_ACOT_0= RULE_ACOT otherlv_1= LeftParenthesis ( (lv_e_2_0= ruleExpression ) ) otherlv_3= RightParenthesis
            {
            this_ACOT_0=(Token)match(input,RULE_ACOT,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ACOT_0, grammarAccess.getAcotFunctionAccess().getACOTTerminalRuleCall_0()); 
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAcotFunctionAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7833:1: ( (lv_e_2_0= ruleExpression ) )
            // InternalWreslEditorParser.g:7834:1: (lv_e_2_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:7834:1: (lv_e_2_0= ruleExpression )
            // InternalWreslEditorParser.g:7835:3: lv_e_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAcotFunctionAccess().getEExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAcotFunctionRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_2_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAcotFunctionAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAcotFunction"


    // $ANTLR start "entryRuleLogicalFunction"
    // InternalWreslEditorParser.g:7864:1: entryRuleLogicalFunction returns [String current=null] : iv_ruleLogicalFunction= ruleLogicalFunction EOF ;
    public final String entryRuleLogicalFunction() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalFunction = null;


        try {
            // InternalWreslEditorParser.g:7865:1: (iv_ruleLogicalFunction= ruleLogicalFunction EOF )
            // InternalWreslEditorParser.g:7866:2: iv_ruleLogicalFunction= ruleLogicalFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalFunction=ruleLogicalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalFunction.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalFunction"


    // $ANTLR start "ruleLogicalFunction"
    // InternalWreslEditorParser.g:7873:1: ruleLogicalFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_RangeFunction_0= ruleRangeFunction ;
    public final AntlrDatatypeRuleToken ruleLogicalFunction() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_RangeFunction_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7877:6: (this_RangeFunction_0= ruleRangeFunction )
            // InternalWreslEditorParser.g:7879:5: this_RangeFunction_0= ruleRangeFunction
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalFunctionAccess().getRangeFunctionParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_RangeFunction_0=ruleRangeFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_RangeFunction_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalFunction"


    // $ANTLR start "entryRuleVarModel"
    // InternalWreslEditorParser.g:7897:1: entryRuleVarModel returns [EObject current=null] : iv_ruleVarModel= ruleVarModel EOF ;
    public final EObject entryRuleVarModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarModel = null;


        try {
            // InternalWreslEditorParser.g:7898:2: (iv_ruleVarModel= ruleVarModel EOF )
            // InternalWreslEditorParser.g:7899:2: iv_ruleVarModel= ruleVarModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarModel=ruleVarModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarModel"


    // $ANTLR start "ruleVarModel"
    // InternalWreslEditorParser.g:7906:1: ruleVarModel returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket ) ;
    public final EObject ruleVarModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7909:28: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket ) )
            // InternalWreslEditorParser.g:7910:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket )
            {
            // InternalWreslEditorParser.g:7910:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket )
            // InternalWreslEditorParser.g:7910:2: ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket
            {
            // InternalWreslEditorParser.g:7910:2: ( (otherlv_0= RULE_ID ) )
            // InternalWreslEditorParser.g:7911:1: (otherlv_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:7911:1: (otherlv_0= RULE_ID )
            // InternalWreslEditorParser.g:7912:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getVarModelRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getVarModelAccess().getRef1DeclarationCrossReference_0_0()); 
              	
            }

            }


            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVarModelAccess().getLeftSquareBracketKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7931:1: ( (otherlv_2= RULE_ID ) )
            // InternalWreslEditorParser.g:7932:1: (otherlv_2= RULE_ID )
            {
            // InternalWreslEditorParser.g:7932:1: (otherlv_2= RULE_ID )
            // InternalWreslEditorParser.g:7933:3: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getVarModelRule());
              	        }
                      
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_2, grammarAccess.getVarModelAccess().getRef2ModelCrossReference_2_0()); 
              	
            }

            }


            }

            otherlv_3=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getVarModelAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarModel"


    // $ANTLR start "entryRuleVarModelStep"
    // InternalWreslEditorParser.g:7960:1: entryRuleVarModelStep returns [EObject current=null] : iv_ruleVarModelStep= ruleVarModelStep EOF ;
    public final EObject entryRuleVarModelStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarModelStep = null;


        try {
            // InternalWreslEditorParser.g:7961:2: (iv_ruleVarModelStep= ruleVarModelStep EOF )
            // InternalWreslEditorParser.g:7962:2: iv_ruleVarModelStep= ruleVarModelStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarModelStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarModelStep=ruleVarModelStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarModelStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarModelStep"


    // $ANTLR start "ruleVarModelStep"
    // InternalWreslEditorParser.g:7969:1: ruleVarModelStep returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket otherlv_4= LeftParenthesis ( (lv_e_5_0= ruleExpression ) ) otherlv_6= RightParenthesis ) ;
    public final EObject ruleVarModelStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_e_5_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:7972:28: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket otherlv_4= LeftParenthesis ( (lv_e_5_0= ruleExpression ) ) otherlv_6= RightParenthesis ) )
            // InternalWreslEditorParser.g:7973:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket otherlv_4= LeftParenthesis ( (lv_e_5_0= ruleExpression ) ) otherlv_6= RightParenthesis )
            {
            // InternalWreslEditorParser.g:7973:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket otherlv_4= LeftParenthesis ( (lv_e_5_0= ruleExpression ) ) otherlv_6= RightParenthesis )
            // InternalWreslEditorParser.g:7973:2: ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket ( (otherlv_2= RULE_ID ) ) otherlv_3= RightSquareBracket otherlv_4= LeftParenthesis ( (lv_e_5_0= ruleExpression ) ) otherlv_6= RightParenthesis
            {
            // InternalWreslEditorParser.g:7973:2: ( (otherlv_0= RULE_ID ) )
            // InternalWreslEditorParser.g:7974:1: (otherlv_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:7974:1: (otherlv_0= RULE_ID )
            // InternalWreslEditorParser.g:7975:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getVarModelStepRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getVarModelStepAccess().getRef1DeclarationCrossReference_0_0()); 
              	
            }

            }


            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVarModelStepAccess().getLeftSquareBracketKeyword_1());
                  
            }
            // InternalWreslEditorParser.g:7994:1: ( (otherlv_2= RULE_ID ) )
            // InternalWreslEditorParser.g:7995:1: (otherlv_2= RULE_ID )
            {
            // InternalWreslEditorParser.g:7995:1: (otherlv_2= RULE_ID )
            // InternalWreslEditorParser.g:7996:3: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getVarModelStepRule());
              	        }
                      
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_2, grammarAccess.getVarModelStepAccess().getRef2ModelCrossReference_2_0()); 
              	
            }

            }


            }

            otherlv_3=(Token)match(input,RightSquareBracket,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getVarModelStepAccess().getRightSquareBracketKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getVarModelStepAccess().getLeftParenthesisKeyword_4());
                  
            }
            // InternalWreslEditorParser.g:8020:1: ( (lv_e_5_0= ruleExpression ) )
            // InternalWreslEditorParser.g:8021:1: (lv_e_5_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:8021:1: (lv_e_5_0= ruleExpression )
            // InternalWreslEditorParser.g:8022:3: lv_e_5_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarModelStepAccess().getEExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_5_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarModelStepRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_5_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getVarModelStepAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarModelStep"


    // $ANTLR start "entryRuleVarModelIndex"
    // InternalWreslEditorParser.g:8051:1: entryRuleVarModelIndex returns [EObject current=null] : iv_ruleVarModelIndex= ruleVarModelIndex EOF ;
    public final EObject entryRuleVarModelIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarModelIndex = null;


        try {
            // InternalWreslEditorParser.g:8052:2: (iv_ruleVarModelIndex= ruleVarModelIndex EOF )
            // InternalWreslEditorParser.g:8053:2: iv_ruleVarModelIndex= ruleVarModelIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarModelIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarModelIndex=ruleVarModelIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarModelIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarModelIndex"


    // $ANTLR start "ruleVarModelIndex"
    // InternalWreslEditorParser.g:8060:1: ruleVarModelIndex returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket ) ;
    public final EObject ruleVarModelIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_INT_3=null;
        Token otherlv_4=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8063:28: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket ) )
            // InternalWreslEditorParser.g:8064:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket )
            {
            // InternalWreslEditorParser.g:8064:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket )
            // InternalWreslEditorParser.g:8064:2: ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket
            {
            // InternalWreslEditorParser.g:8064:2: ( (otherlv_0= RULE_ID ) )
            // InternalWreslEditorParser.g:8065:1: (otherlv_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:8065:1: (otherlv_0= RULE_ID )
            // InternalWreslEditorParser.g:8066:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getVarModelIndexRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getVarModelIndexAccess().getRef1DeclarationCrossReference_0_0()); 
              	
            }

            }


            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVarModelIndexAccess().getLeftSquareBracketKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,HyphenMinus,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getVarModelIndexAccess().getHyphenMinusKeyword_2());
                  
            }
            this_INT_3=(Token)match(input,RULE_INT,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INT_3, grammarAccess.getVarModelIndexAccess().getINTTerminalRuleCall_3()); 
                  
            }
            otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getVarModelIndexAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarModelIndex"


    // $ANTLR start "entryRuleVarModelIndexStep"
    // InternalWreslEditorParser.g:8107:1: entryRuleVarModelIndexStep returns [EObject current=null] : iv_ruleVarModelIndexStep= ruleVarModelIndexStep EOF ;
    public final EObject entryRuleVarModelIndexStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarModelIndexStep = null;


        try {
            // InternalWreslEditorParser.g:8108:2: (iv_ruleVarModelIndexStep= ruleVarModelIndexStep EOF )
            // InternalWreslEditorParser.g:8109:2: iv_ruleVarModelIndexStep= ruleVarModelIndexStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarModelIndexStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarModelIndexStep=ruleVarModelIndexStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarModelIndexStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarModelIndexStep"


    // $ANTLR start "ruleVarModelIndexStep"
    // InternalWreslEditorParser.g:8116:1: ruleVarModelIndexStep returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket otherlv_5= LeftParenthesis ( (lv_e_6_0= ruleExpression ) ) otherlv_7= RightParenthesis ) ;
    public final EObject ruleVarModelIndexStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_INT_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_e_6_0 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8119:28: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket otherlv_5= LeftParenthesis ( (lv_e_6_0= ruleExpression ) ) otherlv_7= RightParenthesis ) )
            // InternalWreslEditorParser.g:8120:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket otherlv_5= LeftParenthesis ( (lv_e_6_0= ruleExpression ) ) otherlv_7= RightParenthesis )
            {
            // InternalWreslEditorParser.g:8120:1: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket otherlv_5= LeftParenthesis ( (lv_e_6_0= ruleExpression ) ) otherlv_7= RightParenthesis )
            // InternalWreslEditorParser.g:8120:2: ( (otherlv_0= RULE_ID ) ) otherlv_1= LeftSquareBracket otherlv_2= HyphenMinus this_INT_3= RULE_INT otherlv_4= RightSquareBracket otherlv_5= LeftParenthesis ( (lv_e_6_0= ruleExpression ) ) otherlv_7= RightParenthesis
            {
            // InternalWreslEditorParser.g:8120:2: ( (otherlv_0= RULE_ID ) )
            // InternalWreslEditorParser.g:8121:1: (otherlv_0= RULE_ID )
            {
            // InternalWreslEditorParser.g:8121:1: (otherlv_0= RULE_ID )
            // InternalWreslEditorParser.g:8122:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {
               
              		  /* */ 
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getVarModelIndexStepRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getVarModelIndexStepAccess().getRef1DeclarationCrossReference_0_0()); 
              	
            }

            }


            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVarModelIndexStepAccess().getLeftSquareBracketKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,HyphenMinus,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getVarModelIndexStepAccess().getHyphenMinusKeyword_2());
                  
            }
            this_INT_3=(Token)match(input,RULE_INT,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INT_3, grammarAccess.getVarModelIndexStepAccess().getINTTerminalRuleCall_3()); 
                  
            }
            otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getVarModelIndexStepAccess().getRightSquareBracketKeyword_4());
                  
            }
            otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getVarModelIndexStepAccess().getLeftParenthesisKeyword_5());
                  
            }
            // InternalWreslEditorParser.g:8160:1: ( (lv_e_6_0= ruleExpression ) )
            // InternalWreslEditorParser.g:8161:1: (lv_e_6_0= ruleExpression )
            {
            // InternalWreslEditorParser.g:8161:1: (lv_e_6_0= ruleExpression )
            // InternalWreslEditorParser.g:8162:3: lv_e_6_0= ruleExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVarModelIndexStepAccess().getEExpressionParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_e_6_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVarModelIndexStepRule());
              	        }
                     		set(
                     			current, 
                     			"e",
                      		lv_e_6_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getVarModelIndexStepAccess().getRightParenthesisKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarModelIndexStep"


    // $ANTLR start "entryRuleRangeFunction"
    // InternalWreslEditorParser.g:8191:1: entryRuleRangeFunction returns [String current=null] : iv_ruleRangeFunction= ruleRangeFunction EOF ;
    public final String entryRuleRangeFunction() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRangeFunction = null;


        try {
            // InternalWreslEditorParser.g:8192:1: (iv_ruleRangeFunction= ruleRangeFunction EOF )
            // InternalWreslEditorParser.g:8193:2: iv_ruleRangeFunction= ruleRangeFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeFunction=ruleRangeFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeFunction.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeFunction"


    // $ANTLR start "ruleRangeFunction"
    // InternalWreslEditorParser.g:8200:1: ruleRangeFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RANGE_0= RULE_RANGE kw= LeftParenthesis (this_ID_2= RULE_ID | this_Month_3= ruleMonth | this_WaterYear_4= ruleWaterYear ) kw= Comma (this_ID_6= RULE_ID | this_CalendarMonth_7= ruleCalendarMonth | this_PrevMonth_8= rulePrevMonth ) kw= Comma (this_ID_10= RULE_ID | this_CalendarMonth_11= ruleCalendarMonth | this_PrevMonth_12= rulePrevMonth ) kw= RightParenthesis ) ;
    public final AntlrDatatypeRuleToken ruleRangeFunction() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RANGE_0=null;
        Token kw=null;
        Token this_ID_2=null;
        Token this_ID_6=null;
        Token this_ID_10=null;
        AntlrDatatypeRuleToken this_Month_3 = null;

        AntlrDatatypeRuleToken this_WaterYear_4 = null;

        AntlrDatatypeRuleToken this_CalendarMonth_7 = null;

        AntlrDatatypeRuleToken this_PrevMonth_8 = null;

        AntlrDatatypeRuleToken this_CalendarMonth_11 = null;

        AntlrDatatypeRuleToken this_PrevMonth_12 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8204:6: ( (this_RANGE_0= RULE_RANGE kw= LeftParenthesis (this_ID_2= RULE_ID | this_Month_3= ruleMonth | this_WaterYear_4= ruleWaterYear ) kw= Comma (this_ID_6= RULE_ID | this_CalendarMonth_7= ruleCalendarMonth | this_PrevMonth_8= rulePrevMonth ) kw= Comma (this_ID_10= RULE_ID | this_CalendarMonth_11= ruleCalendarMonth | this_PrevMonth_12= rulePrevMonth ) kw= RightParenthesis ) )
            // InternalWreslEditorParser.g:8205:1: (this_RANGE_0= RULE_RANGE kw= LeftParenthesis (this_ID_2= RULE_ID | this_Month_3= ruleMonth | this_WaterYear_4= ruleWaterYear ) kw= Comma (this_ID_6= RULE_ID | this_CalendarMonth_7= ruleCalendarMonth | this_PrevMonth_8= rulePrevMonth ) kw= Comma (this_ID_10= RULE_ID | this_CalendarMonth_11= ruleCalendarMonth | this_PrevMonth_12= rulePrevMonth ) kw= RightParenthesis )
            {
            // InternalWreslEditorParser.g:8205:1: (this_RANGE_0= RULE_RANGE kw= LeftParenthesis (this_ID_2= RULE_ID | this_Month_3= ruleMonth | this_WaterYear_4= ruleWaterYear ) kw= Comma (this_ID_6= RULE_ID | this_CalendarMonth_7= ruleCalendarMonth | this_PrevMonth_8= rulePrevMonth ) kw= Comma (this_ID_10= RULE_ID | this_CalendarMonth_11= ruleCalendarMonth | this_PrevMonth_12= rulePrevMonth ) kw= RightParenthesis )
            // InternalWreslEditorParser.g:8205:6: this_RANGE_0= RULE_RANGE kw= LeftParenthesis (this_ID_2= RULE_ID | this_Month_3= ruleMonth | this_WaterYear_4= ruleWaterYear ) kw= Comma (this_ID_6= RULE_ID | this_CalendarMonth_7= ruleCalendarMonth | this_PrevMonth_8= rulePrevMonth ) kw= Comma (this_ID_10= RULE_ID | this_CalendarMonth_11= ruleCalendarMonth | this_PrevMonth_12= rulePrevMonth ) kw= RightParenthesis
            {
            this_RANGE_0=(Token)match(input,RULE_RANGE,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_RANGE_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_RANGE_0, grammarAccess.getRangeFunctionAccess().getRANGETerminalRuleCall_0()); 
                  
            }
            kw=(Token)match(input,LeftParenthesis,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getLeftParenthesisKeyword_1()); 
                  
            }
            // InternalWreslEditorParser.g:8218:1: (this_ID_2= RULE_ID | this_Month_3= ruleMonth | this_WaterYear_4= ruleWaterYear )
            int alt176=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt176=1;
                }
                break;
            case Month:
                {
                alt176=2;
                }
                break;
            case Wateryear:
                {
                alt176=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }

            switch (alt176) {
                case 1 :
                    // InternalWreslEditorParser.g:8218:6: this_ID_2= RULE_ID
                    {
                    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_2, grammarAccess.getRangeFunctionAccess().getIDTerminalRuleCall_2_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8227:5: this_Month_3= ruleMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRangeFunctionAccess().getMonthParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_24);
                    this_Month_3=ruleMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Month_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:8239:5: this_WaterYear_4= ruleWaterYear
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRangeFunctionAccess().getWaterYearParserRuleCall_2_2()); 
                          
                    }
                    pushFollow(FOLLOW_24);
                    this_WaterYear_4=ruleWaterYear();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WaterYear_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            kw=(Token)match(input,Comma,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getCommaKeyword_3()); 
                  
            }
            // InternalWreslEditorParser.g:8255:1: (this_ID_6= RULE_ID | this_CalendarMonth_7= ruleCalendarMonth | this_PrevMonth_8= rulePrevMonth )
            int alt177=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt177=1;
                }
                break;
            case Apr:
            case Aug:
            case Dec:
            case Feb:
            case Jan:
            case Jul:
            case Jun:
            case Mar:
            case May:
            case Nov:
            case Oct:
            case Sep:
                {
                alt177=2;
                }
                break;
            case Prevapr:
            case Prevaug:
            case Prevdec:
            case Prevfeb:
            case Prevjan:
            case Prevjul:
            case Prevjun:
            case Prevmar:
            case Prevmay:
            case Prevnov:
            case Prevoct:
            case Prevsep:
                {
                alt177=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }

            switch (alt177) {
                case 1 :
                    // InternalWreslEditorParser.g:8255:6: this_ID_6= RULE_ID
                    {
                    this_ID_6=(Token)match(input,RULE_ID,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_6, grammarAccess.getRangeFunctionAccess().getIDTerminalRuleCall_4_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8264:5: this_CalendarMonth_7= ruleCalendarMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRangeFunctionAccess().getCalendarMonthParserRuleCall_4_1()); 
                          
                    }
                    pushFollow(FOLLOW_24);
                    this_CalendarMonth_7=ruleCalendarMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CalendarMonth_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:8276:5: this_PrevMonth_8= rulePrevMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRangeFunctionAccess().getPrevMonthParserRuleCall_4_2()); 
                          
                    }
                    pushFollow(FOLLOW_24);
                    this_PrevMonth_8=rulePrevMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrevMonth_8);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            kw=(Token)match(input,Comma,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getCommaKeyword_5()); 
                  
            }
            // InternalWreslEditorParser.g:8292:1: (this_ID_10= RULE_ID | this_CalendarMonth_11= ruleCalendarMonth | this_PrevMonth_12= rulePrevMonth )
            int alt178=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt178=1;
                }
                break;
            case Apr:
            case Aug:
            case Dec:
            case Feb:
            case Jan:
            case Jul:
            case Jun:
            case Mar:
            case May:
            case Nov:
            case Oct:
            case Sep:
                {
                alt178=2;
                }
                break;
            case Prevapr:
            case Prevaug:
            case Prevdec:
            case Prevfeb:
            case Prevjan:
            case Prevjul:
            case Prevjun:
            case Prevmar:
            case Prevmay:
            case Prevnov:
            case Prevoct:
            case Prevsep:
                {
                alt178=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }

            switch (alt178) {
                case 1 :
                    // InternalWreslEditorParser.g:8292:6: this_ID_10= RULE_ID
                    {
                    this_ID_10=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_10);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_10, grammarAccess.getRangeFunctionAccess().getIDTerminalRuleCall_6_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8301:5: this_CalendarMonth_11= ruleCalendarMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRangeFunctionAccess().getCalendarMonthParserRuleCall_6_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_CalendarMonth_11=ruleCalendarMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CalendarMonth_11);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:8313:5: this_PrevMonth_12= rulePrevMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRangeFunctionAccess().getPrevMonthParserRuleCall_6_2()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_PrevMonth_12=rulePrevMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrevMonth_12);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            kw=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getRightParenthesisKeyword_7()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeFunction"


    // $ANTLR start "entryRuleNumber"
    // InternalWreslEditorParser.g:8339:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


        try {
            // InternalWreslEditorParser.g:8340:1: (iv_ruleNumber= ruleNumber EOF )
            // InternalWreslEditorParser.g:8341:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalWreslEditorParser.g:8348:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token this_FLOAT_1=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8352:6: ( (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT ) )
            // InternalWreslEditorParser.g:8353:1: (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT )
            {
            // InternalWreslEditorParser.g:8353:1: (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==RULE_INT) ) {
                alt179=1;
            }
            else if ( (LA179_0==RULE_FLOAT) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalWreslEditorParser.g:8353:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8361:10: this_FLOAT_1= RULE_FLOAT
                    {
                    this_FLOAT_1=(Token)match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FLOAT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_FLOAT_1, grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleIncludeFile"
    // InternalWreslEditorParser.g:8376:1: entryRuleIncludeFile returns [EObject current=null] : iv_ruleIncludeFile= ruleIncludeFile EOF ;
    public final EObject entryRuleIncludeFile() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncludeFile = null;


        try {
            // InternalWreslEditorParser.g:8377:2: (iv_ruleIncludeFile= ruleIncludeFile EOF )
            // InternalWreslEditorParser.g:8378:2: iv_ruleIncludeFile= ruleIncludeFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncludeFileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncludeFile=ruleIncludeFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncludeFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncludeFile"


    // $ANTLR start "ruleIncludeFile"
    // InternalWreslEditorParser.g:8385:1: ruleIncludeFile returns [EObject current=null] : ( (otherlv_0= Include | otherlv_1= Include ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_file_5_0= RULE_STRING ) ) ) ;
    public final EObject ruleIncludeFile() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_local_3_1=null;
        Token lv_local_3_2=null;
        Token otherlv_4=null;
        Token lv_file_5_0=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8388:28: ( ( (otherlv_0= Include | otherlv_1= Include ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_file_5_0= RULE_STRING ) ) ) )
            // InternalWreslEditorParser.g:8389:1: ( (otherlv_0= Include | otherlv_1= Include ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_file_5_0= RULE_STRING ) ) )
            {
            // InternalWreslEditorParser.g:8389:1: ( (otherlv_0= Include | otherlv_1= Include ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_file_5_0= RULE_STRING ) ) )
            // InternalWreslEditorParser.g:8389:2: (otherlv_0= Include | otherlv_1= Include ) (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )? ( (lv_file_5_0= RULE_STRING ) )
            {
            // InternalWreslEditorParser.g:8389:2: (otherlv_0= Include | otherlv_1= Include )
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==Include) ) {
                int LA180_1 = input.LA(2);

                if ( (synpred238_InternalWreslEditorParser()) ) {
                    alt180=1;
                }
                else if ( (true) ) {
                    alt180=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 180, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    // InternalWreslEditorParser.g:8390:2: otherlv_0= Include
                    {
                    otherlv_0=(Token)match(input,Include,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getIncludeFileAccess().getIncludeKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8396:2: otherlv_1= Include
                    {
                    otherlv_1=(Token)match(input,Include,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getIncludeFileAccess().getINCLUDEKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:8400:2: (otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==LeftSquareBracket) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalWreslEditorParser.g:8401:2: otherlv_2= LeftSquareBracket ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) ) otherlv_4= RightSquareBracket
                    {
                    otherlv_2=(Token)match(input,LeftSquareBracket,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getIncludeFileAccess().getLeftSquareBracketKeyword_1_0());
                          
                    }
                    // InternalWreslEditorParser.g:8405:1: ( ( (lv_local_3_1= Local | lv_local_3_2= Local ) ) )
                    // InternalWreslEditorParser.g:8406:1: ( (lv_local_3_1= Local | lv_local_3_2= Local ) )
                    {
                    // InternalWreslEditorParser.g:8406:1: ( (lv_local_3_1= Local | lv_local_3_2= Local ) )
                    // InternalWreslEditorParser.g:8407:1: (lv_local_3_1= Local | lv_local_3_2= Local )
                    {
                    // InternalWreslEditorParser.g:8407:1: (lv_local_3_1= Local | lv_local_3_2= Local )
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==Local) ) {
                        int LA181_1 = input.LA(2);

                        if ( (synpred239_InternalWreslEditorParser()) ) {
                            alt181=1;
                        }
                        else if ( (true) ) {
                            alt181=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 181, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 181, 0, input);

                        throw nvae;
                    }
                    switch (alt181) {
                        case 1 :
                            // InternalWreslEditorParser.g:8408:3: lv_local_3_1= Local
                            {
                            lv_local_3_1=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_1, grammarAccess.getIncludeFileAccess().getLocalLocalKeyword_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIncludeFileRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;
                        case 2 :
                            // InternalWreslEditorParser.g:8421:8: lv_local_3_2= Local
                            {
                            lv_local_3_2=(Token)match(input,Local,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_2, grammarAccess.getIncludeFileAccess().getLocalLOCALKeyword_1_1_0_1());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIncludeFileRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, null);
                              	    
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_4=(Token)match(input,RightSquareBracket,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getIncludeFileAccess().getRightSquareBracketKeyword_1_2());
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:8442:3: ( (lv_file_5_0= RULE_STRING ) )
            // InternalWreslEditorParser.g:8443:1: (lv_file_5_0= RULE_STRING )
            {
            // InternalWreslEditorParser.g:8443:1: (lv_file_5_0= RULE_STRING )
            // InternalWreslEditorParser.g:8444:3: lv_file_5_0= RULE_STRING
            {
            lv_file_5_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_file_5_0, grammarAccess.getIncludeFileAccess().getFileSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIncludeFileRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"file",
                      		lv_file_5_0, 
                      		"gov.ca.dwr.wresl.xtext.editor.WreslEditor.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncludeFile"


    // $ANTLR start "entryRuleIncludeModel"
    // InternalWreslEditorParser.g:8468:1: entryRuleIncludeModel returns [String current=null] : iv_ruleIncludeModel= ruleIncludeModel EOF ;
    public final String entryRuleIncludeModel() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIncludeModel = null;


        try {
            // InternalWreslEditorParser.g:8469:1: (iv_ruleIncludeModel= ruleIncludeModel EOF )
            // InternalWreslEditorParser.g:8470:2: iv_ruleIncludeModel= ruleIncludeModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncludeModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncludeModel=ruleIncludeModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncludeModel.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncludeModel"


    // $ANTLR start "ruleIncludeModel"
    // InternalWreslEditorParser.g:8477:1: ruleIncludeModel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= Include | kw= Include ) (kw= Model | kw= Model ) this_ID_4= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleIncludeModel() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_ID_4=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8481:6: ( ( (kw= Include | kw= Include ) (kw= Model | kw= Model ) this_ID_4= RULE_ID ) )
            // InternalWreslEditorParser.g:8482:1: ( (kw= Include | kw= Include ) (kw= Model | kw= Model ) this_ID_4= RULE_ID )
            {
            // InternalWreslEditorParser.g:8482:1: ( (kw= Include | kw= Include ) (kw= Model | kw= Model ) this_ID_4= RULE_ID )
            // InternalWreslEditorParser.g:8482:2: (kw= Include | kw= Include ) (kw= Model | kw= Model ) this_ID_4= RULE_ID
            {
            // InternalWreslEditorParser.g:8482:2: (kw= Include | kw= Include )
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==Include) ) {
                int LA183_1 = input.LA(2);

                if ( (synpred241_InternalWreslEditorParser()) ) {
                    alt183=1;
                }
                else if ( (true) ) {
                    alt183=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 183, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }
            switch (alt183) {
                case 1 :
                    // InternalWreslEditorParser.g:8483:2: kw= Include
                    {
                    kw=(Token)match(input,Include,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeModelAccess().getIncludeKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8490:2: kw= Include
                    {
                    kw=(Token)match(input,Include,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeModelAccess().getINCLUDEKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:8495:2: (kw= Model | kw= Model )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==Model) ) {
                int LA184_1 = input.LA(2);

                if ( (synpred242_InternalWreslEditorParser()) ) {
                    alt184=1;
                }
                else if ( (true) ) {
                    alt184=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 184, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    // InternalWreslEditorParser.g:8496:2: kw= Model
                    {
                    kw=(Token)match(input,Model,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeModelAccess().getModelKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8503:2: kw= Model
                    {
                    kw=(Token)match(input,Model,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeModelAccess().getMODELKeyword_1_1()); 
                          
                    }

                    }
                    break;

            }

            this_ID_4=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_4);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_4, grammarAccess.getIncludeModelAccess().getIDTerminalRuleCall_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncludeModel"


    // $ANTLR start "entryRuleIncludeGroup"
    // InternalWreslEditorParser.g:8523:1: entryRuleIncludeGroup returns [String current=null] : iv_ruleIncludeGroup= ruleIncludeGroup EOF ;
    public final String entryRuleIncludeGroup() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIncludeGroup = null;


        try {
            // InternalWreslEditorParser.g:8524:1: (iv_ruleIncludeGroup= ruleIncludeGroup EOF )
            // InternalWreslEditorParser.g:8525:2: iv_ruleIncludeGroup= ruleIncludeGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncludeGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncludeGroup=ruleIncludeGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncludeGroup.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncludeGroup"


    // $ANTLR start "ruleIncludeGroup"
    // InternalWreslEditorParser.g:8532:1: ruleIncludeGroup returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= Include | kw= Include ) (kw= Group | kw= Group ) this_ID_4= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleIncludeGroup() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_ID_4=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8536:6: ( ( (kw= Include | kw= Include ) (kw= Group | kw= Group ) this_ID_4= RULE_ID ) )
            // InternalWreslEditorParser.g:8537:1: ( (kw= Include | kw= Include ) (kw= Group | kw= Group ) this_ID_4= RULE_ID )
            {
            // InternalWreslEditorParser.g:8537:1: ( (kw= Include | kw= Include ) (kw= Group | kw= Group ) this_ID_4= RULE_ID )
            // InternalWreslEditorParser.g:8537:2: (kw= Include | kw= Include ) (kw= Group | kw= Group ) this_ID_4= RULE_ID
            {
            // InternalWreslEditorParser.g:8537:2: (kw= Include | kw= Include )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==Include) ) {
                int LA185_1 = input.LA(2);

                if ( (synpred243_InternalWreslEditorParser()) ) {
                    alt185=1;
                }
                else if ( (true) ) {
                    alt185=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 185, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }
            switch (alt185) {
                case 1 :
                    // InternalWreslEditorParser.g:8538:2: kw= Include
                    {
                    kw=(Token)match(input,Include,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeGroupAccess().getIncludeKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8545:2: kw= Include
                    {
                    kw=(Token)match(input,Include,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeGroupAccess().getINCLUDEKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }

            // InternalWreslEditorParser.g:8550:2: (kw= Group | kw= Group )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==Group) ) {
                int LA186_1 = input.LA(2);

                if ( (synpred244_InternalWreslEditorParser()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }
            switch (alt186) {
                case 1 :
                    // InternalWreslEditorParser.g:8551:2: kw= Group
                    {
                    kw=(Token)match(input,Group,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeGroupAccess().getGroupKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8558:2: kw= Group
                    {
                    kw=(Token)match(input,Group,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIncludeGroupAccess().getGROUPKeyword_1_1()); 
                          
                    }

                    }
                    break;

            }

            this_ID_4=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_4);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_4, grammarAccess.getIncludeGroupAccess().getIDTerminalRuleCall_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncludeGroup"


    // $ANTLR start "entryRuleSpecialIdent"
    // InternalWreslEditorParser.g:8578:1: entryRuleSpecialIdent returns [String current=null] : iv_ruleSpecialIdent= ruleSpecialIdent EOF ;
    public final String entryRuleSpecialIdent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSpecialIdent = null;


        try {
            // InternalWreslEditorParser.g:8579:1: (iv_ruleSpecialIdent= ruleSpecialIdent EOF )
            // InternalWreslEditorParser.g:8580:2: iv_ruleSpecialIdent= ruleSpecialIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecialIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialIdent=ruleSpecialIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialIdent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialIdent"


    // $ANTLR start "ruleSpecialIdent"
    // InternalWreslEditorParser.g:8587:1: ruleSpecialIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_TafCfs_0= ruleTafCfs | this_DaysIn_1= ruleDaysIn | this_WaterYear_2= ruleWaterYear | this_Month_3= ruleMonth | this_Day_4= ruleDay | this_CalendarMonth_5= ruleCalendarMonth | this_PrevMonth_6= rulePrevMonth | this_I_7= ruleI ) ;
    public final AntlrDatatypeRuleToken ruleSpecialIdent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_TafCfs_0 = null;

        AntlrDatatypeRuleToken this_DaysIn_1 = null;

        AntlrDatatypeRuleToken this_WaterYear_2 = null;

        AntlrDatatypeRuleToken this_Month_3 = null;

        AntlrDatatypeRuleToken this_Day_4 = null;

        AntlrDatatypeRuleToken this_CalendarMonth_5 = null;

        AntlrDatatypeRuleToken this_PrevMonth_6 = null;

        AntlrDatatypeRuleToken this_I_7 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8591:6: ( (this_TafCfs_0= ruleTafCfs | this_DaysIn_1= ruleDaysIn | this_WaterYear_2= ruleWaterYear | this_Month_3= ruleMonth | this_Day_4= ruleDay | this_CalendarMonth_5= ruleCalendarMonth | this_PrevMonth_6= rulePrevMonth | this_I_7= ruleI ) )
            // InternalWreslEditorParser.g:8592:1: (this_TafCfs_0= ruleTafCfs | this_DaysIn_1= ruleDaysIn | this_WaterYear_2= ruleWaterYear | this_Month_3= ruleMonth | this_Day_4= ruleDay | this_CalendarMonth_5= ruleCalendarMonth | this_PrevMonth_6= rulePrevMonth | this_I_7= ruleI )
            {
            // InternalWreslEditorParser.g:8592:1: (this_TafCfs_0= ruleTafCfs | this_DaysIn_1= ruleDaysIn | this_WaterYear_2= ruleWaterYear | this_Month_3= ruleMonth | this_Day_4= ruleDay | this_CalendarMonth_5= ruleCalendarMonth | this_PrevMonth_6= rulePrevMonth | this_I_7= ruleI )
            int alt187=8;
            switch ( input.LA(1) ) {
            case Cfs_taf:
            case Taf_cfs:
            case Af_cfs:
            case Cfs_af:
                {
                alt187=1;
                }
                break;
            case Daysintimestep:
            case Daysinmonth:
            case Daysin:
                {
                alt187=2;
                }
                break;
            case Wateryear:
                {
                alt187=3;
                }
                break;
            case Month:
                {
                alt187=4;
                }
                break;
            case Day:
                {
                alt187=5;
                }
                break;
            case Apr:
            case Aug:
            case Dec:
            case Feb:
            case Jan:
            case Jul:
            case Jun:
            case Mar:
            case May:
            case Nov:
            case Oct:
            case Sep:
                {
                alt187=6;
                }
                break;
            case Prevapr:
            case Prevaug:
            case Prevdec:
            case Prevfeb:
            case Prevjan:
            case Prevjul:
            case Prevjun:
            case Prevmar:
            case Prevmay:
            case Prevnov:
            case Prevoct:
            case Prevsep:
                {
                alt187=7;
                }
                break;
            case I:
                {
                alt187=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }

            switch (alt187) {
                case 1 :
                    // InternalWreslEditorParser.g:8593:5: this_TafCfs_0= ruleTafCfs
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getTafCfsParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TafCfs_0=ruleTafCfs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_TafCfs_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8605:5: this_DaysIn_1= ruleDaysIn
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getDaysInParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DaysIn_1=ruleDaysIn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DaysIn_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:8617:5: this_WaterYear_2= ruleWaterYear
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getWaterYearParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WaterYear_2=ruleWaterYear();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_WaterYear_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:8629:5: this_Month_3= ruleMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getMonthParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Month_3=ruleMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Month_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:8641:5: this_Day_4= ruleDay
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getDayParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Day_4=ruleDay();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_Day_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:8653:5: this_CalendarMonth_5= ruleCalendarMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getCalendarMonthParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CalendarMonth_5=ruleCalendarMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CalendarMonth_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalWreslEditorParser.g:8665:5: this_PrevMonth_6= rulePrevMonth
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getPrevMonthParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PrevMonth_6=rulePrevMonth();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrevMonth_6);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalWreslEditorParser.g:8677:5: this_I_7= ruleI
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSpecialIdentAccess().getIParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_I_7=ruleI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_I_7);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialIdent"


    // $ANTLR start "entryRuleTafCfs"
    // InternalWreslEditorParser.g:8695:1: entryRuleTafCfs returns [String current=null] : iv_ruleTafCfs= ruleTafCfs EOF ;
    public final String entryRuleTafCfs() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTafCfs = null;


        try {
            // InternalWreslEditorParser.g:8696:1: (iv_ruleTafCfs= ruleTafCfs EOF )
            // InternalWreslEditorParser.g:8697:2: iv_ruleTafCfs= ruleTafCfs EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTafCfsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTafCfs=ruleTafCfs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTafCfs.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTafCfs"


    // $ANTLR start "ruleTafCfs"
    // InternalWreslEditorParser.g:8704:1: ruleTafCfs returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_AF_CFS_0= ruleAF_CFS | this_CF_SAF_1= ruleCF_SAF | this_CFS_TAF_2= ruleCFS_TAF | this_TAF_CFS_3= ruleTAF_CFS ) ;
    public final AntlrDatatypeRuleToken ruleTafCfs() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_AF_CFS_0 = null;

        AntlrDatatypeRuleToken this_CF_SAF_1 = null;

        AntlrDatatypeRuleToken this_CFS_TAF_2 = null;

        AntlrDatatypeRuleToken this_TAF_CFS_3 = null;


         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8708:6: ( (this_AF_CFS_0= ruleAF_CFS | this_CF_SAF_1= ruleCF_SAF | this_CFS_TAF_2= ruleCFS_TAF | this_TAF_CFS_3= ruleTAF_CFS ) )
            // InternalWreslEditorParser.g:8709:1: (this_AF_CFS_0= ruleAF_CFS | this_CF_SAF_1= ruleCF_SAF | this_CFS_TAF_2= ruleCFS_TAF | this_TAF_CFS_3= ruleTAF_CFS )
            {
            // InternalWreslEditorParser.g:8709:1: (this_AF_CFS_0= ruleAF_CFS | this_CF_SAF_1= ruleCF_SAF | this_CFS_TAF_2= ruleCFS_TAF | this_TAF_CFS_3= ruleTAF_CFS )
            int alt188=4;
            switch ( input.LA(1) ) {
            case Af_cfs:
                {
                alt188=1;
                }
                break;
            case Cfs_af:
                {
                alt188=2;
                }
                break;
            case Cfs_taf:
                {
                alt188=3;
                }
                break;
            case Taf_cfs:
                {
                alt188=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }

            switch (alt188) {
                case 1 :
                    // InternalWreslEditorParser.g:8710:5: this_AF_CFS_0= ruleAF_CFS
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTafCfsAccess().getAF_CFSParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AF_CFS_0=ruleAF_CFS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_AF_CFS_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8722:5: this_CF_SAF_1= ruleCF_SAF
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTafCfsAccess().getCF_SAFParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CF_SAF_1=ruleCF_SAF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CF_SAF_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:8734:5: this_CFS_TAF_2= ruleCFS_TAF
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTafCfsAccess().getCFS_TAFParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CFS_TAF_2=ruleCFS_TAF();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CFS_TAF_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:8746:5: this_TAF_CFS_3= ruleTAF_CFS
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTafCfsAccess().getTAF_CFSParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TAF_CFS_3=ruleTAF_CFS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_TAF_CFS_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTafCfs"


    // $ANTLR start "entryRuleI"
    // InternalWreslEditorParser.g:8764:1: entryRuleI returns [String current=null] : iv_ruleI= ruleI EOF ;
    public final String entryRuleI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleI = null;


        try {
            // InternalWreslEditorParser.g:8765:1: (iv_ruleI= ruleI EOF )
            // InternalWreslEditorParser.g:8766:2: iv_ruleI= ruleI EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleI=ruleI();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleI.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleI"


    // $ANTLR start "ruleI"
    // InternalWreslEditorParser.g:8773:1: ruleI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= I ;
    public final AntlrDatatypeRuleToken ruleI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8777:6: (kw= I )
            // InternalWreslEditorParser.g:8779:2: kw= I
            {
            kw=(Token)match(input,I,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getIAccess().getIKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleI"


    // $ANTLR start "entryRuleAF_CFS"
    // InternalWreslEditorParser.g:8792:1: entryRuleAF_CFS returns [String current=null] : iv_ruleAF_CFS= ruleAF_CFS EOF ;
    public final String entryRuleAF_CFS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAF_CFS = null;


        try {
            // InternalWreslEditorParser.g:8793:1: (iv_ruleAF_CFS= ruleAF_CFS EOF )
            // InternalWreslEditorParser.g:8794:2: iv_ruleAF_CFS= ruleAF_CFS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAF_CFSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAF_CFS=ruleAF_CFS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAF_CFS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAF_CFS"


    // $ANTLR start "ruleAF_CFS"
    // InternalWreslEditorParser.g:8801:1: ruleAF_CFS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Af_cfs ;
    public final AntlrDatatypeRuleToken ruleAF_CFS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8805:6: (kw= Af_cfs )
            // InternalWreslEditorParser.g:8807:2: kw= Af_cfs
            {
            kw=(Token)match(input,Af_cfs,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getAF_CFSAccess().getAf_cfsKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAF_CFS"


    // $ANTLR start "entryRuleCF_SAF"
    // InternalWreslEditorParser.g:8820:1: entryRuleCF_SAF returns [String current=null] : iv_ruleCF_SAF= ruleCF_SAF EOF ;
    public final String entryRuleCF_SAF() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCF_SAF = null;


        try {
            // InternalWreslEditorParser.g:8821:1: (iv_ruleCF_SAF= ruleCF_SAF EOF )
            // InternalWreslEditorParser.g:8822:2: iv_ruleCF_SAF= ruleCF_SAF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCF_SAFRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCF_SAF=ruleCF_SAF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCF_SAF.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCF_SAF"


    // $ANTLR start "ruleCF_SAF"
    // InternalWreslEditorParser.g:8829:1: ruleCF_SAF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Cfs_af ;
    public final AntlrDatatypeRuleToken ruleCF_SAF() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8833:6: (kw= Cfs_af )
            // InternalWreslEditorParser.g:8835:2: kw= Cfs_af
            {
            kw=(Token)match(input,Cfs_af,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getCF_SAFAccess().getCfs_afKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCF_SAF"


    // $ANTLR start "entryRuleCFS_TAF"
    // InternalWreslEditorParser.g:8848:1: entryRuleCFS_TAF returns [String current=null] : iv_ruleCFS_TAF= ruleCFS_TAF EOF ;
    public final String entryRuleCFS_TAF() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCFS_TAF = null;


        try {
            // InternalWreslEditorParser.g:8849:1: (iv_ruleCFS_TAF= ruleCFS_TAF EOF )
            // InternalWreslEditorParser.g:8850:2: iv_ruleCFS_TAF= ruleCFS_TAF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCFS_TAFRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCFS_TAF=ruleCFS_TAF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCFS_TAF.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCFS_TAF"


    // $ANTLR start "ruleCFS_TAF"
    // InternalWreslEditorParser.g:8857:1: ruleCFS_TAF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Cfs_taf ;
    public final AntlrDatatypeRuleToken ruleCFS_TAF() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8861:6: (kw= Cfs_taf )
            // InternalWreslEditorParser.g:8863:2: kw= Cfs_taf
            {
            kw=(Token)match(input,Cfs_taf,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getCFS_TAFAccess().getCfs_tafKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCFS_TAF"


    // $ANTLR start "entryRuleTAF_CFS"
    // InternalWreslEditorParser.g:8876:1: entryRuleTAF_CFS returns [String current=null] : iv_ruleTAF_CFS= ruleTAF_CFS EOF ;
    public final String entryRuleTAF_CFS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTAF_CFS = null;


        try {
            // InternalWreslEditorParser.g:8877:1: (iv_ruleTAF_CFS= ruleTAF_CFS EOF )
            // InternalWreslEditorParser.g:8878:2: iv_ruleTAF_CFS= ruleTAF_CFS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTAF_CFSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTAF_CFS=ruleTAF_CFS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTAF_CFS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTAF_CFS"


    // $ANTLR start "ruleTAF_CFS"
    // InternalWreslEditorParser.g:8885:1: ruleTAF_CFS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Taf_cfs ;
    public final AntlrDatatypeRuleToken ruleTAF_CFS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8889:6: (kw= Taf_cfs )
            // InternalWreslEditorParser.g:8891:2: kw= Taf_cfs
            {
            kw=(Token)match(input,Taf_cfs,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTAF_CFSAccess().getTaf_cfsKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTAF_CFS"


    // $ANTLR start "entryRuleDaysIn"
    // InternalWreslEditorParser.g:8904:1: entryRuleDaysIn returns [String current=null] : iv_ruleDaysIn= ruleDaysIn EOF ;
    public final String entryRuleDaysIn() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDaysIn = null;


        try {
            // InternalWreslEditorParser.g:8905:1: (iv_ruleDaysIn= ruleDaysIn EOF )
            // InternalWreslEditorParser.g:8906:2: iv_ruleDaysIn= ruleDaysIn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDaysInRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDaysIn=ruleDaysIn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDaysIn.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDaysIn"


    // $ANTLR start "ruleDaysIn"
    // InternalWreslEditorParser.g:8913:1: ruleDaysIn returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Daysin | kw= Daysinmonth | kw= Daysintimestep ) ;
    public final AntlrDatatypeRuleToken ruleDaysIn() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8917:6: ( (kw= Daysin | kw= Daysinmonth | kw= Daysintimestep ) )
            // InternalWreslEditorParser.g:8918:1: (kw= Daysin | kw= Daysinmonth | kw= Daysintimestep )
            {
            // InternalWreslEditorParser.g:8918:1: (kw= Daysin | kw= Daysinmonth | kw= Daysintimestep )
            int alt189=3;
            switch ( input.LA(1) ) {
            case Daysin:
                {
                alt189=1;
                }
                break;
            case Daysinmonth:
                {
                alt189=2;
                }
                break;
            case Daysintimestep:
                {
                alt189=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }

            switch (alt189) {
                case 1 :
                    // InternalWreslEditorParser.g:8919:2: kw= Daysin
                    {
                    kw=(Token)match(input,Daysin,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getDaysInAccess().getDaysinKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:8926:2: kw= Daysinmonth
                    {
                    kw=(Token)match(input,Daysinmonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getDaysInAccess().getDaysinmonthKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:8933:2: kw= Daysintimestep
                    {
                    kw=(Token)match(input,Daysintimestep,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getDaysInAccess().getDaysintimestepKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDaysIn"


    // $ANTLR start "entryRuleWaterYear"
    // InternalWreslEditorParser.g:8946:1: entryRuleWaterYear returns [String current=null] : iv_ruleWaterYear= ruleWaterYear EOF ;
    public final String entryRuleWaterYear() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleWaterYear = null;


        try {
            // InternalWreslEditorParser.g:8947:1: (iv_ruleWaterYear= ruleWaterYear EOF )
            // InternalWreslEditorParser.g:8948:2: iv_ruleWaterYear= ruleWaterYear EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWaterYearRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWaterYear=ruleWaterYear();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWaterYear.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWaterYear"


    // $ANTLR start "ruleWaterYear"
    // InternalWreslEditorParser.g:8955:1: ruleWaterYear returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Wateryear ;
    public final AntlrDatatypeRuleToken ruleWaterYear() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8959:6: (kw= Wateryear )
            // InternalWreslEditorParser.g:8961:2: kw= Wateryear
            {
            kw=(Token)match(input,Wateryear,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getWaterYearAccess().getWateryearKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWaterYear"


    // $ANTLR start "entryRuleMonth"
    // InternalWreslEditorParser.g:8974:1: entryRuleMonth returns [String current=null] : iv_ruleMonth= ruleMonth EOF ;
    public final String entryRuleMonth() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMonth = null;


        try {
            // InternalWreslEditorParser.g:8975:1: (iv_ruleMonth= ruleMonth EOF )
            // InternalWreslEditorParser.g:8976:2: iv_ruleMonth= ruleMonth EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMonthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMonth=ruleMonth();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMonth.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMonth"


    // $ANTLR start "ruleMonth"
    // InternalWreslEditorParser.g:8983:1: ruleMonth returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Month ;
    public final AntlrDatatypeRuleToken ruleMonth() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:8987:6: (kw= Month )
            // InternalWreslEditorParser.g:8989:2: kw= Month
            {
            kw=(Token)match(input,Month,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getMonthAccess().getMonthKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMonth"


    // $ANTLR start "entryRuleDay"
    // InternalWreslEditorParser.g:9002:1: entryRuleDay returns [String current=null] : iv_ruleDay= ruleDay EOF ;
    public final String entryRuleDay() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDay = null;


        try {
            // InternalWreslEditorParser.g:9003:1: (iv_ruleDay= ruleDay EOF )
            // InternalWreslEditorParser.g:9004:2: iv_ruleDay= ruleDay EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDay=ruleDay();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDay.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDay"


    // $ANTLR start "ruleDay"
    // InternalWreslEditorParser.g:9011:1: ruleDay returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Day ;
    public final AntlrDatatypeRuleToken ruleDay() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:9015:6: (kw= Day )
            // InternalWreslEditorParser.g:9017:2: kw= Day
            {
            kw=(Token)match(input,Day,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getDayAccess().getDayKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDay"


    // $ANTLR start "entryRuleCalendarMonth"
    // InternalWreslEditorParser.g:9030:1: entryRuleCalendarMonth returns [String current=null] : iv_ruleCalendarMonth= ruleCalendarMonth EOF ;
    public final String entryRuleCalendarMonth() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCalendarMonth = null;


        try {
            // InternalWreslEditorParser.g:9031:1: (iv_ruleCalendarMonth= ruleCalendarMonth EOF )
            // InternalWreslEditorParser.g:9032:2: iv_ruleCalendarMonth= ruleCalendarMonth EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCalendarMonthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCalendarMonth=ruleCalendarMonth();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCalendarMonth.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCalendarMonth"


    // $ANTLR start "ruleCalendarMonth"
    // InternalWreslEditorParser.g:9039:1: ruleCalendarMonth returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Jan | kw= Feb | kw= Mar | kw= Apr | kw= May | kw= Jun | kw= Jul | kw= Aug | kw= Sep | kw= Oct | kw= Nov | kw= Dec ) ;
    public final AntlrDatatypeRuleToken ruleCalendarMonth() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:9043:6: ( (kw= Jan | kw= Feb | kw= Mar | kw= Apr | kw= May | kw= Jun | kw= Jul | kw= Aug | kw= Sep | kw= Oct | kw= Nov | kw= Dec ) )
            // InternalWreslEditorParser.g:9044:1: (kw= Jan | kw= Feb | kw= Mar | kw= Apr | kw= May | kw= Jun | kw= Jul | kw= Aug | kw= Sep | kw= Oct | kw= Nov | kw= Dec )
            {
            // InternalWreslEditorParser.g:9044:1: (kw= Jan | kw= Feb | kw= Mar | kw= Apr | kw= May | kw= Jun | kw= Jul | kw= Aug | kw= Sep | kw= Oct | kw= Nov | kw= Dec )
            int alt190=12;
            switch ( input.LA(1) ) {
            case Jan:
                {
                alt190=1;
                }
                break;
            case Feb:
                {
                alt190=2;
                }
                break;
            case Mar:
                {
                alt190=3;
                }
                break;
            case Apr:
                {
                alt190=4;
                }
                break;
            case May:
                {
                alt190=5;
                }
                break;
            case Jun:
                {
                alt190=6;
                }
                break;
            case Jul:
                {
                alt190=7;
                }
                break;
            case Aug:
                {
                alt190=8;
                }
                break;
            case Sep:
                {
                alt190=9;
                }
                break;
            case Oct:
                {
                alt190=10;
                }
                break;
            case Nov:
                {
                alt190=11;
                }
                break;
            case Dec:
                {
                alt190=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }

            switch (alt190) {
                case 1 :
                    // InternalWreslEditorParser.g:9045:2: kw= Jan
                    {
                    kw=(Token)match(input,Jan,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getJanKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:9052:2: kw= Feb
                    {
                    kw=(Token)match(input,Feb,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getFebKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:9059:2: kw= Mar
                    {
                    kw=(Token)match(input,Mar,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getMarKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:9066:2: kw= Apr
                    {
                    kw=(Token)match(input,Apr,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getAprKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:9073:2: kw= May
                    {
                    kw=(Token)match(input,May,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getMayKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:9080:2: kw= Jun
                    {
                    kw=(Token)match(input,Jun,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getJunKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalWreslEditorParser.g:9087:2: kw= Jul
                    {
                    kw=(Token)match(input,Jul,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getJulKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalWreslEditorParser.g:9094:2: kw= Aug
                    {
                    kw=(Token)match(input,Aug,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getAugKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalWreslEditorParser.g:9101:2: kw= Sep
                    {
                    kw=(Token)match(input,Sep,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getSepKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalWreslEditorParser.g:9108:2: kw= Oct
                    {
                    kw=(Token)match(input,Oct,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getOctKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalWreslEditorParser.g:9115:2: kw= Nov
                    {
                    kw=(Token)match(input,Nov,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getNovKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalWreslEditorParser.g:9122:2: kw= Dec
                    {
                    kw=(Token)match(input,Dec,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCalendarMonthAccess().getDecKeyword_11()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCalendarMonth"


    // $ANTLR start "entryRulePrevMonth"
    // InternalWreslEditorParser.g:9135:1: entryRulePrevMonth returns [String current=null] : iv_rulePrevMonth= rulePrevMonth EOF ;
    public final String entryRulePrevMonth() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrevMonth = null;


        try {
            // InternalWreslEditorParser.g:9136:1: (iv_rulePrevMonth= rulePrevMonth EOF )
            // InternalWreslEditorParser.g:9137:2: iv_rulePrevMonth= rulePrevMonth EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrevMonthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrevMonth=rulePrevMonth();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrevMonth.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrevMonth"


    // $ANTLR start "rulePrevMonth"
    // InternalWreslEditorParser.g:9144:1: rulePrevMonth returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Prevjan | kw= Prevfeb | kw= Prevmar | kw= Prevapr | kw= Prevmay | kw= Prevjun | kw= Prevjul | kw= Prevaug | kw= Prevsep | kw= Prevoct | kw= Prevnov | kw= Prevdec ) ;
    public final AntlrDatatypeRuleToken rulePrevMonth() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:9148:6: ( (kw= Prevjan | kw= Prevfeb | kw= Prevmar | kw= Prevapr | kw= Prevmay | kw= Prevjun | kw= Prevjul | kw= Prevaug | kw= Prevsep | kw= Prevoct | kw= Prevnov | kw= Prevdec ) )
            // InternalWreslEditorParser.g:9149:1: (kw= Prevjan | kw= Prevfeb | kw= Prevmar | kw= Prevapr | kw= Prevmay | kw= Prevjun | kw= Prevjul | kw= Prevaug | kw= Prevsep | kw= Prevoct | kw= Prevnov | kw= Prevdec )
            {
            // InternalWreslEditorParser.g:9149:1: (kw= Prevjan | kw= Prevfeb | kw= Prevmar | kw= Prevapr | kw= Prevmay | kw= Prevjun | kw= Prevjul | kw= Prevaug | kw= Prevsep | kw= Prevoct | kw= Prevnov | kw= Prevdec )
            int alt191=12;
            switch ( input.LA(1) ) {
            case Prevjan:
                {
                alt191=1;
                }
                break;
            case Prevfeb:
                {
                alt191=2;
                }
                break;
            case Prevmar:
                {
                alt191=3;
                }
                break;
            case Prevapr:
                {
                alt191=4;
                }
                break;
            case Prevmay:
                {
                alt191=5;
                }
                break;
            case Prevjun:
                {
                alt191=6;
                }
                break;
            case Prevjul:
                {
                alt191=7;
                }
                break;
            case Prevaug:
                {
                alt191=8;
                }
                break;
            case Prevsep:
                {
                alt191=9;
                }
                break;
            case Prevoct:
                {
                alt191=10;
                }
                break;
            case Prevnov:
                {
                alt191=11;
                }
                break;
            case Prevdec:
                {
                alt191=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }

            switch (alt191) {
                case 1 :
                    // InternalWreslEditorParser.g:9150:2: kw= Prevjan
                    {
                    kw=(Token)match(input,Prevjan,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevjanKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:9157:2: kw= Prevfeb
                    {
                    kw=(Token)match(input,Prevfeb,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevfebKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalWreslEditorParser.g:9164:2: kw= Prevmar
                    {
                    kw=(Token)match(input,Prevmar,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevmarKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalWreslEditorParser.g:9171:2: kw= Prevapr
                    {
                    kw=(Token)match(input,Prevapr,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevaprKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalWreslEditorParser.g:9178:2: kw= Prevmay
                    {
                    kw=(Token)match(input,Prevmay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevmayKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalWreslEditorParser.g:9185:2: kw= Prevjun
                    {
                    kw=(Token)match(input,Prevjun,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevjunKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalWreslEditorParser.g:9192:2: kw= Prevjul
                    {
                    kw=(Token)match(input,Prevjul,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevjulKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalWreslEditorParser.g:9199:2: kw= Prevaug
                    {
                    kw=(Token)match(input,Prevaug,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevaugKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalWreslEditorParser.g:9206:2: kw= Prevsep
                    {
                    kw=(Token)match(input,Prevsep,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevsepKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalWreslEditorParser.g:9213:2: kw= Prevoct
                    {
                    kw=(Token)match(input,Prevoct,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevoctKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalWreslEditorParser.g:9220:2: kw= Prevnov
                    {
                    kw=(Token)match(input,Prevnov,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevnovKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalWreslEditorParser.g:9227:2: kw= Prevdec
                    {
                    kw=(Token)match(input,Prevdec,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrevMonthAccess().getPrevdecKeyword_11()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrevMonth"


    // $ANTLR start "entryRuleMultiStep"
    // InternalWreslEditorParser.g:9240:1: entryRuleMultiStep returns [String current=null] : iv_ruleMultiStep= ruleMultiStep EOF ;
    public final String entryRuleMultiStep() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiStep = null;


        try {
            // InternalWreslEditorParser.g:9241:1: (iv_ruleMultiStep= ruleMultiStep EOF )
            // InternalWreslEditorParser.g:9242:2: iv_ruleMultiStep= ruleMultiStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiStep=ruleMultiStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiStep.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiStep"


    // $ANTLR start "ruleMultiStep"
    // InternalWreslEditorParser.g:9249:1: ruleMultiStep returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= M ;
    public final AntlrDatatypeRuleToken ruleMultiStep() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:9253:6: (kw= M )
            // InternalWreslEditorParser.g:9255:2: kw= M
            {
            kw=(Token)match(input,M,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getMultiStepAccess().getMKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiStep"


    // $ANTLR start "entryRuleTimeStep"
    // InternalWreslEditorParser.g:9268:1: entryRuleTimeStep returns [String current=null] : iv_ruleTimeStep= ruleTimeStep EOF ;
    public final String entryRuleTimeStep() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTimeStep = null;


        try {
            // InternalWreslEditorParser.g:9269:1: (iv_ruleTimeStep= ruleTimeStep EOF )
            // InternalWreslEditorParser.g:9270:2: iv_ruleTimeStep= ruleTimeStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTimeStep=ruleTimeStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeStep.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeStep"


    // $ANTLR start "ruleTimeStep"
    // InternalWreslEditorParser.g:9277:1: ruleTimeStep returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= Timestep ;
    public final AntlrDatatypeRuleToken ruleTimeStep() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:9281:6: (kw= Timestep )
            // InternalWreslEditorParser.g:9283:2: kw= Timestep
            {
            kw=(Token)match(input,Timestep,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTimeStepAccess().getTimestepKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeStep"


    // $ANTLR start "entryRuleTimeStepValue"
    // InternalWreslEditorParser.g:9296:1: entryRuleTimeStepValue returns [String current=null] : iv_ruleTimeStepValue= ruleTimeStepValue EOF ;
    public final String entryRuleTimeStepValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTimeStepValue = null;


        try {
            // InternalWreslEditorParser.g:9297:1: (iv_ruleTimeStepValue= ruleTimeStepValue EOF )
            // InternalWreslEditorParser.g:9298:2: iv_ruleTimeStepValue= ruleTimeStepValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTimeStepValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTimeStepValue=ruleTimeStepValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTimeStepValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTimeStepValue"


    // $ANTLR start "ruleTimeStepValue"
    // InternalWreslEditorParser.g:9305:1: ruleTimeStepValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= MON | kw= DAY ) ;
    public final AntlrDatatypeRuleToken ruleTimeStepValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalWreslEditorParser.g:9309:6: ( (kw= MON | kw= DAY ) )
            // InternalWreslEditorParser.g:9310:1: (kw= MON | kw= DAY )
            {
            // InternalWreslEditorParser.g:9310:1: (kw= MON | kw= DAY )
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==MON) ) {
                alt192=1;
            }
            else if ( (LA192_0==DAY) ) {
                alt192=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }
            switch (alt192) {
                case 1 :
                    // InternalWreslEditorParser.g:9311:2: kw= MON
                    {
                    kw=(Token)match(input,MON,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTimeStepValueAccess().getMONKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalWreslEditorParser.g:9318:2: kw= DAY
                    {
                    kw=(Token)match(input,DAY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTimeStepValueAccess().getDAYKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTimeStepValue"

    // $ANTLR start synpred24_InternalWreslEditorParser
    public final void synpred24_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:837:2: (otherlv_0= Objective )
        // InternalWreslEditorParser.g:837:2: otherlv_0= Objective
        {
        otherlv_0=(Token)match(input,Objective,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_InternalWreslEditorParser

    // $ANTLR start synpred25_InternalWreslEditorParser
    public final void synpred25_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_3_1=null;

        // InternalWreslEditorParser.g:855:3: (lv_local_3_1= Local )
        // InternalWreslEditorParser.g:855:3: lv_local_3_1= Local
        {
        lv_local_3_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalWreslEditorParser

    // $ANTLR start synpred31_InternalWreslEditorParser
    public final void synpred31_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:1055:2: (otherlv_0= Define )
        // InternalWreslEditorParser.g:1055:2: otherlv_0= Define
        {
        otherlv_0=(Token)match(input,Define,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalWreslEditorParser

    // $ANTLR start synpred32_InternalWreslEditorParser
    public final void synpred32_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_3_1=null;

        // InternalWreslEditorParser.g:1073:3: (lv_local_3_1= Local )
        // InternalWreslEditorParser.g:1073:3: lv_local_3_1= Local
        {
        lv_local_3_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalWreslEditorParser

    // $ANTLR start synpred34_InternalWreslEditorParser
    public final void synpred34_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:1173:2: (otherlv_0= Define )
        // InternalWreslEditorParser.g:1173:2: otherlv_0= Define
        {
        otherlv_0=(Token)match(input,Define,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalWreslEditorParser

    // $ANTLR start synpred36_InternalWreslEditorParser
    public final void synpred36_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_4_1=null;

        // InternalWreslEditorParser.g:1209:3: (lv_local_4_1= Local )
        // InternalWreslEditorParser.g:1209:3: lv_local_4_1= Local
        {
        lv_local_4_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_InternalWreslEditorParser

    // $ANTLR start synpred39_InternalWreslEditorParser
    public final void synpred39_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_10=null;

        // InternalWreslEditorParser.g:1289:2: (otherlv_10= Svar_1 )
        // InternalWreslEditorParser.g:1289:2: otherlv_10= Svar_1
        {
        otherlv_10=(Token)match(input,Svar_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalWreslEditorParser

    // $ANTLR start synpred40_InternalWreslEditorParser
    public final void synpred40_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_11=null;

        // InternalWreslEditorParser.g:1295:2: (otherlv_11= Svar_1 )
        // InternalWreslEditorParser.g:1295:2: otherlv_11= Svar_1
        {
        otherlv_11=(Token)match(input,Svar_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred40_InternalWreslEditorParser

    // $ANTLR start synpred42_InternalWreslEditorParser
    public final void synpred42_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_15_1=null;

        // InternalWreslEditorParser.g:1331:3: (lv_local_15_1= Local )
        // InternalWreslEditorParser.g:1331:3: lv_local_15_1= Local
        {
        lv_local_15_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalWreslEditorParser

    // $ANTLR start synpred44_InternalWreslEditorParser
    public final void synpred44_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:1431:2: (otherlv_0= Define )
        // InternalWreslEditorParser.g:1431:2: otherlv_0= Define
        {
        otherlv_0=(Token)match(input,Define,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalWreslEditorParser

    // $ANTLR start synpred46_InternalWreslEditorParser
    public final void synpred46_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_4_1=null;

        // InternalWreslEditorParser.g:1467:3: (lv_local_4_1= Local )
        // InternalWreslEditorParser.g:1467:3: lv_local_4_1= Local
        {
        lv_local_4_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalWreslEditorParser

    // $ANTLR start synpred50_InternalWreslEditorParser
    public final void synpred50_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_10=null;

        // InternalWreslEditorParser.g:1565:2: (otherlv_10= Dvar_1 )
        // InternalWreslEditorParser.g:1565:2: otherlv_10= Dvar_1
        {
        otherlv_10=(Token)match(input,Dvar_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_InternalWreslEditorParser

    // $ANTLR start synpred51_InternalWreslEditorParser
    public final void synpred51_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_11=null;

        // InternalWreslEditorParser.g:1571:2: (otherlv_11= Dvar_1 )
        // InternalWreslEditorParser.g:1571:2: otherlv_11= Dvar_1
        {
        otherlv_11=(Token)match(input,Dvar_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_InternalWreslEditorParser

    // $ANTLR start synpred53_InternalWreslEditorParser
    public final void synpred53_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_15_1=null;

        // InternalWreslEditorParser.g:1607:3: (lv_local_15_1= Local )
        // InternalWreslEditorParser.g:1607:3: lv_local_15_1= Local
        {
        lv_local_15_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalWreslEditorParser

    // $ANTLR start synpred56_InternalWreslEditorParser
    public final void synpred56_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:1725:2: (otherlv_0= Const_1 )
        // InternalWreslEditorParser.g:1725:2: otherlv_0= Const_1
        {
        otherlv_0=(Token)match(input,Const_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_InternalWreslEditorParser

    // $ANTLR start synpred57_InternalWreslEditorParser
    public final void synpred57_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalWreslEditorParser.g:1731:2: (otherlv_1= Const_1 )
        // InternalWreslEditorParser.g:1731:2: otherlv_1= Const_1
        {
        otherlv_1=(Token)match(input,Const_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_InternalWreslEditorParser

    // $ANTLR start synpred58_InternalWreslEditorParser
    public final void synpred58_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_4_1=null;

        // InternalWreslEditorParser.g:1749:3: (lv_local_4_1= Local )
        // InternalWreslEditorParser.g:1749:3: lv_local_4_1= Local
        {
        lv_local_4_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_InternalWreslEditorParser

    // $ANTLR start synpred60_InternalWreslEditorParser
    public final void synpred60_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:1849:2: (otherlv_0= Define )
        // InternalWreslEditorParser.g:1849:2: otherlv_0= Define
        {
        otherlv_0=(Token)match(input,Define,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_InternalWreslEditorParser

    // $ANTLR start synpred62_InternalWreslEditorParser
    public final void synpred62_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_4_1=null;

        // InternalWreslEditorParser.g:1885:3: (lv_local_4_1= Local )
        // InternalWreslEditorParser.g:1885:3: lv_local_4_1= Local
        {
        lv_local_4_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalWreslEditorParser

    // $ANTLR start synpred64_InternalWreslEditorParser
    public final void synpred64_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_8=null;

        // InternalWreslEditorParser.g:1941:2: (otherlv_8= Alias )
        // InternalWreslEditorParser.g:1941:2: otherlv_8= Alias
        {
        otherlv_8=(Token)match(input,Alias,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_InternalWreslEditorParser

    // $ANTLR start synpred65_InternalWreslEditorParser
    public final void synpred65_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_11=null;

        // InternalWreslEditorParser.g:1970:2: (otherlv_11= Kind )
        // InternalWreslEditorParser.g:1970:2: otherlv_11= Kind
        {
        otherlv_11=(Token)match(input,Kind,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_InternalWreslEditorParser

    // $ANTLR start synpred67_InternalWreslEditorParser
    public final void synpred67_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_14=null;

        // InternalWreslEditorParser.g:1999:2: (otherlv_14= Units )
        // InternalWreslEditorParser.g:1999:2: otherlv_14= Units
        {
        otherlv_14=(Token)match(input,Units,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_InternalWreslEditorParser

    // $ANTLR start synpred69_InternalWreslEditorParser
    public final void synpred69_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:2054:2: (otherlv_0= External )
        // InternalWreslEditorParser.g:2054:2: otherlv_0= External
        {
        otherlv_0=(Token)match(input,External,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_InternalWreslEditorParser

    // $ANTLR start synpred70_InternalWreslEditorParser
    public final void synpred70_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:2083:2: (otherlv_3= Dll )
        // InternalWreslEditorParser.g:2083:2: otherlv_3= Dll
        {
        otherlv_3=(Token)match(input,Dll,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_InternalWreslEditorParser

    // $ANTLR start synpred73_InternalWreslEditorParser
    public final void synpred73_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalWreslEditorParser.g:2207:2: (otherlv_1= Kind )
        // InternalWreslEditorParser.g:2207:2: otherlv_1= Kind
        {
        otherlv_1=(Token)match(input,Kind,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred73_InternalWreslEditorParser

    // $ANTLR start synpred74_InternalWreslEditorParser
    public final void synpred74_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_4=null;

        // InternalWreslEditorParser.g:2236:2: (otherlv_4= Units )
        // InternalWreslEditorParser.g:2236:2: otherlv_4= Units
        {
        otherlv_4=(Token)match(input,Units,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_InternalWreslEditorParser

    // $ANTLR start synpred75_InternalWreslEditorParser
    public final void synpred75_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:2286:2: (otherlv_0= Std )
        // InternalWreslEditorParser.g:2286:2: otherlv_0= Std
        {
        otherlv_0=(Token)match(input,Std,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred75_InternalWreslEditorParser

    // $ANTLR start synpred76_InternalWreslEditorParser
    public final void synpred76_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_2=null;

        // InternalWreslEditorParser.g:2297:2: (otherlv_2= Kind )
        // InternalWreslEditorParser.g:2297:2: otherlv_2= Kind
        {
        otherlv_2=(Token)match(input,Kind,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred76_InternalWreslEditorParser

    // $ANTLR start synpred77_InternalWreslEditorParser
    public final void synpred77_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_5=null;

        // InternalWreslEditorParser.g:2326:2: (otherlv_5= Units )
        // InternalWreslEditorParser.g:2326:2: otherlv_5= Units
        {
        otherlv_5=(Token)match(input,Units,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred77_InternalWreslEditorParser

    // $ANTLR start synpred79_InternalWreslEditorParser
    public final void synpred79_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:2422:2: (otherlv_0= Integer )
        // InternalWreslEditorParser.g:2422:2: otherlv_0= Integer
        {
        otherlv_0=(Token)match(input,Integer,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_InternalWreslEditorParser

    // $ANTLR start synpred80_InternalWreslEditorParser
    public final void synpred80_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_2=null;

        // InternalWreslEditorParser.g:2433:2: (otherlv_2= Std )
        // InternalWreslEditorParser.g:2433:2: otherlv_2= Std
        {
        otherlv_2=(Token)match(input,Std,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_InternalWreslEditorParser

    // $ANTLR start synpred81_InternalWreslEditorParser
    public final void synpred81_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_4=null;

        // InternalWreslEditorParser.g:2444:2: (otherlv_4= Kind )
        // InternalWreslEditorParser.g:2444:2: otherlv_4= Kind
        {
        otherlv_4=(Token)match(input,Kind,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred81_InternalWreslEditorParser

    // $ANTLR start synpred82_InternalWreslEditorParser
    public final void synpred82_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_7=null;

        // InternalWreslEditorParser.g:2473:2: (otherlv_7= Units )
        // InternalWreslEditorParser.g:2473:2: otherlv_7= Units
        {
        otherlv_7=(Token)match(input,Units,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_InternalWreslEditorParser

    // $ANTLR start synpred83_InternalWreslEditorParser
    public final void synpred83_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:2523:2: (otherlv_0= Integer )
        // InternalWreslEditorParser.g:2523:2: otherlv_0= Integer
        {
        otherlv_0=(Token)match(input,Integer,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_InternalWreslEditorParser

    // $ANTLR start synpred84_InternalWreslEditorParser
    public final void synpred84_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:2546:2: (otherlv_3= Kind )
        // InternalWreslEditorParser.g:2546:2: otherlv_3= Kind
        {
        otherlv_3=(Token)match(input,Kind,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalWreslEditorParser

    // $ANTLR start synpred85_InternalWreslEditorParser
    public final void synpred85_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalWreslEditorParser.g:2575:2: (otherlv_6= Units )
        // InternalWreslEditorParser.g:2575:2: otherlv_6= Units
        {
        otherlv_6=(Token)match(input,Units,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred85_InternalWreslEditorParser

    // $ANTLR start synpred90_InternalWreslEditorParser
    public final void synpred90_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:2710:2: (otherlv_0= Timeseries )
        // InternalWreslEditorParser.g:2710:2: otherlv_0= Timeseries
        {
        otherlv_0=(Token)match(input,Timeseries,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_InternalWreslEditorParser

    // $ANTLR start synpred92_InternalWreslEditorParser
    public final void synpred92_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:2739:2: (otherlv_3= Kind )
        // InternalWreslEditorParser.g:2739:2: otherlv_3= Kind
        {
        otherlv_3=(Token)match(input,Kind,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred92_InternalWreslEditorParser

    // $ANTLR start synpred93_InternalWreslEditorParser
    public final void synpred93_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalWreslEditorParser.g:2768:2: (otherlv_6= Units )
        // InternalWreslEditorParser.g:2768:2: otherlv_6= Units
        {
        otherlv_6=(Token)match(input,Units,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_InternalWreslEditorParser

    // $ANTLR start synpred94_InternalWreslEditorParser
    public final void synpred94_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_9=null;

        // InternalWreslEditorParser.g:2797:2: (otherlv_9= Convert )
        // InternalWreslEditorParser.g:2797:2: otherlv_9= Convert
        {
        otherlv_9=(Token)match(input,Convert,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalWreslEditorParser

    // $ANTLR start synpred96_InternalWreslEditorParser
    public final void synpred96_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:2847:2: (otherlv_0= Value )
        // InternalWreslEditorParser.g:2847:2: otherlv_0= Value
        {
        otherlv_0=(Token)match(input,Value,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalWreslEditorParser

    // $ANTLR start synpred98_InternalWreslEditorParser
    public final void synpred98_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:3014:2: (otherlv_0= Case )
        // InternalWreslEditorParser.g:3014:2: otherlv_0= Case
        {
        otherlv_0=(Token)match(input,Case,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalWreslEditorParser

    // $ANTLR start synpred102_InternalWreslEditorParser
    public final void synpred102_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:3166:2: (otherlv_0= Sum )
        // InternalWreslEditorParser.g:3166:2: otherlv_0= Sum
        {
        otherlv_0=(Token)match(input,Sum,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_InternalWreslEditorParser

    // $ANTLR start synpred105_InternalWreslEditorParser
    public final void synpred105_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:3325:2: (otherlv_0= Value )
        // InternalWreslEditorParser.g:3325:2: otherlv_0= Value
        {
        otherlv_0=(Token)match(input,Value,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalWreslEditorParser

    // $ANTLR start synpred106_InternalWreslEditorParser
    public final void synpred106_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:3375:2: (otherlv_0= Select )
        // InternalWreslEditorParser.g:3375:2: otherlv_0= Select
        {
        otherlv_0=(Token)match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred106_InternalWreslEditorParser

    // $ANTLR start synpred108_InternalWreslEditorParser
    public final void synpred108_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:3422:2: (otherlv_3= From )
        // InternalWreslEditorParser.g:3422:2: otherlv_3= From
        {
        otherlv_3=(Token)match(input,From,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred108_InternalWreslEditorParser

    // $ANTLR start synpred110_InternalWreslEditorParser
    public final void synpred110_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalWreslEditorParser.g:3469:2: (otherlv_6= Given )
        // InternalWreslEditorParser.g:3469:2: otherlv_6= Given
        {
        otherlv_6=(Token)match(input,Given,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalWreslEditorParser

    // $ANTLR start synpred111_InternalWreslEditorParser
    public final void synpred111_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_9=null;

        // InternalWreslEditorParser.g:3498:2: (otherlv_9= Use )
        // InternalWreslEditorParser.g:3498:2: otherlv_9= Use
        {
        otherlv_9=(Token)match(input,Use,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalWreslEditorParser

    // $ANTLR start synpred113_InternalWreslEditorParser
    public final void synpred113_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_12=null;

        // InternalWreslEditorParser.g:3527:2: (otherlv_12= Where )
        // InternalWreslEditorParser.g:3527:2: otherlv_12= Where
        {
        otherlv_12=(Token)match(input,Where,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred113_InternalWreslEditorParser

    // $ANTLR start synpred122_InternalWreslEditorParser
    public final void synpred122_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:3923:2: (otherlv_0= Upper )
        // InternalWreslEditorParser.g:3923:2: otherlv_0= Upper
        {
        otherlv_0=(Token)match(input,Upper,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_InternalWreslEditorParser

    // $ANTLR start synpred123_InternalWreslEditorParser
    public final void synpred123_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:3943:2: (otherlv_3= Unbounded )
        // InternalWreslEditorParser.g:3943:2: otherlv_3= Unbounded
        {
        otherlv_3=(Token)match(input,Unbounded,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalWreslEditorParser

    // $ANTLR start synpred125_InternalWreslEditorParser
    public final void synpred125_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:3994:2: (otherlv_0= Lower )
        // InternalWreslEditorParser.g:3994:2: otherlv_0= Lower
        {
        otherlv_0=(Token)match(input,Lower,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred125_InternalWreslEditorParser

    // $ANTLR start synpred126_InternalWreslEditorParser
    public final void synpred126_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:4014:2: (otherlv_3= Unbounded )
        // InternalWreslEditorParser.g:4014:2: otherlv_3= Unbounded
        {
        otherlv_3=(Token)match(input,Unbounded,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalWreslEditorParser

    // $ANTLR start synpred128_InternalWreslEditorParser
    public final void synpred128_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4065:2: (otherlv_0= Goal )
        // InternalWreslEditorParser.g:4065:2: otherlv_0= Goal
        {
        otherlv_0=(Token)match(input,Goal,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalWreslEditorParser

    // $ANTLR start synpred130_InternalWreslEditorParser
    public final void synpred130_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_4_1=null;

        // InternalWreslEditorParser.g:4101:3: (lv_local_4_1= Local )
        // InternalWreslEditorParser.g:4101:3: lv_local_4_1= Local
        {
        lv_local_4_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalWreslEditorParser

    // $ANTLR start synpred133_InternalWreslEditorParser
    public final void synpred133_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4221:2: (otherlv_0= Lhs )
        // InternalWreslEditorParser.g:4221:2: otherlv_0= Lhs
        {
        otherlv_0=(Token)match(input,Lhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalWreslEditorParser

    // $ANTLR start synpred136_InternalWreslEditorParser
    public final void synpred136_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4308:2: (otherlv_0= Case )
        // InternalWreslEditorParser.g:4308:2: otherlv_0= Case
        {
        otherlv_0=(Token)match(input,Case,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalWreslEditorParser

    // $ANTLR start synpred138_InternalWreslEditorParser
    public final void synpred138_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_5=null;

        // InternalWreslEditorParser.g:4378:2: (otherlv_5= Rhs )
        // InternalWreslEditorParser.g:4378:2: otherlv_5= Rhs
        {
        otherlv_5=(Token)match(input,Rhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalWreslEditorParser

    // $ANTLR start synpred140_InternalWreslEditorParser
    public final void synpred140_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4451:2: (otherlv_0= Rhs )
        // InternalWreslEditorParser.g:4451:2: otherlv_0= Rhs
        {
        otherlv_0=(Token)match(input,Rhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalWreslEditorParser

    // $ANTLR start synpred145_InternalWreslEditorParser
    public final void synpred145_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4613:2: (otherlv_0= Lhs )
        // InternalWreslEditorParser.g:4613:2: otherlv_0= Lhs
        {
        otherlv_0=(Token)match(input,Lhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred145_InternalWreslEditorParser

    // $ANTLR start synpred146_InternalWreslEditorParser
    public final void synpred146_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:4629:2: (otherlv_3= Rhs )
        // InternalWreslEditorParser.g:4629:2: otherlv_3= Rhs
        {
        otherlv_3=(Token)match(input,Rhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred146_InternalWreslEditorParser

    // $ANTLR start synpred147_InternalWreslEditorParser
    public final void synpred147_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalWreslEditorParser.g:4649:2: (otherlv_6= Constrain )
        // InternalWreslEditorParser.g:4649:2: otherlv_6= Constrain
        {
        otherlv_6=(Token)match(input,Constrain,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalWreslEditorParser

    // $ANTLR start synpred149_InternalWreslEditorParser
    public final void synpred149_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4700:2: (otherlv_0= Lhs )
        // InternalWreslEditorParser.g:4700:2: otherlv_0= Lhs
        {
        otherlv_0=(Token)match(input,Lhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalWreslEditorParser

    // $ANTLR start synpred150_InternalWreslEditorParser
    public final void synpred150_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_3=null;

        // InternalWreslEditorParser.g:4716:2: (otherlv_3= Rhs )
        // InternalWreslEditorParser.g:4716:2: otherlv_3= Rhs
        {
        otherlv_3=(Token)match(input,Rhs,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalWreslEditorParser

    // $ANTLR start synpred151_InternalWreslEditorParser
    public final void synpred151_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_6=null;

        // InternalWreslEditorParser.g:4736:2: (otherlv_6= Constrain )
        // InternalWreslEditorParser.g:4736:2: otherlv_6= Constrain
        {
        otherlv_6=(Token)match(input,Constrain,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalWreslEditorParser

    // $ANTLR start synpred153_InternalWreslEditorParser
    public final void synpred153_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4787:2: (otherlv_0= Penalty )
        // InternalWreslEditorParser.g:4787:2: otherlv_0= Penalty
        {
        otherlv_0=(Token)match(input,Penalty,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred153_InternalWreslEditorParser

    // $ANTLR start synpred156_InternalWreslEditorParser
    public final void synpred156_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:4978:2: (otherlv_0= Group )
        // InternalWreslEditorParser.g:4978:2: otherlv_0= Group
        {
        otherlv_0=(Token)match(input,Group,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalWreslEditorParser

    // $ANTLR start synpred159_InternalWreslEditorParser
    public final void synpred159_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:5075:2: (otherlv_0= Model )
        // InternalWreslEditorParser.g:5075:2: otherlv_0= Model
        {
        otherlv_0=(Token)match(input,Model,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred159_InternalWreslEditorParser

    // $ANTLR start synpred162_InternalWreslEditorParser
    public final void synpred162_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:5172:2: (otherlv_0= Initial_1 )
        // InternalWreslEditorParser.g:5172:2: otherlv_0= Initial_1
        {
        otherlv_0=(Token)match(input,Initial_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred162_InternalWreslEditorParser

    // $ANTLR start synpred163_InternalWreslEditorParser
    public final void synpred163_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_1=null;

        // InternalWreslEditorParser.g:5178:2: (otherlv_1= Initial_1 )
        // InternalWreslEditorParser.g:5178:2: otherlv_1= Initial_1
        {
        otherlv_1=(Token)match(input,Initial_1,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalWreslEditorParser

    // $ANTLR start synpred165_InternalWreslEditorParser
    public final void synpred165_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:5238:2: (otherlv_0= Sequence )
        // InternalWreslEditorParser.g:5238:2: otherlv_0= Sequence
        {
        otherlv_0=(Token)match(input,Sequence,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred165_InternalWreslEditorParser

    // $ANTLR start synpred166_InternalWreslEditorParser
    public final void synpred166_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_4=null;

        // InternalWreslEditorParser.g:5272:2: (otherlv_4= Model )
        // InternalWreslEditorParser.g:5272:2: otherlv_4= Model
        {
        otherlv_4=(Token)match(input,Model,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalWreslEditorParser

    // $ANTLR start synpred167_InternalWreslEditorParser
    public final void synpred167_InternalWreslEditorParser_fragment() throws RecognitionException {   
        EObject lv_condition_7_0 = null;


        // InternalWreslEditorParser.g:5299:1: ( (lv_condition_7_0= ruleCondition ) )
        // InternalWreslEditorParser.g:5299:1: (lv_condition_7_0= ruleCondition )
        {
        // InternalWreslEditorParser.g:5299:1: (lv_condition_7_0= ruleCondition )
        // InternalWreslEditorParser.g:5300:3: lv_condition_7_0= ruleCondition
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getSequenceAccess().getConditionConditionParserRuleCall_0_5_0_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_condition_7_0=ruleCondition();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred167_InternalWreslEditorParser

    // $ANTLR start synpred168_InternalWreslEditorParser
    public final void synpred168_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token this_ORDER_8=null;
        Token lv_order_9_0=null;

        // InternalWreslEditorParser.g:5316:4: (this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) ) )
        // InternalWreslEditorParser.g:5316:4: this_ORDER_8= RULE_ORDER ( (lv_order_9_0= RULE_INT ) )
        {
        this_ORDER_8=(Token)match(input,RULE_ORDER,FOLLOW_51); if (state.failed) return ;
        // InternalWreslEditorParser.g:5320:1: ( (lv_order_9_0= RULE_INT ) )
        // InternalWreslEditorParser.g:5321:1: (lv_order_9_0= RULE_INT )
        {
        // InternalWreslEditorParser.g:5321:1: (lv_order_9_0= RULE_INT )
        // InternalWreslEditorParser.g:5322:3: lv_order_9_0= RULE_INT
        {
        lv_order_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred168_InternalWreslEditorParser

    // $ANTLR start synpred173_InternalWreslEditorParser
    public final void synpred173_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:5428:2: (otherlv_0= Condition )
        // InternalWreslEditorParser.g:5428:2: otherlv_0= Condition
        {
        otherlv_0=(Token)match(input,Condition,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred173_InternalWreslEditorParser

    // $ANTLR start synpred178_InternalWreslEditorParser
    public final void synpred178_InternalWreslEditorParser_fragment() throws RecognitionException {   
        EObject lv_e1_0_0 = null;

        EObject lv_e2_2_0 = null;


        // InternalWreslEditorParser.g:5669:2: ( ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) ) )
        // InternalWreslEditorParser.g:5669:2: ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) )
        {
        // InternalWreslEditorParser.g:5669:2: ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) )
        // InternalWreslEditorParser.g:5669:3: ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) )
        {
        // InternalWreslEditorParser.g:5669:3: ( (lv_e1_0_0= ruleExpression ) )
        // InternalWreslEditorParser.g:5670:1: (lv_e1_0_0= ruleExpression )
        {
        // InternalWreslEditorParser.g:5670:1: (lv_e1_0_0= ruleExpression )
        // InternalWreslEditorParser.g:5671:3: lv_e1_0_0= ruleExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getConditionalTermAccess().getE1ExpressionParserRuleCall_0_0_0()); 
          	    
        }
        pushFollow(FOLLOW_80);
        lv_e1_0_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_25);
        ruleRelation();

        state._fsp--;
        if (state.failed) return ;
        // InternalWreslEditorParser.g:5698:1: ( (lv_e2_2_0= ruleExpression ) )
        // InternalWreslEditorParser.g:5699:1: (lv_e2_2_0= ruleExpression )
        {
        // InternalWreslEditorParser.g:5699:1: (lv_e2_2_0= ruleExpression )
        // InternalWreslEditorParser.g:5700:3: lv_e2_2_0= ruleExpression
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getConditionalTermAccess().getE2ExpressionParserRuleCall_0_2_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_e2_2_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred178_InternalWreslEditorParser

    // $ANTLR start synpred180_InternalWreslEditorParser
    public final void synpred180_InternalWreslEditorParser_fragment() throws RecognitionException {   
        // InternalWreslEditorParser.g:5729:7: ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )
        // InternalWreslEditorParser.g:5729:8: ( LeftParenthesis ruleLogicalExpression RightParenthesis )
        {
        // InternalWreslEditorParser.g:5729:8: ( LeftParenthesis ruleLogicalExpression RightParenthesis )
        // InternalWreslEditorParser.g:5730:1: LeftParenthesis ruleLogicalExpression RightParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_12); if (state.failed) return ;
        pushFollow(FOLLOW_16);
        ruleLogicalExpression();

        state._fsp--;
        if (state.failed) return ;
        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred180_InternalWreslEditorParser

    // $ANTLR start synpred238_InternalWreslEditorParser
    public final void synpred238_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalWreslEditorParser.g:8390:2: (otherlv_0= Include )
        // InternalWreslEditorParser.g:8390:2: otherlv_0= Include
        {
        otherlv_0=(Token)match(input,Include,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred238_InternalWreslEditorParser

    // $ANTLR start synpred239_InternalWreslEditorParser
    public final void synpred239_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token lv_local_3_1=null;

        // InternalWreslEditorParser.g:8408:3: (lv_local_3_1= Local )
        // InternalWreslEditorParser.g:8408:3: lv_local_3_1= Local
        {
        lv_local_3_1=(Token)match(input,Local,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred239_InternalWreslEditorParser

    // $ANTLR start synpred241_InternalWreslEditorParser
    public final void synpred241_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalWreslEditorParser.g:8483:2: (kw= Include )
        // InternalWreslEditorParser.g:8483:2: kw= Include
        {
        kw=(Token)match(input,Include,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred241_InternalWreslEditorParser

    // $ANTLR start synpred242_InternalWreslEditorParser
    public final void synpred242_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalWreslEditorParser.g:8496:2: (kw= Model )
        // InternalWreslEditorParser.g:8496:2: kw= Model
        {
        kw=(Token)match(input,Model,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred242_InternalWreslEditorParser

    // $ANTLR start synpred243_InternalWreslEditorParser
    public final void synpred243_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalWreslEditorParser.g:8538:2: (kw= Include )
        // InternalWreslEditorParser.g:8538:2: kw= Include
        {
        kw=(Token)match(input,Include,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred243_InternalWreslEditorParser

    // $ANTLR start synpred244_InternalWreslEditorParser
    public final void synpred244_InternalWreslEditorParser_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalWreslEditorParser.g:8551:2: (kw= Group )
        // InternalWreslEditorParser.g:8551:2: kw= Group
        {
        kw=(Token)match(input,Group,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred244_InternalWreslEditorParser

    // Delegated rules

    public final boolean synpred125_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalWreslEditorParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalWreslEditorParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA166 dfa166 = new DFA166(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\1\46\1\125\2\uffff\1\u0082\1\54\1\143\1\126\1\141\1\6\1\140\1\u0082\1\uffff\1\54\1\143\1\141\1\6\1\u0082";
    static final String dfa_3s = "\1\74\1\u0082\2\uffff\1\u0082\1\54\1\143\1\126\1\141\1\115\2\u0082\1\uffff\1\54\1\143\1\141\1\115\1\u0082";
    static final String dfa_4s = "\2\uffff\1\1\1\2\10\uffff\1\3\5\uffff";
    static final String dfa_5s = "\22\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\2\uffff\1\2\16\uffff\1\3\3\uffff\1\2",
            "\1\4\12\uffff\1\5\41\uffff\1\6",
            "",
            "",
            "\1\7",
            "\1\10",
            "\1\11",
            "\1\12",
            "\1\13",
            "\1\2\5\uffff\1\14\7\uffff\1\3\22\uffff\1\2\1\3\4\uffff\1\3\3\uffff\1\3\1\2\4\uffff\1\2\24\uffff\1\3\1\2",
            "\1\15\41\uffff\1\16",
            "\1\6",
            "",
            "\1\17",
            "\1\20",
            "\1\21",
            "\1\2\15\uffff\1\3\22\uffff\1\2\1\3\4\uffff\1\3\3\uffff\1\3\1\2\4\uffff\1\2\24\uffff\1\3\1\2",
            "\1\16"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "374:1: (this_StateVariable_0= ruleStateVariable | this_DecisionVariable_1= ruleDecisionVariable | this_ExternalDef_2= ruleExternalDef )";
        }
    }
    static final String dfa_7s = "\14\uffff";
    static final String dfa_8s = "\1\46\1\125\1\uffff\1\u0082\1\54\1\143\1\126\1\141\1\24\1\140\1\u0082\1\uffff";
    static final String dfa_9s = "\1\70\1\u0082\1\uffff\1\u0082\1\54\1\143\1\126\1\141\1\114\2\u0082\1\uffff";
    static final String dfa_10s = "\2\uffff\1\1\10\uffff\1\2";
    static final String dfa_11s = "\14\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\21\uffff\1\2",
            "\1\3\12\uffff\1\4\41\uffff\1\5",
            "",
            "\1\6",
            "\1\7",
            "\1\10",
            "\1\11",
            "\1\12",
            "\1\2\23\uffff\1\13\4\uffff\1\2\3\uffff\1\2\32\uffff\1\2",
            "\1\4\41\uffff\1\5",
            "\1\5",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "479:1: (this_DvarDef_0= ruleDvarDef | this_Alias_1= ruleAlias )";
        }
    }
    static final String dfa_13s = "\13\uffff";
    static final String dfa_14s = "\1\uffff\1\12\1\uffff\5\11\3\uffff";
    static final String dfa_15s = "\1\4\1\125\1\uffff\5\125\3\uffff";
    static final String dfa_16s = "\1\u0082\1\140\1\uffff\5\136\3\uffff";
    static final String dfa_17s = "\2\uffff\1\2\5\uffff\1\3\1\4\1\1";
    static final String dfa_18s = "\13\uffff}>";
    static final String[] dfa_19s = {
            "\2\11\5\uffff\1\11\4\uffff\1\5\5\uffff\14\11\1\6\1\3\1\4\1\11\11\uffff\1\7\15\uffff\10\11\1\uffff\4\11\1\uffff\1\11\11\uffff\1\10\14\uffff\1\11\6\uffff\20\10\2\2\7\uffff\1\1",
            "\1\10\10\uffff\1\12\1\uffff\1\10",
            "",
            "\1\10\10\uffff\1\11",
            "\1\10\10\uffff\1\11",
            "\1\10\10\uffff\1\11",
            "\1\10\10\uffff\1\11",
            "\1\10\10\uffff\1\11",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "3700:1: (this_ID_0= RULE_ID | ruleNumber | this_Function_2= ruleFunction | ruleSpecialIdent )";
        }
    }
    static final String dfa_20s = "\12\uffff";
    static final String dfa_21s = "\1\2\11\uffff";
    static final String dfa_22s = "\1\7\1\0\10\uffff";
    static final String dfa_23s = "\1\177\1\0\10\uffff";
    static final String dfa_24s = "\2\uffff\1\2\6\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\10\uffff}>";
    static final String[] dfa_26s = {
            "\1\1\5\uffff\2\2\34\uffff\1\2\2\uffff\1\2\65\uffff\1\2\32\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "5298:3: ( (lv_condition_7_0= ruleCondition ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred167_InternalWreslEditorParser()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\75\uffff";
    static final String dfa_28s = "\1\4\14\uffff\1\0\57\uffff";
    static final String dfa_29s = "\1\u0082\14\uffff\1\0\57\uffff";
    static final String dfa_30s = "\1\uffff\1\1\71\uffff\1\2\1\3";
    static final String dfa_31s = "\15\uffff\1\0\57\uffff}>";
    static final String[] dfa_32s = {
            "\2\1\5\uffff\1\1\4\uffff\1\1\5\uffff\20\1\11\uffff\1\1\15\uffff\10\1\1\uffff\4\1\1\uffff\1\1\3\uffff\1\1\5\uffff\1\15\2\uffff\1\1\1\uffff\1\1\7\uffff\1\1\5\uffff\1\73\22\1\7\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5669:1: ( ( ( (lv_e1_0_0= ruleExpression ) ) ruleRelation ( (lv_e2_2_0= ruleExpression ) ) ) | ruleLogicalFunction | ( ( ( LeftParenthesis ruleLogicalExpression RightParenthesis ) )=> (otherlv_4= LeftParenthesis this_LogicalExpression_5= ruleLogicalExpression otherlv_6= RightParenthesis ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_13 = input.LA(1);

                         
                        int index158_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_InternalWreslEditorParser()) ) {s = 1;}

                        else if ( (synpred180_InternalWreslEditorParser()) ) {s = 60;}

                         
                        input.seek(index158_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\16\uffff";
    static final String dfa_34s = "\1\uffff\1\14\1\uffff\5\12\6\uffff";
    static final String dfa_35s = "\1\4\1\7\1\uffff\5\7\1\uffff\1\4\4\uffff";
    static final String dfa_36s = "\1\u0082\1\177\1\uffff\5\177\1\uffff\1\u0082\4\uffff";
    static final String dfa_37s = "\2\uffff\1\2\5\uffff\1\3\1\uffff\1\5\1\6\1\1\1\4";
    static final String dfa_38s = "\16\uffff}>";
    static final String[] dfa_39s = {
            "\2\12\5\uffff\1\12\4\uffff\1\5\5\uffff\14\12\1\6\1\3\1\4\1\12\11\uffff\1\7\15\uffff\10\12\1\uffff\4\12\1\uffff\1\12\3\uffff\1\13\5\uffff\1\11\14\uffff\1\12\6\uffff\20\10\2\2\7\uffff\1\1",
            "\1\14\5\uffff\2\14\30\uffff\1\14\3\uffff\1\14\1\uffff\2\14\1\uffff\3\14\4\uffff\1\14\3\uffff\1\14\11\uffff\1\14\4\uffff\1\14\2\uffff\2\14\1\uffff\4\14\1\uffff\1\10\6\14\1\uffff\3\14\1\10\1\14\1\uffff\2\14\26\uffff\2\14\2\uffff\1\14",
            "",
            "\1\12\5\uffff\2\12\30\uffff\1\12\3\uffff\1\12\1\uffff\2\12\1\uffff\3\12\4\uffff\1\12\3\uffff\1\12\11\uffff\1\12\4\uffff\1\12\2\uffff\2\12\1\uffff\4\12\1\uffff\1\10\6\12\1\uffff\3\12\1\uffff\1\12\1\uffff\2\12\26\uffff\2\12\2\uffff\1\12",
            "\1\12\5\uffff\2\12\30\uffff\1\12\3\uffff\1\12\1\uffff\2\12\1\uffff\3\12\4\uffff\1\12\3\uffff\1\12\11\uffff\1\12\4\uffff\1\12\2\uffff\2\12\1\uffff\4\12\1\uffff\1\10\6\12\1\uffff\3\12\1\uffff\1\12\1\uffff\2\12\26\uffff\2\12\2\uffff\1\12",
            "\1\12\5\uffff\2\12\30\uffff\1\12\3\uffff\1\12\1\uffff\2\12\1\uffff\3\12\4\uffff\1\12\3\uffff\1\12\11\uffff\1\12\4\uffff\1\12\2\uffff\2\12\1\uffff\4\12\1\uffff\1\10\6\12\1\uffff\3\12\1\uffff\1\12\1\uffff\2\12\26\uffff\2\12\2\uffff\1\12",
            "\1\12\5\uffff\2\12\30\uffff\1\12\3\uffff\1\12\1\uffff\2\12\1\uffff\3\12\4\uffff\1\12\3\uffff\1\12\11\uffff\1\12\4\uffff\1\12\2\uffff\2\12\1\uffff\4\12\1\uffff\1\10\6\12\1\uffff\3\12\1\uffff\1\12\1\uffff\2\12\26\uffff\2\12\2\uffff\1\12",
            "\1\12\5\uffff\2\12\30\uffff\1\12\3\uffff\1\12\1\uffff\2\12\1\uffff\3\12\4\uffff\1\12\3\uffff\1\12\11\uffff\1\12\4\uffff\1\12\2\uffff\2\12\1\uffff\4\12\1\uffff\1\10\6\12\1\uffff\3\12\1\uffff\1\12\1\uffff\2\12\26\uffff\2\12\2\uffff\1\12",
            "",
            "\2\15\5\uffff\1\15\4\uffff\1\15\5\uffff\20\15\11\uffff\1\15\15\uffff\10\15\1\uffff\4\15\1\uffff\1\15\1\uffff\1\10\1\uffff\1\15\5\uffff\1\15\2\uffff\1\15\1\uffff\1\15\7\uffff\1\15\6\uffff\22\15\7\uffff\1\15",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "6086:1: ( ( (otherlv_0= RULE_ID ) ) | ( (lv_n_1_0= ruleNumber ) ) | ( (lv_f_2_0= ruleFunction ) ) | (otherlv_3= LeftParenthesis ( (lv_e_4_0= ruleExpression ) ) otherlv_5= RightParenthesis ) | ( (lv_s_6_0= ruleSpecialIdent ) ) | ruleMultiStep )";
        }
    }
    static final String dfa_40s = "\45\uffff";
    static final String dfa_41s = "\36\uffff\1\41\3\uffff\1\44\2\uffff";
    static final String dfa_42s = "\1\20\6\125\21\uffff\1\132\1\4\1\141\1\171\2\uffff\1\7\1\141\2\uffff\1\7\2\uffff";
    static final String dfa_43s = "\1\u0082\1\140\5\125\21\uffff\2\u0082\1\141\1\171\2\uffff\1\177\1\141\2\uffff\1\177\2\uffff";
    static final String dfa_44s = "\7\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\4\uffff\1\2\1\1\2\uffff\1\25\1\24\1\uffff\1\27\1\26";
    static final String dfa_45s = "\45\uffff}>";
    static final String[] dfa_46s = {
            "\1\4\21\uffff\1\5\1\2\1\3\12\uffff\1\6\45\uffff\1\11\23\uffff\1\10\1\7\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\11\uffff\1\1",
            "\1\31\12\uffff\1\30",
            "\1\31",
            "\1\31",
            "\1\31",
            "\1\31",
            "\1\31",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\33\47\uffff\1\32",
            "\2\35\5\uffff\1\35\4\uffff\1\35\5\uffff\20\35\11\uffff\1\35\15\uffff\10\35\1\uffff\4\35\1\uffff\1\35\3\uffff\1\35\5\uffff\1\35\1\34\1\uffff\1\35\1\uffff\1\35\7\uffff\1\35\6\uffff\22\35\7\uffff\1\35",
            "\1\36",
            "\1\37",
            "",
            "",
            "\1\41\5\uffff\2\41\30\uffff\1\41\3\uffff\1\41\1\uffff\2\41\1\uffff\3\41\4\uffff\1\41\3\uffff\1\41\11\uffff\1\41\4\uffff\1\41\2\uffff\2\41\1\uffff\4\41\1\uffff\1\40\6\41\1\uffff\3\41\1\uffff\1\41\1\uffff\2\41\26\uffff\2\41\2\uffff\1\41",
            "\1\42",
            "",
            "",
            "\1\44\5\uffff\2\44\30\uffff\1\44\3\uffff\1\44\1\uffff\2\44\1\uffff\3\44\4\uffff\1\44\3\uffff\1\44\11\uffff\1\44\4\uffff\1\44\2\uffff\2\44\1\uffff\4\44\1\uffff\1\43\6\44\1\uffff\3\44\1\uffff\1\44\1\uffff\2\44\26\uffff\2\44\2\uffff\1\44",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6221:1: (this_ExternalFunction1_0= ruleExternalFunction1 | this_ExternalFunction2_1= ruleExternalFunction2 | this_MaxFunction_2= ruleMaxFunction | this_MinFunction_3= ruleMinFunction | (otherlv_4= LeftParenthesis this_SumContent_5= ruleSumContent otherlv_6= RightParenthesis ) | this_ModFunction_7= ruleModFunction | this_IntFunction_8= ruleIntFunction | this_AbsFunction_9= ruleAbsFunction | this_RoundFunction_10= ruleRoundFunction | this_PowFunction_11= rulePowFunction | this_LogFunction_12= ruleLogFunction | this_SinFunction_13= ruleSinFunction | this_CosFunction_14= ruleCosFunction | this_TanFunction_15= ruleTanFunction | this_CotFunction_16= ruleCotFunction | this_AsinFunction_17= ruleAsinFunction | this_AcosFunction_18= ruleAcosFunction | this_AtanFunction_19= ruleAtanFunction | this_AcotFunction_20= ruleAcotFunction | this_VarModel_21= ruleVarModel | this_VarModelStep_22= ruleVarModelStep | this_VarModelIndex_23= ruleVarModelIndex | this_VarModelIndexStep_24= ruleVarModelIndexStep )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x1500024000040202L,0x0000002000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000006080L,0x8000001000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000480000006080L,0x8000001000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000480000000002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xE000803FFFC10830L,0x27FFFF0405208BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x1500024000040200L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x1500024000040200L,0x0000001000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000840000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000001100000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000002200000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xE000803FFFC10830L,0x07FFFE0405208BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000100200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0084008000000040L,0x0000000000002000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0002200000100000L,0x0000000000001000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0600000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0801000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0001000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0002200000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0084008000000042L,0x0000000000002000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xE000803FFFC10830L,0x0000000400000BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0004008000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000002400000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0200000004000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0008040000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0xE000803FFFC10830L,0x07FFFE0400200BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000200000000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0002200000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0xE000803FFFC10C30L,0x07FFFE0405208BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xE000803FFFC10830L,0x07FFFE0405208BFFL,0x0000000000000004L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0080000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000020L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000200100L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x00000000E0000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x1500024000040200L,0x0000003000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000082L,0x8000000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000004080L,0x0000001000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000004000L,0x0000001000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0060000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0xE000803FFFC10830L,0x67FFFF0405208BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x1800000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x00000000A00F0000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000002L,0x0000000005000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000008800000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0200000004000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000801C00010800L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x60000003FFC00000L,0x0000000000000BDFL,0x0000000000000004L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000080000000000L});

}