! Stan_NMFS_RPA.wresl
! In April and May, the "base" flows upon which to determine wq releases are 
! defined as the old dfg flows, not the rpa flows.  Now in cycle 6, after
! the pulse period wq release and VAMP release, if there is still any shortage
! to the rpa flow targets, calculate the deficiency and secure a specific 
! release from New Melones to meet it.  

define stanfish_yr_NMFS {select stanf from stan_yr given NMF=NMforecast1 use linear }
define stanfishyrNMFSDV {alias  stanfish_yr_NMFS units 'taf'}

! define the required flow
define StanNMFSmin {
    select  flow from stan_rpa 
    ! OLD -- W/O BO
    ! given   stanyr = stanfish_yrDV[SJRBASE] 
    ! NEW -- W/  BO
    given   stanyr = stanfish_yr_NMFS
    use     linear
    where   month = month }
define StanNMFSmin_dv {alias StanNMFSmin kind 'fish-flow-req' units 'cfs'}

define StanNMFSpulse {
    select  pulse from stan_pulse_rpa 
    ! OLD -- W/O BO
    ! given   stanyr = stanfish_yrDV[SJRBASE] 
    ! NEW -- W/  BO
    given   stanyr = stanfish_yr_NMFS
    use     linear }
define StanNMFSpulse_dv {alias StanNMFSpulse kind 'fish-flow-req' units 'cfs'}

! check status of previous flow solutions to see if there is a need for 
! add'l release from New Melones
define StanNMFSdef {
    case April {
        condition month==APR
        value max(0., (StanNMFSpulse-C_STS059[VAMP_AND_DO])*16./30., 
                      (StanNMFSpulse-C_STS030[VAMP_AND_DO])*16./30.)   ! IMF -- should this be STS017? (was C528)
            + max(0., (StanNMFSmin-C_STS059[SJR_WQ1])*14./30.,  
                      (StanNMFSmin-C_STS030[SJR_WQ1])*14./30.) }       ! IMF -- should this be STS017? (was 528)
    case otherwise {
        condition always
        value 0. }
}
define StanNMFSdef_dv {alias StanNMFSdef kind 'fish-flow-req' units 'cfs'}

! impose the release requirement on New Melones
goal set_C_MELONRPA {C_MELONRPA < StanNMFSdef}
