! wq_defs.wresl

! The following code contains definitions and goals which are common to the pulse 
! and non-pulse Water Quality cycles.  
!*****************************************************************************************

! In March, define the annual cap on releases from New Melones for water quality.
! The cap is based on New Melones forecast.  
define WQRelCapdv          {std kind 'WQ-REL-CAP' units 'TAF'}
define WQRelCap {          
        case March  {condition month==mar select NMWQcap from stan_yr given NMF = NMforecast1 use linear }
        case other  {condition always value WQRelCapdv(-1) } }   
        
goal set_WQRelCap {WQRelCapdv = WQRelCap }   
define remWQrelCap         { std kind 'storage' units 'TAF' }   !remaining WQ cap calculated in Cycle 6       

! define the monthly water quality standard at Vernalis
define VernWQstd           {select WQstd from Vern_WQ_std where month = month }

!*****************************************************************************************
! Define EC for each inflow stream into the San Joaquin basin - accretions, groundwater seepage,
! return flows, surface runoff.  

! Assumptions used in the original wq disaggregation were as follows:
!   EC of local inflows and accretions - 100
!   EC of Stanislaus Accretions and Returns - 380 Oct-Feb, 190 Mar-Sep
!   EC of New Melones Release - 85
!   EC of DMC flows to Mendota Pool - varies by month and year type (EC_Table_MPool.table)
!   EC of many eastside returns - 380 Oct-Feb, 190 Mar-Sep
!   EC of local creek inflow (Newman to Vernalis) - regression equation with monthly coefficients
!   EC of Mud and Salt Slough and Grassland Refuge Returns - monthly lookup

! Upstream basin flows
define EC_SJR221 {select SJR221 from EC_US_Lander where month=month} !SJR at Gravelly Ford
define EC_FRS046 {select FRS016 from EC_US_Lander where month=month} !Fresno River
define EC_CHW028 {select CHW017 from EC_US_Lander where month=month} !Chowchilla River
define EC_CDMOBB {select CDMOBB from EC_US_Lander where month=month} !Cottonwood,Deadman,Mariposa,Owens,Bear,Burns
define EC_FSL012 {select FSL012 from EC_US_Lander where month=month} !Fresno Slough
define EC_JBP006 {select JBP006 from EC_US_Lander where month=month} !James Bypass
define EC_TUO054 {select TUO054 from EC_Eastside  where month=month} !Tuolumne River
define EC_TRLCH  {select TRLCH  from EC_Eastside  where month=month} !Turloch Reservoir
define EC_MDSTO  {select MDSTO  from EC_Eastside  where month=month} !Modesto Reservoir
define EC_MOWWTP {select WWTP   from EC_Eastside  where month=month}
define EC_MDWWTP {select WWTP   from EC_Eastside  where month=month}
define EC_AWWWTP {select WWTP   from EC_Eastside  where month=month}
define EC_TKWWTP {select WWTP   from EC_Eastside  where month=month}
define EC_BANOS  {select BANOS  from EC_WestsideI where month=month} !Banos Creek
define EC_QNT005 {select QNT005 from EC_WestsideI where month=month} !Quinto Creek
define EC_GRZ012 {select GRZ012 from EC_WestsideI where month=month} !Garzas Creek
define EC_ORT009 {select ORT009 from EC_WestsideI where month=month} !Orestimba Creek
define EC_DPC008 {select DPC008 from EC_WestsideI where month=month} !Del Puerto Creek
define EC_ISLUIS {select ISLUIS from EC_WestsideI where month=month} !San Luis Inflow
define EC_ING008 {select ING008 from EC_WestsideI where month=month} !Ingram Creek

define EC_SJR214 {value EC_SJR221} !chowchilla bypass bifurcation -- assume equal to SJR221
define EC_SJR205 {value EC_SJR221} !mendota pool bypass bifurcation -- assume equal to SJR221

define EC_Tracy  {value 750.}
define EC_Banks  {value 750.}


! IMF -- 
! Fix return flows as in CalSimII instead of computing via link-node
! MDOTA    -- EC for inflows from DMC and return flows computed exactly as in CalSimII
!             (note that EC_Mendota_Pool is applied to DMC116 -- EC_DMC116=EC_Mendota_Pool)
! EastSide -- Values in CalSimII were mostly fixed to a 380/190 split or uniform at 100,
!             except for a few return arcs computed as weighted avg of SV inputs. Table values are 
!             implemented here as in CalSimII; weighted averages are NOT implemented, replaced with table values for nearby units.
! WestSide -- Values in CalSimII were mostly calculated as weighted averages of SV inputs. These inputs do not match the 
!             disaggregation in CalSimIII, and SV inputs depend on hydrology and operations used in auxiliary runs (DSM2).
!             For CalSimIII, EC of returns are read from a table. Table values were computed as the monthly mean EC value 
!             over all SV terms used in CalSimII. 
define EC_Mendota_Pool {select EC_Mendota_Pool from EC_Table_MPool where wyt_SAC_cvp=wyt_SAC_cvp, month=month}
define EC_MP_Ag_Return {value  EC_Mendota_Pool + 500.0}
define EC_MP_RF_Return {select MendotaPoolRF from EC_WestSideReturnRF where month=month} 

define EC_R_61_PA1 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_61_PA2 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_61_NA2 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_61_NA3 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_61_NA4 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_61_NA5 {select ReturnAG1 from EC_Eastside where month=month} 
define EC_R_RFS61A {select ReturnAG1 from EC_Eastside where month=month}

define EC_R_62_NA3 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_62_NA4 {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_62_NA5 {select ReturnAG1 from EC_Eastside where month=month}

define EC_R_63_PR1 {select ReturnRF  from EC_Eastside where month=month}
define EC_R_63_PR2 {select ReturnRF  from EC_Eastside where month=month}
define EC_R_63_PR3 {select ReturnRF  from EC_Eastside where month=month}
define EC_R_63_NA4 {select ReturnAG1 from EC_Eastside where month=month}

define EC_R_64_PA1 {select ReturnAG2 from EC_Eastside where month=month}
define EC_R_64_PA2 {select ReturnAG2 from EC_Eastside where month=month}
define EC_R_64_PA3 {select ReturnAG2 from EC_Eastside where month=month}
define EC_R_64_XA  {select ReturnAG1 from EC_Eastside where month=month}
define EC_R_64_NA2 {select ReturnAG2 from EC_Eastside where month=month}

define EC_R_71_PA1 {select MazeAG       from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_PA2 {select MazeAG       from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_PA3 {select MazeAG       from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_PA4 {select PattersonAG  from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_PA5 {select PattersonAG  from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_PA6 {select MudSloughAG  from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_PA7 {select PattersonAG  from EC_WestSideReturnAG where month=month}                                 
define EC_R_71_NA1 {select PattersonAG  from EC_WestSideReturnAG where month=month}                                                  
define EC_R_71_NA2 {select VernalisAG   from EC_WestSideReturnAG where month=month}                                 

define EC_R_72_PA  {select SaltSloughAG from EC_WestSideReturnAG where month=month}                                 
define EC_R_72_PR1 {select MudSloughRF  from EC_WestSideReturnRF where month=month}                                 
define EC_R_72_PR2 {select MudSloughRF  from EC_WestSideReturnRF where month=month}                                 
define EC_R_72_PR3 {select SaltSloughRF from EC_WestSideReturnRF where month=month}                                 
define EC_R_72_PR4 {select SaltSloughRF from EC_WestSideReturnRF where month=month}                                 
define EC_R_72_PR5 {select MudSloughRF  from EC_WestSideReturnRF where month=month}                                 
define EC_R_72_PR6 {select SaltSloughRF from EC_WestSideReturnRF where month=month}                                 
define EC_R_72_XA1 {select SaltSloughAG from EC_WestSideReturnAG where month=month}                                 
define EC_R_72_XA2 {select SaltSloughAG from EC_WestSideReturnAG where month=month}                                 
define EC_R_72_XA3 {select MudSloughAG  from EC_WestSideReturnAG where month=month}                                 
define EC_R_72_NA1 {select PattersonAG  from EC_WestSideReturnAG where month=month}                                 

define EC_R_73_PA1 {select MudSloughAG  from EC_WestSideReturnAG where month=month}                                 
define EC_R_73_PA2 {select SaltSloughAG from EC_WestSideReturnAG where month=month}                                 
define EC_R_73_PA3 {select SaltSloughAG from EC_WestSideReturnAG where month=month}                                 
define EC_R_73_XA  {select SaltSloughAG from EC_WestSideReturnAG where month=month}                                 

define EC_R_91_PA  {value  EC_MP_Ag_Return} 
define EC_R_91_PR  {value  EC_MP_RF_Return}
       
       
! IMF -- 
! These were originally assumed equal to EC_FRS016...
! Added as new variables to allow tuning
define EC_MLRTN   {value 25.0}
define EC_IDBC024 {value 25.0}

!Stanislaus River
define EC_Goodwin {select EC_Goodwin from EC_Table_Stan where month = month}

! Surface Runoff arcs
define EC_SR_64_SJR180 {value 25.0}
define EC_SR_64_EBP005 {value 25.0}
define EC_SR_64_EBP019 {value 25.0}
define EC_SR_64_EBP030 {value 25.0}
define EC_SR_64_EBP032 {value 25.0}
define EC_SR_64_EBP050 {value 25.0}
define EC_SR_63_EBP030 {value 25.0}
define EC_SR_63_EBP032 {value 25.0}
define EC_SR_63_EBP050 {value 25.0}
define EC_SR_63_MCD021 {value 25.0}
define EC_SR_63_SJR134 {value 25.0}
define EC_SR_63_SJR117 {value 25.0}
define EC_SR_62_MCD021 {value 25.0}
define EC_SR_62_SJR081 {value 25.0}
define EC_SR_62_TUO017 {value 25.0}
define EC_SR_61_SJR075 {value 25.0}
define EC_SR_61_SJR070 {value 25.0}
define EC_SR_61_TUO017 {value 25.0}
define EC_SR_61_STS017 {value 25.0}
define EC_SR_71_MSN004 {value 25.0}
define EC_SR_71_SJR117 {value 25.0}
define EC_SR_71_SJR106 {value 25.0}
define EC_SR_71_SJR091 {value 25.0}
define EC_SR_71_SJR075 {value 25.0}
define EC_SR_71_SJR070 {value 25.0}
define EC_SR_72_MSN004 {value 25.0}
define EC_SR_72_SAL006 {value 25.0}
define EC_SR_72_SJR117 {value 25.0}
define EC_SR_72_SJR106 {value 25.0}
define EC_SR_72_SJR091 {value 25.0}
define EC_SR_73_MSN004 {value 25.0}
define EC_SR_73_SLD027 {value 25.0}

! Seepage arcs (used for for seepage GAINS; river EC used for seepage LOSSES)
define EC_SG_DMC070 {value 25.0}
define EC_SG_FSL012 {value 25.0}
define EC_SG_FSL005 {value 25.0}
define EC_SG_MDOTA  {value 25.0}
define EC_SG_SJR201 {value 25.0}
define EC_SG_SJR198 {value 25.0}
define EC_SG_SJR192 {value 25.0}
define EC_SG_SJR185 {value 25.0}
define EC_SG_SJR180 {value 25.0}
define EC_SG_SJR173 {value 25.0}
define EC_SG_SJR166 {value 25.0}
define EC_SG_EBP016 {value 25.0}
define EC_SG_EBP030 {value 25.0}
define EC_SG_EBP048 {value 25.0}
define EC_SG_SJR157 {value 25.0}
define EC_SG_SJR152 {value 25.0}
define EC_SG_SJR145 {value 25.0}
define EC_SG_SJR141 {value 25.0}
define EC_SG_SJR134 {value 25.0}
define EC_SG_SJR123 {value 25.0}
define EC_SG_SJR116 {value 25.0}
define EC_SG_SJR111 {value 25.0}
define EC_SG_SJR106 {value 25.0}
define EC_SG_SJR096 {value 25.0}
define EC_SG_SJR090 {value 25.0}
define EC_SG_SJR081 {value 25.0}
define EC_SG_STS058 {value 25.0}
define EC_SG_STS053 {value 25.0}
define EC_SG_STS050 {value 25.0}
define EC_SG_STS043 {value 25.0}
define EC_SG_STS036 {value 25.0}
define EC_SG_STS030 {value 25.0}
define EC_SG_STS020 {value 25.0}
define EC_SG_SJR072 {value 25.0}
define EC_SG_STS011 {value 25.0}
define EC_SG_TUO022 {value 25.0}
define EC_SG_TUO015 {value 25.0}
define EC_SG_TUO010 {value 25.0}

! REMOVE GP FROM EC EQUATIONS -- 
! RETURN FLOWS ASSUME NO GP CONTRIBUTION (PUMPING==CONSUMPTIVE USE)
/*
! Groundwater pumping arcs
define EC_GP_61 {value 0.0}
define EC_GP_62 {value 0.0}
define EC_GP_63 {value 0.0}
define EC_GP_64 {value 0.0}
define EC_GP_71 {value 0.0}
define EC_GP_72 {value 0.0}
define EC_GP_73 {value 0.0}
define EC_GP_91 {value 0.0}
*/
