! Tuolumne_dems.wresl

! Nancy Parker
! USBR
! Date: 09/03/2002
! Deliveries and operations for Tuolumne River demands.

/*
This file determines surface water diversions from the Tuolumne River.  
Main water users incorporated in this file are Modesto Irrigation District 
and Turlock Irrigation District.

Water supply availability based on New Don Pedro storage and forecasted
inflows, and considering minimum flow requirement needs, is used to determine 
allocations to irrigation district deliveries.  Diversions are made in 
concert with minimum groundwater pumping assumptions.  

Revised by: R. Field, USBR, 09/25/03
Purpose: Indclude addtional M&I, groundwater and M&I return flow arcs.
Revised by: T. Crawford, USBR, 03/10/03
Purpose: Review and comment code
Revised by: C. Olson for Calsim-III 4/22/07
Revised by: N. Parker for CalSimIII 12/09
*/

!############################################################################

! Retrieve FERC min flows from predefined timeseries (excludes Apr-May pulse)
define FERCBASE {timeseries kind 'flow-min-required' units 'cfs' }

! In April, forecast Apr-July inflow to New Don Pedro Reservoir
define TuolAprJulForc_1 {
    case April {
        condition month==apr
        sum(i=0,3,1) I_PEDRO(i)*cfs_taf(i) }
    case otherwise {
        condition always
        value 0. }
    }

define TuolAprJulForc {
    case April {
        condition month==apr
        value TuolAprJulForc_1 + S_PEDRO(-1) }
    case otherwise {
        condition always
        value 0. }
    }

/*
Surface water allocation (as a percent of demand); 
based on New Don Pedro water supply - a function of a table lookup
ForInf      NDP_WS
0           .50
1400        .50
1600        .85
2000        .85
2001        1.0
9999        1.0
*/
! Decision variable for New Don Pedro Water Supply
define NDP_WSdv {std kind 'WATER-SUPPLY' units 'none'}
define NDP_WS {
    case firstyear {
        condition wateryear == 1922 .and. month<=mar
        value 1. }
    case Normal {
        condition month==apr
        select NDP_WS from TuolAllocNormal given ForInf=TuolAprJulForc use linear }
    case otherwise {
        condition always
        value NDP_WSdv(-1) }
}
! Set New Don Pedro water supply equal to the decision variable
goal setNDP_WSdv {NDP_WSdv = NDP_WS}


/*
*******************************Turlock ID************************************
Surface water diversions from Turlock Lake to Turlock ID is 0 if demand is 0;
otherwise the surface water delivery is limited to a % of the applied water demand 
*/
! IMF -- DL is a DV, can't be used in max/min statement...use TotLossFactor instead (AW+DL = AW*(1+sum[loss factors]))
define TotLossFactor_62_NA3 {value EVF_TRLCH_62_NA3 + DPF_TRLCH_62_NA3 + LFF_TRLCH_62_NA3 + OSF_TRLCH_62_NA3}
goal limitD_TRLCH_62_NA3  { D_TRLCH_62_NA3 < max(0.0, 
                                                 NDP_WS*(AWO_62_NA3+AWR_62_NA3)*(1.0+TotLossFactor_62_NA3)
                                                 - GPmin_62_NA3_D - GPmin_62_NA3_P) }
define limit_TRLCH_A {alias max(0.0,NDP_WS*(AWO_62_NA3+AWR_62_NA3)*(1.0+TotLossFactor_62_NA3)
                                    -GPmin_62_NA3_D-GPmin_62_NA3_P) kind 'DELIVERY-LIMIT' units 'CFS'}
                                    
                                    
/*
*******************************Modesto ID************************************
Surface water diversions from Modesto Lake to Modesto ID is 0 if AW is 0;
otherwise the surface water delivery is limited to a percentage (based on NDP supply)
of the applied water plus operations spills plus diversion losses, minus that
which has been otherwise satisfied by minimum ground water pumping.  Surface
sources from the Stanislaus side have higher weights and will be used before
Tuolumne surface water deliveries.
*/
! IMF -- DL is a DV, can't be used in max/min statement...use TotLossFactor instead (AW+DL = AW*(1+sum[loss factors]))
define TotLossFactor_61_NA2 {value EVF_MDSTO_61_NA2 + DPF_MDSTO_61_NA2 + LFF_MDSTO_61_NA2 + OSF_MDSTO_61_NA2}
! RESULTS IN INFEASIBILITY -- LHS LESS THAN ZERO...
!                             CAN'T ADD max(0.0,~~~) BECAUSE OF DVs...
!                             REMOVE RETURNS AND VAMP EXCHANGE FOR NOW SO CAN USE max STATEMENT...
! goal limitD_MDSTO_61_NA2 {
!      lhs  D_MDSTO_61_NA2
!      case zero_demand {
!           condition   AWO_61_NA2+AWR_61_NA2 < 0.01
!           rhs         0.0 }
!      case otherwise   {
!           condition   always
!           rhs         NDP_WS*(AWO_61_NA2+AWR_61_NA2)*(1.0+TotLossFactor_61_NA2)
!                       - D_RFS61B_61_NA2 ! Returns from OID to 61_NA2 
!                       - D_OAK020_61_NA2 ! VAMP exchange from STS to MDSTO 
!                       - GPmin_61_NA2_D - GPmin_61_NA2_P 
!           lhs<rhs     penalty 0.0 }
! }
goal limitD_MDSTO_61_NA2 { D_MDSTO_61_NA2 < max( 0.0, 
                                                 NDP_WS*(AWO_61_NA2+AWR_61_NA2)*(1.0+TotLossFactor_61_NA2)
                                                 ! - D_RFS61B_61_NA2 ! Returns from OID to 61_NA2 
                                                 ! - D_OAK020_61_NA2 ! VAMP exchange from STS to MDSTO 
                                                 - GPmin_61_NA2_D - GPmin_61_NA2_P ) }
define limit_MDSTO_A {alias max(0.0,NDP_WS*(AWO_61_NA2+AWR_61_NA2)*(1.0+TotLossFactor_61_NA2)
                                    !-D_RFS61B_61_NA2 ! Returns from OID to 61_NA2 
                                    !-D_OAK020_61_NA2 ! VAMP exchange from STS to MDSTO 
                                    -GPmin_61_NA2_D-GPmin_61_NA2_P) kind 'DELIVERY-LIMIT' units 'CFS'}

/*
Other Tuolumne Basin Deliveries - controlled by code in constraints-Deliveries.wresl
62_NA1 - Non-District East Demands - gw only
62_NA4 - Riparian demand - limits set up in system files
61_NA3 - Riparian demand - limits set up in system files
61_NU1 - delivery from Modesto Lake is constrained by limits set up in system files
*/

