initial {

	const option_A { 2 }
	svar option_B { value option_A + 1 }
	svar totalflow { value option_A*30 }

}

sequence CYCLE1 {
    model   fiRst
    order   1

}

model firsT { 

	include model why

}

	
model why { 


	define X { std kind 'FLOW-CHANNEL' units 'CFS'}
	define Y { std kind 'FLOW-CHANNEL' units 'CFS'}

	goal g0 { x + y < totalflow }
  
	if int(option_B)==1 {
		
		include 'gOalX1.wresl' 
		include 'goalY1.wresl' 
	
	} 
	elseif int(option_B)==2 {
	
		include 'goAlX2.wresl'
		include 'goAlY2.wresl' 
	
	}
	elseif int(option_B)==3 {
	
		include 'goAlX3.wresl'
		include 'goAlY3.wresl' 
	
	}
	else {	
		include 'goAlX4.wresl'
		include 'goAlY4.wresl'  
	
	}
	
	include 'dummy.wresl'
  
	if 1>0 {
	
		include 'dummy2.wresl'
	}
	
	objective obj {
		[x, 5] 
		[y, 5] 
	}
  
}