plugins{
    id 'library.deps-conventions'
    id 'library.java-conventions'

    // The following plugin is used to build the OSGI bundle
    id 'biz.aQute.bnd.builder' version '6.4.0'
}

configurations {
    windows_x64
}

dependencies {
    api(project(':wrims-core'))
    implementation project(':third-party')

    compileOnly fileTree(dir: '../eclipse-luna-libs', include: ['*.jar'])

    windows_x64("mil.army.usace.hec:javaHeclib:${libs.versions.heclib.get()}@zip")
    testImplementation(libs.bundles.junit5)
}

jar {
    bundle {
        // Bundle plugin does not properly declare dependency on Java configurations,
        // so other projects do not generate jars before the bundle plugin tries to read them.
        // The bundle plugin cannot read non-existent jars, so force an explicit dependency here
        // so that the jars will be built before the Bundle process tries to read them.
        dependsOn(configurations.runtimeClasspath)
    }
}

configurations.configureEach {
    exclude group: "javax.media", module: "jai_core"
    exclude group: "javax.media", module: "jai_codec"
    exclude group: "com.sun.media", module: "jai_imageio"
}


//task to download native libraries (dlls)
tasks.register('getNatives', Sync) { syncTask ->
    syncTask.from configurations.windows_x64.collect { zipTree(it) }
    syncTask.into file("${layout.buildDirectory.asFile.get()}/lib")
}

test {
    useJUnitPlatform()
    dependsOn(getNatives)
    systemProperty "java.library.path", "${layout.buildDirectory.asFile.get()}/lib"
}
